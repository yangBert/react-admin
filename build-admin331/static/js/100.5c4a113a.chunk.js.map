{"version":3,"sources":["pages/doc/css/add.module.css","pages/doc/components/Add.js","pages/common/layer/spinning/index.js","static/js/pagination.js","pages/doc/store/creators.js"],"names":["module","exports","Option","Add","state","productCode","editContent","handleEditorChange","setState","this","props","location","record","title","content","catalogCode","changeProduct","changeEditTitle","BraftEditor","createEditorState","editTitle","editCatalogCode","$$","trim","userNo","localStorage","get","req","data","toHTML","id","save","error","list","map","item","key","value","productName","pageSize","pageNo","className","styles","pageContet","tip","spinning","form","formLine","inline","style","width","onChange","initAllProductList","productAllList","setCatalogCode","docCatalogList","code","name","placeholder","allowClear","e","target","buttonRow","type","button","onClick","to","Component","connect","doc","editState","dispatch","action","creators","editorState","queryNoticeDetail","CHANGE_SPINNING","createPagination","current","total","totalSize","defaultPageSize","showSizeChanger","showQuickJumper","setCatalogCodeAction","types","createSaveAction","spinningAction","url","requestURL","request","res","success","message","okText","onOk","changeEditTitleAction","changeEditorContentAction","history","goBack","notification","push","queryDocCatalogListAction","results","querylistAction","pagination","queryProductlistAction","queryNoticeDetailAction","changeEditorStateAction","publishNoticeAction","getState","notice","params","createChangeParamsAction"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,SAAW,sBAAsB,OAAS,oBAAoB,KAAO,kBAAkB,WAAa,wBAAwB,YAAc,yBAAyB,OAAS,oBAAoB,UAAY,yB,oRCStNC,E,IAAAA,OAEFC,E,2MACJC,MAAQ,CACNC,YAAa,GACbC,YAAa,M,EA+CfC,mBAAqB,SAACD,GACpB,EAAKE,SAAS,CACZF,iB,mFA9CF,GAAIG,KAAKC,MAAMC,SAASP,OAASK,KAAKC,MAAMC,SAASP,MAAMQ,OAAQ,CAAC,IAAD,EACZH,KAAKC,MAAMC,SAASP,MAAMQ,OAAvEC,EADyD,EACzDA,MAAOC,EADkD,EAClDA,QAASC,EADyC,EACzCA,YAAaV,EAD4B,EAC5BA,YACrCI,KAAKO,cAAcX,EAAaU,GAChCN,KAAKC,MAAMO,gBAAgBJ,GAC3BJ,KAAKD,SAAS,CACZH,cACAC,YAAaY,IAAYC,kBAAkBL,UAG7CL,KAAKC,MAAMH,mBAAmBW,IAAYC,kBAAkB,6D,6BAIxD,IAAD,EACkCV,KAAKC,MAApCU,EADH,EACGA,UAAWC,EADd,EACcA,gBACXf,EAAgBG,KAAKL,MAArBE,YACR,GAAwB,KAApBe,EAGG,GAA2B,KAAvBC,IAAGC,KAAKH,GAGZ,GAAoB,KAAhBd,EAAJ,CAIP,IAAMkB,EAASF,IAAGG,aAAaC,IAAI,WAC7BC,EAAM,CACVjB,MAAOD,KAAKC,MACZkB,KAAM,CACJf,MAAOO,EACPN,QAASR,EAAYuB,SACrBd,YAAaM,EACbG,WAIEZ,EAASH,KAAKC,MAAMC,SAASP,OAASK,KAAKC,MAAMC,SAASP,MAAMQ,OAClEA,IACFe,EAAIC,KAAKE,GAAKlB,EAAOkB,IAEvBrB,KAAKC,MAAMqB,KAAKJ,QAlBd,IAAQK,MAAM,6CAHd,IAAQA,MAAM,mDAHd,IAAQA,MAAM,gD,yCAiCCC,GACjB,OAAOA,EAAKC,KAAI,SAAAC,GAAI,OAClB,kBAACjC,EAAD,CAAQkC,IAAKD,EAAK9B,YAAagC,MAAOF,EAAK9B,aAAc8B,EAAKG,kB,oCAIpDjC,EAAaU,GACzBN,KAAKD,SAAS,CACZH,gBAEF,IAAMmB,EAASF,IAAGG,aAAaC,IAAI,WACnCjB,KAAKC,MAAMM,cAAc,CACvBN,MAAOD,KAAKC,MACZK,cACAa,KAAM,CACJvB,cACAmB,SACAe,SAAU,IACVC,OAAQ,O,+BAKJ,IAAD,OACDnC,EAAgBI,KAAKL,MAArBC,YACN,OACE,yBAAKoC,UAAS,UAAKC,IAAOC,WAAZ,sBACZ,uBAAMC,IAAI,aAAaC,SAAUpC,KAAKC,MAAMmC,UAC1C,yBAAKJ,UAAS,UAAKC,IAAOI,KAAZ,cACZ,yBAAKL,UAAS,UAAKC,IAAOK,SAAZ,cACZ,2BAAON,UAAU,YAAjB,6BACA,yBAAKA,UAAS,UAAKC,IAAOM,OAAZ,cACZ,uBACEX,MAAOhC,EACP4C,MAAO,CAAEC,MAAO,QAChBC,SAAU,SAAAd,GAAK,OAAI,EAAKrB,cAAcqB,EAAO,MAE7C,kBAACnC,EAAD,CAAQmC,MAAM,IAAd,sBACC5B,KAAK2C,mBAAmB3C,KAAKC,MAAMC,SAASP,MAAMiD,mBAIzD,yBAAKZ,UAAS,UAAKC,IAAOK,SAAZ,cACZ,2BAAON,UAAU,YAAjB,yCACA,yBAAKA,UAAS,UAAKC,IAAOM,OAAZ,cACZ,uBACEX,MAAO5B,KAAKC,MAAMW,gBAClB4B,MAAO,CAAEC,MAAO,QAChBC,SAAU,SAAAd,GAAK,OAAI,EAAK3B,MAAM4C,eAAejB,KAE7C,kBAACnC,EAAD,CAAQmC,MAAM,IAAd,sBAEE5B,KAAKC,MAAM6C,eAAerB,KAAI,SAAAC,GAAI,OAChC,kBAACjC,EAAD,CAAQkC,IAAKD,EAAKL,GAAIO,MAAOF,EAAKqB,MAAOrB,EAAKsB,YAMxD,yBAAKhB,UAAS,UAAKC,IAAOK,SAAZ,cACZ,2BAAON,UAAU,YAAjB,6BACA,yBAAKA,UAAS,UAAKC,IAAOM,OAAZ,cACZ,uBACEX,MAAO5B,KAAKC,MAAMU,UAClBsC,YAAY,6CACZC,YAAU,EACVR,SAAU,SAAAS,GAAC,OAAI,EAAKlD,MAAMO,gBAAgB2C,EAAEC,OAAOxB,aAM3D,yBAAKI,UAAWC,IAAOoB,WACrB,uBAAQC,KAAK,UAAUtB,UAAS,UAAKC,IAAOsB,QAC1CC,QAAS,kBAAM,EAAKlC,SADtB,4BAGA,kBAAC,IAAD,CAAMmC,GAAG,aACP,uBAAQzB,UAAS,UAAKC,IAAOsB,SAA7B,8BAGJ,yBAAKvB,UAAS,UAAKC,IAAOpC,YAAZ,kBACZ,kBAAC,IAAD,CACEoD,YAAY,6CACZrB,MAAO5B,KAAKL,MAAME,YAClB6C,SAAU1C,KAAKF,4B,GA5IX4D,aA0LHC,uBArCE,SAAAhE,GAAK,MAAK,CACzByC,SAAUzC,EAAMiE,IAAIxB,SACpBU,eAAgBnD,EAAMiE,IAAId,eAC1BlC,gBAAiBjB,EAAMiE,IAAIhD,gBAC3BD,UAAWhB,EAAMiE,IAAIjD,UACrBd,YAAaF,EAAMiE,IAAI/D,YACvBgE,UAAWlE,EAAMiE,IAAIC,cAGH,SAAAC,GAAQ,MAAK,CAC/BvD,cAAe,SAAAW,GACb,IAAM6C,EAASC,IAAmC9C,GAClD4C,EAASC,IAEXlB,eAAgB,SAAA3B,GACd,IAAM6C,EAASC,IAA8B9C,GAC7C4C,EAASC,IAGXzC,KAAM,SAAAJ,GACJ,IAAM6C,EAASC,IAA0B9C,GACzC4C,EAASC,IAEXvD,gBAAiB,SAAAU,GACf,IAAM6C,EAASC,IAA+B9C,GAC9C4C,EAASC,IAEXjE,mBAAoB,SAAAmE,GAClB,IAAMF,EAASC,IAAmCC,EAAY7C,UAC9D0C,EAASC,IAEXG,kBAAmB,SAAAhD,GACjB,IAAM6C,EAASC,IAAiC9C,GAChD4C,EAASC,OAIEJ,CAA+BjE,I,iCCtM9C,WAEe,aAAA0C,GAAQ,MAAK,CAC1BkB,KAAMa,IACN/B,c,iCCJa,SAASgC,EAAiBjD,GACvC,MAAO,CACLkD,QAASlD,EAAKY,OACdD,SAAUX,EAAKW,SACfwC,MAAOnD,EAAKoD,UACZC,gBAAiB,GACjBC,iBAAiB,EACjBC,iBAAiB,GAPrB,mC,yrBCSA,IAmBMC,EAAuB,SAAA/D,GAAe,MAAK,CAC/C0C,KAAMsB,IACNhE,oBAKIiE,EAAmB,SAAA3D,GACvB,OAAO,SAAA4C,GACLA,EAASgB,aAAe,IACxB,IAAMC,EAAM7D,EAAIC,KAAKE,GAAK2D,IAAiCA,IAC3DC,IAAaF,EAAK7D,EAAIC,MAAM,SAAA+D,GAE1B,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACiB+D,EAAI/D,MAAQ+D,EAAI/D,KAArCgE,EADI,EACJA,QAASC,EADL,EACKA,QACbD,EACF,IAAMA,QAAQ,CACZ/E,MAAO,2BACPC,QAAS+E,EACTC,OAAQ,eACRC,KAAM,WACJxB,EAASa,EAAqB,KAC9Bb,EAASyB,EAAsB,KAC/BzB,EAAS0B,EAA0B/E,IAAYC,kBAAkB,4DACjEQ,EAAIjB,MAAMwF,QAAQC,YAItBC,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,aAOzBC,EAA4B,SAAA3E,GAChC,OAAO,SAAA4C,GACLA,EAASgB,aAAe,IACxBG,IAAaD,IAAiC9D,EAAIC,MAAM,SAAA+D,GAEtD,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACuB+D,EAAI/D,MAAQ+D,EAAI/D,KAA3CgE,EADI,EACJA,QAASC,EADL,EACKA,QAASjE,EADd,EACcA,KACtBgE,EACFrB,GArDwBhB,EAqDU3B,EAAK2E,QArDClF,EAqDQM,EAAIZ,YArDS,CACrEgD,KAAMsB,IACN9B,iBACAlC,qBAoDQ+E,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,QA1DE,IAAC9C,EAAgBlC,OAiE5CmF,EAAkB,SAAA7E,GACtB,OAAO,SAAA4C,GACLA,EAASgB,aAAe,IACxBG,IAAaD,IAAiC9D,EAAIC,MAAM,SAAA+D,GAEtD,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACuB+D,EAAI/D,MAAQ+D,EAAI/D,KAA3CgE,EADI,EACJA,QAASC,EADL,EACKA,QAASjE,EADd,EACcA,KAC1B,GAAIgE,EAAS,CACX,IAAMpB,GArFQvC,EAqFgBL,EAAK2E,QArFfE,EAqFwB5B,YAAiBjD,GArFzB,CAC5CmC,KAAMsB,IACNpD,OACAwE,eAmFQlC,EAASC,QAET4B,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,QA3FR,IAACpE,EAAMwE,OAkGxBC,EAAyB,SAAA/E,GAC7B,OAAO,SAAA4C,GACLA,EAASgB,aAAe,IACxBG,IAAaD,KAAgC9D,EAAIC,MAAM,SAAA+D,GAErD,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACuB+D,EAAI/D,MAAQ+D,EAAI/D,KAA3CgE,EADI,EACJA,QAASC,EADL,EACKA,QAASjE,EADd,EACcA,KAC1B,GAAIgE,EAAS,CACX,IAAMpB,GApGcnB,EAoGiBzB,EAAK2E,QApGH,CAC/CxC,KAAMsB,IACNhC,mBAmGQkB,EAASC,QAET4B,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,QA1GD,IAAAhD,OAkHxBsD,EAA0B,SAAAhF,GAC9B,OAAO,SAAC4C,GACNA,EAASgB,aAAe,IACxBG,IAAaD,KAAkC9D,EAAIC,MAAM,SAAA+D,GAEvD,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACuB+D,EAAI/D,MAAQ+D,EAAI/D,KAA3CgE,EADI,EACJA,QAASC,EADL,EACKA,QAASjE,EADd,EACcA,KACtBgE,GACFrB,EAASyB,EAAsBpE,EAAKf,QACpC0D,EAAS0B,EAA0BrE,EAAKd,UACxCyD,EAASqC,EAAwBhF,EAAKxB,SAEtCgG,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,aAOzBQ,EAAsB,SAAAlF,GAC1B,OAAO,SAAC4C,EAAUuC,GAChBvC,EAASgB,aAAe,IACxBG,IAAaD,KAAgC9D,EAAIC,MAAM,SAAA+D,GAErD,GADApB,EAASgB,aAAe,IACpBI,EAAI/D,KAAM,CAAC,IAAD,EACiB+D,EAAI/D,MAAQ+D,EAAI/D,KAArCgE,EADI,EACJA,QAASC,EADL,EACKA,QACbD,EACF,IAAMA,QAAQ,CACZ/E,MAAO,2BACPC,QAAS+E,EACTC,OAAQ,eACRC,KAAM,WACJ,IAAMU,EAAaK,IAAWC,OAAON,WAC/BO,E,yWAAM,IACPF,IAAWC,OAAOC,OADX,CAEVxE,OAAQiE,EAAW3B,QACnBvC,SAAUkE,EAAWlE,WAEvBgC,EAASiC,EAAgB,CAAE9F,MAAOiB,EAAIjB,MAAOkB,KAAMoF,QAIvDZ,YAAa,QAASP,QAGxBlE,EAAIjB,MAAMwF,QAAQG,KAAK,aAOzBY,EAA2B,SAAAD,GAAM,MAAK,CAC1CjD,KAAMsB,IACN2B,WAIIhB,EAAwB,SAAA5E,GAAS,MAAK,CAC1C2C,KAAMsB,IACNjE,cAII6E,EAA4B,SAAA3F,GAAW,MAAK,CAChDyD,KAAMsB,IACN/E,gBAIIsG,EAA0B,SAAAtC,GAAS,MAAK,CAC5CP,KAAMsB,IACNf","file":"static/js/100.5c4a113a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"add_formLine__3wfct\",\"inline\":\"add_inline__1aufw\",\"form\":\"add_form__2NO-L\",\"pageContet\":\"add_pageContet__fEIPL\",\"editContent\":\"add_editContent__9lspN\",\"button\":\"add_button__PzzCK\",\"buttonRow\":\"add_buttonRow__3rBKJ\"};","import React, { Component } from 'react';\nimport { Spin, Input, Button, message, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport * as creators from '../store/creators';\nimport styles from '../css/add.module.css';\nimport BraftEditor from 'braft-editor';\nimport 'braft-editor/dist/index.css';\nimport { Link } from 'react-router-dom';\nimport $$ from 'static/js/base';\n// import DocCatalogModal from './DocCatalogModal';\nconst { Option } = Select;\n\nclass Add extends Component {\n  state = {\n    productCode: \"\",\n    editContent: null\n  }\n  componentDidMount() {\n    if (this.props.location.state && this.props.location.state.record) {\n      const { title, content, catalogCode, productCode } = this.props.location.state.record\n      this.changeProduct(productCode, catalogCode)\n      this.props.changeEditTitle(title)\n      this.setState({\n        productCode,\n        editContent: BraftEditor.createEditorState(content)\n      });\n    } else {\n      this.props.handleEditorChange(BraftEditor.createEditorState('<p>请输入文档内容!</b></p>'))//初始化富文本编辑器\n    }\n  }\n\n  save() {\n    const { editTitle, editCatalogCode } = this.props;\n    const { editContent } = this.state;\n    if (editCatalogCode === \"\") {\n      message.error('请选择文档分类');\n      return\n    } else if ($$.trim(editTitle) === \"\") {\n      message.error('请填写公告标题');\n      return\n    } else if (editContent === \"\") {\n      message.error('请填公告内容');\n      return\n    }\n    const userNo = $$.localStorage.get(\"adminId\")\n    const req = {\n      props: this.props,\n      data: {\n        title: editTitle,\n        content: editContent.toHTML(),\n        catalogCode: editCatalogCode,\n        userNo,\n      }\n    }\n\n    const record = this.props.location.state && this.props.location.state.record\n    if (record) {\n      req.data.id = record.id\n    }\n    this.props.save(req)\n  }\n\n  handleEditorChange = (editContent) => {\n    this.setState({\n      editContent,\n    })\n  }\n\n  initAllProductList(list) {\n    return list.map(item => (\n      <Option key={item.productCode} value={item.productCode}>{item.productName}</Option>\n    ))\n  }\n\n  changeProduct(productCode, catalogCode) {\n    this.setState({\n      productCode\n    });\n    const userNo = $$.localStorage.get(\"adminId\");\n    this.props.changeProduct({\n      props: this.props,\n      catalogCode,\n      data: {\n        productCode,\n        userNo,\n        pageSize: 1000,\n        pageNo: 1,\n      }\n    });\n  }\n\n  render() {\n    var { productCode } = this.state\n    return (\n      <div className={`${styles.pageContet} pageContentColor`}>\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\n          <div className={`${styles.form} clearfix`}>\n            <div className={`${styles.formLine} pullLeft`}>\n              <label className=\"pullLeft\">选择产品:</label>\n              <div className={`${styles.inline} pullLeft`}>\n                <Select\n                  value={productCode}\n                  style={{ width: \"100%\" }}\n                  onChange={value => this.changeProduct(value, \"\")}\n                >\n                  <Option value=\"\">请选择</Option>\n                  {this.initAllProductList(this.props.location.state.productAllList)}\n                </Select>\n              </div>\n            </div>\n            <div className={`${styles.formLine} pullLeft`}>\n              <label className=\"pullLeft\">选择文档分类:</label>\n              <div className={`${styles.inline} pullLeft`}>\n                <Select\n                  value={this.props.editCatalogCode}\n                  style={{ width: \"100%\" }}\n                  onChange={value => this.props.setCatalogCode(value)}\n                >\n                  <Option value=\"\">请选择</Option>\n                  {\n                    this.props.docCatalogList.map(item => (\n                      <Option key={item.id} value={item.code}>{item.name}</Option>\n                    ))\n                  }\n                </Select>\n              </div>\n            </div>\n            <div className={`${styles.formLine} pullLeft`}>\n              <label className=\"pullLeft\">文档标题:</label>\n              <div className={`${styles.inline} pullLeft`}>\n                <Input\n                  value={this.props.editTitle}\n                  placeholder=\"请输入文档标题\"\n                  allowClear\n                  onChange={e => this.props.changeEditTitle(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className={styles.buttonRow}>\n            <Button type=\"primary\" className={`${styles.button}`}\n              onClick={() => this.save()}\n            >保存文档</Button>\n            <Link to=\"/doc/list\">\n              <Button className={`${styles.button}`}>返回列表</Button>\n            </Link>\n          </div>\n          <div className={`${styles.editContent} my-component`}>\n            <BraftEditor\n              placeholder=\"请输入正文内容\"\n              value={this.state.editContent}\n              onChange={this.handleEditorChange}\n            />\n          </div>\n        </Spin>\n      </div >\n    )\n  }\n}\n\nconst mapState = state => ({\n  spinning: state.doc.spinning,\n  docCatalogList: state.doc.docCatalogList,\n  editCatalogCode: state.doc.editCatalogCode,\n  editTitle: state.doc.editTitle,\n  editContent: state.doc.editContent,\n  editState: state.doc.editState,\n})\n\nconst mapDispatch = dispatch => ({\n  changeProduct: req => {\n    const action = creators.queryDocCatalogListAction(req);\n    dispatch(action);\n  },\n  setCatalogCode: req => {\n    const action = creators.setCatalogCodeAction(req);\n    dispatch(action);\n  },\n\n  save: req => {\n    const action = creators.createSaveAction(req);\n    dispatch(action);\n  },\n  changeEditTitle: req => {\n    const action = creators.changeEditTitleAction(req);\n    dispatch(action);\n  },\n  handleEditorChange: editorState => {\n    const action = creators.changeEditorContentAction(editorState.toHTML());\n    dispatch(action);\n  },\n  queryNoticeDetail: req => {\n    const action = creators.queryNoticeDetailAction(req);\n    dispatch(action);\n  },\n})\n\nexport default connect(mapState, mapDispatch)(Add);","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n","export default function createPagination(data) {\n  return {\n    current: data.pageNo,\n    pageSize: data.pageSize,\n    total: data.totalSize,\n    defaultPageSize: 10,\n    showSizeChanger: true,\n    showQuickJumper: true\n  }\n} ","import * as types from './actionTypes';\nimport * as requestURL from 'static/js/requestURL';\nimport * as request from 'static/js/request';\nimport spinningAction from 'pages/common/layer/spinning';\nimport notification from 'pages/common/layer/notification';\nimport createPagination from 'static/js/pagination';\nimport { Modal } from 'antd'\nimport BraftEditor from 'braft-editor';\n\nconst initlistAction = (list, pagination) => ({\n  type: types.QUERY_LIST,\n  list,\n  pagination\n})\n\nconst initProductListAction = productAllList => ({\n  type: types.INIT_PRODUCT_ALL_LIST,\n  productAllList,\n})\n\n//初始化文档分类\nconst initDocCatalogListAction = (docCatalogList, editCatalogCode) => ({\n  type: types.QUERY_DOCCATALOG_LIST,\n  docCatalogList,\n  editCatalogCode,\n})\n\n//change文档分类\nconst setCatalogCodeAction = editCatalogCode => ({\n  type: types.SET_EDIT_CATALOGO_CODE,\n  editCatalogCode,\n})\n\n\n//保存文档\nconst createSaveAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    const url = req.data.id ? requestURL.docUpdateDocContent : requestURL.docAddDocContent\n    request.json(url, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message } = res.data && res.data\n        if (success) {\n          Modal.success({\n            title: '系统提示',\n            content: message,\n            okText: '确认',\n            onOk: () => {\n              dispatch(setCatalogCodeAction(\"\"))\n              dispatch(changeEditTitleAction(\"\"))\n              dispatch(changeEditorContentAction(BraftEditor.createEditorState('<p>请输入文档内容!</b></p>')))\n              req.props.history.goBack()\n            }\n          });\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//查询目录列表\nconst queryDocCatalogListAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.docQueryCatalogPages, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          dispatch(initDocCatalogListAction(data.results, req.catalogCode));\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//查询文档列表\nconst querylistAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.docQueryContentPages, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          const action = initlistAction(data.results, createPagination(data))\n          dispatch(action)\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//查询所产品\nconst queryProductlistAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.productSelectByPage, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          const action = initProductListAction(data.results)\n          dispatch(action)\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n\n//公告详情\nconst queryNoticeDetailAction = req => {\n  return (dispatch) => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.noticeGetNoticeDetail, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          dispatch(changeEditTitleAction(data.title))\n          dispatch(changeEditorContentAction(data.content))\n          dispatch(changeEditorStateAction(data.state))\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//发布公告\nconst publishNoticeAction = req => {\n  return (dispatch, getState) => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.noticePublishNotice, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message } = res.data && res.data\n        if (success) {\n          Modal.success({\n            title: '系统提示',\n            content: message,\n            okText: '确认',\n            onOk: () => {\n              const pagination = getState().notice.pagination\n              const params = {\n                ...getState().notice.params,\n                pageNo: pagination.current,\n                pageSize: pagination.pageSize,\n              }\n              dispatch(querylistAction({ props: req.props, data: params }));\n            }\n          });\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//查询携带参数\nconst createChangeParamsAction = params => ({\n  type: types.CHANGE_SEARCH_PARAMS,\n  params\n})\n\n//编辑改变标题\nconst changeEditTitleAction = editTitle => ({\n  type: types.CHANGE_EDIT_TITLE,\n  editTitle\n})\n\n//编辑改变富文本内容\nconst changeEditorContentAction = editContent => ({\n  type: types.CHANGE_EDIT_CONTENT,\n  editContent\n})\n\n//编辑改变富文本内容\nconst changeEditorStateAction = editState => ({\n  type: types.CHANGE_EDIT_STATE,\n  editState\n})\n\n\nexport {\n  querylistAction,\n  queryDocCatalogListAction,\n  createChangeParamsAction,\n  queryProductlistAction,\n  setCatalogCodeAction,\n  createSaveAction,\n  changeEditTitleAction,\n  changeEditorContentAction,\n\n  queryNoticeDetailAction,\n  publishNoticeAction,\n}"],"sourceRoot":""}