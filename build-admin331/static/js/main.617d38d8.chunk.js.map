{"version":3,"sources":["pages/dictType/store/actionTypes.js","pages/clientUser/store/actionTypes.js","pages/chargeConsume/store/actionTypes.js","pages/chargeRecharge/store/actionTypes.js","pages/common/header/store/actionTypes.js","pages/user/store/actionTypes.js","pages/cert/store/actionTypes.js","pages/adminLogs/store/actionTypes.js","pages/verifyServer/store/actionTypes.js","pages/userLogs/store/actionTypes.js","pages/appLogs/store/actionTypes.js","pages/chargeConfig/store/actionTypes.js","pages/common/layer/spinning/spinningTypes.js","pages/product/store/actionTypes.js","pages/common/menu/store/actionTypes.js","pages/account/store/actionTypes.js","pages/login/store/actionTypes.js","pages/applyOrder/store/actionTypes.js","pages/oApi/store/actionTypes.js","pages/doc/store/actionTypes.js","pages/admin/store/actionTypes.js","pages/tokenPower/store/actionTypes.js","pages/org/store/actionTypes.js","pages/app/store/actionTypes.js","pages/certification/store/actionTypes.js","pages/link/store/actionTypes.js","pages/common/menu/store/reducer.js","pages/common/header/store/reducer.js","pages/admin/store/reducer.js","pages/login/store/reducer.js","pages/role/store/reducer.js","pages/menu/store/reducer.js","pages/user/store/reducer.js","pages/app/store/reducer.js","pages/dictType/store/reducer.js","pages/dictData/store/reducer.js","pages/notice/store/reducer.js","pages/org/store/reducer.js","pages/cert/store/reducer.js","pages/product/store/reducer.js","pages/certification/store/reducer.js","pages/docCatalog/store/reducer.js","pages/doc/store/reducer.js","pages/platSetting/store/reducer.js","pages/billing/store/reducer.js","pages/productType/store/reducer.js","pages/account/store/reducer.js","pages/preferential/store/reducer.js","pages/chargeConsume/store/reducer.js","pages/chargeRecharge/store/reducer.js","pages/applyOrder/store/reducer.js","pages/link/store/reducer.js","pages/question/store/reducer.js","pages/clientUser/store/reducer.js","pages/tokenPower/store/reducer.js","pages/tokenRole/store/reducer.js","pages/chargeConfig/store/reducer.js","pages/adminLogs/store/reducer.js","pages/safeStrategy/store/reducer.js","pages/verifyServer/store/reducer.js","pages/oApiTypes/store/reducer.js","pages/oApi/store/reducer.js","pages/oApiParams/store/reducer.js","pages/userLogs/store/reducer.js","pages/appLogs/store/reducer.js","store/reducers.js","store/index.js","App.js","index.js","pages/notice/store/actionTypes.js","pages/billing/store/actionTypes.js","pages/preferential/store/actionTypes.js","pages/question/store/actionTypes.js","pages/menu/store/actionTypes.js","pages/productType/store/actionTypes.js","pages/safeStrategy/store/actionTypes.js","pages/oApiTypes/store/actionTypes.js","pages/docCatalog/store/actionTypes.js","pages/oApiParams/store/actionTypes.js","pages/role/store/actionTypes.js","pages/platSetting/store/actionTypes.js","pages/tokenRole/store/actionTypes.js","pages/dictData/store/actionTypes.js"],"names":["QUERY_DICT_TYPE_LIST","CHANGE_SEARCH_PARAMS","CHANGE_CONFIRM_LOADING","CHANGE_ADD_MODAL_VISIBLE","QUERY_LIST","CHANGE_MODAL_VISIBLE","CHANGE_EDIT_STATUS","INIT_DETAIL","CHANGE_MENU_COLLAPSED","USER_LOGOUT","INIT_ADMIN_INFO","QUERY_USER_LIST","QUERY_CERT_LIST","QUERY_PREFERENTTIAL_LIST","QUERY_BILLING_LIST","QUERY_PRODUCT_LIST","CHANGE_CONFIG_STRATEGY_NAME","CHANGE_CONFIG_STRATEGY_CODE","CHANGE_CONFIG_BILLING_NAME","CHANGE_CONFIG_BILLING_CODE","CHANGE_CONFIG_PRODUCT_NAME","CHANGE_CONFIG_PRODUCT_CODE","CHANGE_PRODUCT_SELECTED_KEYS","CHANGE_BILLING_SELECTED_KEYS","CHANGE_PREFERENTIAL_SELECTED_KEYS","CHANGE_RECORD","QUERY_DICT_DATA_LIST","INIT_ALL_PRODUCT_TYPE","SET_PRODUCT_NAME","SET_PRODUCT_PRICE","SET_PRODUCT_PAYING","SET_PRODUCT_TYPE_CODE","SET_PRODUCT_REMARK","SET_PRODUCT_TAG","INIT_VERIFY_API_LIST","SET_API_NAME","SET_ORDER_WORD","CHANGE_SAVE_LOADING","INIT_MENUS","SET_EDIT_ACCOUNT_NAME","SET_EDIT_ACCOUNT_TYPE","SET_EDIT_ORG_CODE","INIT_EDIT_ORG_LIST","SET_EDIT_PARENT_ACCOUNT","SET_EDIT_ACCESS_SCRECT","SET_RE_CHARGE_TYPE","SET_RE_CHARGE_MONEY","QUERY_APP_LIST","CHANGE_APP_SELECTED_KEYS","CHANGE_LOGIN_LOADING","INIT_ALL_APP_TYPES","INIT_ALL_LANDING_MODES","INIT_ALL_SUPPORT_CAS","INIT_GET_FILE_LIST","CHANGE_CONFIRM_VISIBLE","INIT_CATALOG","INIT_PRODUCT_LIST","INIT_TYPE_LIST","SET_TYPE_ID","SET_API_REQ_TYPE","SET_API_URL","SET_API_PARAM_TYPE","SET_API_REMARKS","SET_API_PARAMS_DETAIL","QUERY_DOCCATALOG_LIST","INIT_PRODUCT_ALL_LIST","SET_EDIT_CATALOGO_CODE","CHANGE_EDIT_TITLE","CHANGE_EDIT_CONTENT","INIT_NOTICE_DETAIL","CHANGE_EDIT_STATE","INIT_SELECTED_ROLES","CHANGE_ROLE_MODAL_VISIBLE","INIT_ROLE_ALL_LIST","INIT_ROLE_ADMINID","CHANGE_CONFIRMLOADING_ROLE","CHANGE_EDIT_URL","CHANGE_EDIT_REMARKS","CHANGE_SELECTED_ROW_KEYS","INIT_ROLE_ID","INIT_ORG_LIST","SET_ORG_NAME","SET_ORG_CODE","SET_ORG_DESC","INIT_FORM_VALUES","INIT_ORG_TREE_DATA","SET_EDIT_TREE_VALUE","CHANGE_ROW_APP_ID","CHANGE_FORM_APP_NAME","CHANGE_FORM_URL","CHANGE_FORM_DESCRIBES","CHANGE_FORM_REDIRECTURL","CHANGE_FORM_ICON","CHANGE_FORM_APPTYPE","CHANGE_FORM_AUDITMODE","CHANGE_FORM_LANDINGMODES","CHANGE_FORM_SUPPORTCAS","CHANGE_FORM_TAG","SET_ICON_BASE64","CHANGE_FORM_EDIT_APP_ID","CHANGE_ROW_AUDIT_STATUS","EMPTY_ADD_VALUE","INIT_ORG_TREES","CHANGE_TREE_ORG_CODE","INIT_ALL_AUTH_LEVEL","CHANGE_PRODUCT","INIT_BILLING_LIST","CHANGE_BILLING","CHANGE_BILLING_FETCHING","CHANGE_PREFERENTIAL_FETCHING","INIT_PREFERENTIAL_LIST","CHANGE_PREFERENTIAL","INIT_LIST","CHANGE_EDIT_AUTH_NAME","CHANGE_AUTH_LEVE","CHANGE_AUTH_STYLE","CLEAN_FORM","CHANGE_EDIT_IMAGE_URL","CHANGE_SHOW_IMAGE","defaultState","menus","collapsed","adminInfo","list","roleAllList","pagination","operationType","addModalvisible","roleModalVisible","record","spinning","params","ConfirmLoading","ConfirmLoadingRole","selectedRoles","roleAdminId","loginLoading","menuModalvisible","menuList","checkedKeys","selectedRoleId","sliderMenuList","editModalvisible","editRecord","addConfirmLoading","editConfirmLoading","rowAppId","form","appName","url","describes","redirectUrl","appType","auditMode","landingModes","supportCAs","allAuthLevel","allLandingModes","allSupportCAs","allAppTypes","tag","iconBase64","editLoading","orgList","editOrgCode","allProductType","product","productList","billingList","billing","billingFetching","preferentialFetching","preferentialList","preferential","chargeDetail","productTypeCode","productCode","preferentialCode","ruleCode","typeList","dataList","editTitle","editContent","editState","detailInfo","editNoticeType","editParentOrgName","editPid","editPorgCode","editOrgName","editOrgDesc","editId","treeList","saveLoading","verifyApiList","productName","productPrice","productPaying","productRemark","APIName","orderWord","editAuthName","editURL","editAuthLevel","editAuthStyle","editStatus","editProductCode","editName","editOrders","productAllList","docCatalogList","editCatalogCode","editSettingExp","editSettingKey","editSettingValue","editAmount","editType","editMaxLimit","appList","appListPagination","editAccountName","editAccountType","editParentAccount","editAccessScrect","editOrgList","rechargeType","rechargeMoney","appSelectedKeys","editStrategyName","editStrategyDesc","editStrategyRule","detail","mapArr","catalog","i","length","applyGetFileList","confirmVisible","confirmLoading","showImage","editImageURL","modalVisible","editRemarks","selectedRowKeys","roleId","preferentialListPagination","billingListPagination","productPagination","strategyName","strategyCode","billingName","billingCode","productSelectedKeys","billingSelectedKeys","preferentialSelectedKeys","edit","paramsDetail","apiName","typeId","apiUrl","apiReqType","apiParamType","apiRemarks","paramName","paramType","isNess","paramRemarks","appLogs","state","action","newState","JSON","parse","stringify","type","spinningTypes","types","userLogs","login","slider","header","admin","role","menu","user","NAV_TO","app","orgCode","icon","editAppId","rowauditStatus","dictType","dictData","notice","org","orgName","orgDesc","id","pid","porgCode","tree","cert","certification","docCatalog","doc","platSetting","needPaging","true","productType","account","chargeConsume","chargeRecharge","applyOrder","link","question","clientUser","tokenPower","tokenRole","chargeConfig","adminLogs","verifyServer","safeStrategy","strategyStatus","oApiTypes","typeName","typeRemarks","oApi","oApiParams","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","Login","lazy","Home","App","fallback","exact","path","component","ReactDOM","render","locale","zhCN","document","getElementById","QUERY_NOTICE_LIST","CHANGE_EDIT_NOTICE_TYPE","CHANGE_EDIT_Amount","CHANGE_EDIT_TYPE","CHANGE_EDIT_MAX_LIMIT","CHANGE_EDIT_STRATEGY_NAME","CHANGE_EDIT_STRATEGY_DESC","CHANGE_EDIT_STRATEGY_RULE","INIT_MENU_LIST","CHANGE_ADD_CONFIRM_LOADING","CHANGE_EDIT_CONFIRM_LOADING","CHANGE_EDIT_MODAL_VISIBLE","CHANGE_EDIT_RECORD","INIT_SLIDER_MENU_LIST","SAVE_LOADING","CHANGE_STRATEGY_NAME","CHANGE_STRATEGY_CODE","CHANGE_STRATEGY_STATUS","CHANGE_TYPE_NAME","CHANGE_TYPE_REMARKS","CHANGE_EDIT_PRODUCT_CODE","CHANGE_EDIT_NAME","CHANGE_EDIT_ORDERS","SET_PARAM_NAME","SET_PARAM_TYPE","SET_IS_NESS","SET_PARAM_REMARKS","QUERY_ROLE_LIST","CHANGE_MENU_MODAL_VISIBLE","CHANGE_CHECKED_KEYS_ACTION","CHANGE_EDIT_SETTING_EXP","CHANGE_EDIT_SETTING_KEY","CHANGE_EDIT_SETTING_VALUE"],"mappings":"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","file":"static/js/main.617d38d8.chunk.js","sourcesContent":["const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\n\nexport {\n  CHANGE_CONFIRM_LOADING,\n  QUERY_DICT_TYPE_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n\n  CHANGE_SEARCH_PARAMS\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_MODAL_VISIBLE = \"CHANGE_MODAL_VISIBLE\"\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\n\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_MODAL_VISIBLE,\n  CHANGE_EDIT_STATUS,\n\n}","const QUERY_LIST = \"QUERY_LIST\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\nconst INIT_DETAIL = \"INIT_DETAIL\";\r\n\r\nexport { QUERY_LIST, CHANGE_SEARCH_PARAMS, INIT_DETAIL };\r\n","const QUERY_LIST = \"QUERY_LIST\";\r\nconst INIT_DETAIL = \"INIT_DETAIL\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\n\r\nexport { QUERY_LIST, INIT_DETAIL, CHANGE_SEARCH_PARAMS };\r\n","const CHANGE_MENU_COLLAPSED = \"CHANGE_MENU_COLLAPSED\"\nconst USER_LOGOUT = 'USER_LOGOUT';\nconst INIT_ADMIN_INFO = 'INIT_ADMIN_INFO';\n\nexport {\n  CHANGE_MENU_COLLAPSED,\n  USER_LOGOUT,\n  INIT_ADMIN_INFO\n}","const QUERY_USER_LIST = \"QUERY_USER_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\n\n\nexport {\n  QUERY_USER_LIST,\n  CHANGE_SEARCH_PARAMS,\n\n}","const QUERY_CERT_LIST = \"QUERY_CERT_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\n\nexport {\n  QUERY_CERT_LIST,\n  CHANGE_SEARCH_PARAMS\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n}","const QUERY_LIST = \"QUERY_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n}","const QUERY_LIST = \"QUERY_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst QUERY_PREFERENTTIAL_LIST = \"QUERY_PREFERENTTIAL_LIST\"\nconst QUERY_BILLING_LIST = \"QUERY_BILLING_LIST\"\nconst QUERY_PRODUCT_LIST = \"QUERY_PRODUCT_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_MODAL_VISIBLE = \"CHANGE_MODAL_VISIBLE\"\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\nconst CHANGE_CONFIG_STRATEGY_NAME = \"CHANGE_CONFIG_STRATEGY_NAME\"\nconst CHANGE_CONFIG_STRATEGY_CODE = \"CHANGE_CONFIG_STRATEGY_CODE\"\nconst CHANGE_CONFIG_BILLING_NAME = \"CHANGE_CONFIG_BILLING_NAME\"\nconst CHANGE_CONFIG_BILLING_CODE = \"CHANGE_CONFIG_BILLING_CODE\"\nconst CHANGE_CONFIG_PRODUCT_NAME = \"CHANGE_CONFIG_PRODUCT_NAME\"\nconst CHANGE_CONFIG_PRODUCT_CODE = \"CHANGE_CONFIG_PRODUCT_CODE\"\nconst CHANGE_PRODUCT_SELECTED_KEYS = \"CHANGE_PRODUCT_SELECTED_KEYS\"\nconst CHANGE_BILLING_SELECTED_KEYS = \"CHANGE_BILLING_SELECTED_KEYS\"\nconst CHANGE_PREFERENTIAL_SELECTED_KEYS = \"CHANGE_PREFERENTIAL_SELECTED_KEYS\"\nconst CHANGE_RECORD = \"CHANGE_RECORD\"\n\nexport {\n  QUERY_LIST,\n  QUERY_PREFERENTTIAL_LIST,\n  QUERY_BILLING_LIST,\n  QUERY_PRODUCT_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_MODAL_VISIBLE,\n  CHANGE_EDIT_STATUS,\n  CHANGE_CONFIG_STRATEGY_NAME,\n  CHANGE_CONFIG_STRATEGY_CODE,\n  CHANGE_CONFIG_BILLING_NAME,\n  CHANGE_CONFIG_BILLING_CODE,\n  CHANGE_CONFIG_PRODUCT_NAME,\n  CHANGE_CONFIG_PRODUCT_CODE,\n  CHANGE_PRODUCT_SELECTED_KEYS,\n  CHANGE_BILLING_SELECTED_KEYS,\n  CHANGE_PREFERENTIAL_SELECTED_KEYS,\n  CHANGE_RECORD\n}","export default \"CHANGE_SPINNING\"","const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\nconst QUERY_DICT_DATA_LIST = \"QUERY_DICT_DATA_LIST\";\r\nconst INIT_ALL_PRODUCT_TYPE = \"INIT_ALL_PRODUCT_TYPE\";\r\nconst SET_PRODUCT_NAME = \"SET_PRODUCT_NAME\";\r\nconst SET_EDIT_CONTENT = \"SET_EDIT_CONTENT\";\r\nconst SET_PRODUCT_PRICE = \"SET_PRODUCT_PRICE\";\r\nconst SET_PRODUCT_PAYING = \"SET_PRODUCT_PAYING\";\r\nconst SET_PRODUCT_TYPE_CODE = \"SET_PRODUCT_TYPE_CODE\";\r\nconst SET_PRODUCT_REMARK = \"SET_PRODUCT_REMARK\";\r\nconst SET_PRODUCT_TAG = \"SET_PRODUCT_TAG\";\r\nconst INIT_VERIFY_API_LIST = \"INIT_VERIFY_API_LIST\";\r\nconst SET_API_NAME = \"SET_API_NAME\";\r\nconst SET_ORDER_WORD = \"SET_ORDER_WORD\";\r\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\";\r\n\r\nexport {\r\n  QUERY_DICT_TYPE_LIST,\r\n  QUERY_DICT_DATA_LIST,\r\n  INIT_ALL_PRODUCT_TYPE,\r\n  CHANGE_SEARCH_PARAMS,\r\n  SET_PRODUCT_NAME,\r\n  SET_EDIT_CONTENT,\r\n  SET_PRODUCT_PRICE,\r\n  SET_PRODUCT_PAYING,\r\n  SET_PRODUCT_TYPE_CODE,\r\n  SET_PRODUCT_REMARK,\r\n  SET_PRODUCT_TAG,\r\n  INIT_VERIFY_API_LIST,\r\n  SET_API_NAME,\r\n  SET_ORDER_WORD,\r\n  CHANGE_SAVE_LOADING\r\n};\r\n","const INIT_MENUS = \"INIT_MENUS\";\n\nexport { INIT_MENUS };","const QUERY_LIST = \"QUERY_LIST\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\nconst SET_EDIT_ACCOUNT_NAME = \"SET_EDIT_ACCOUNT_NAME\";\r\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\";\r\nconst SET_EDIT_ACCOUNT_TYPE = \"SET_EDIT_ACCOUNT_TYPE\";\r\nconst SET_EDIT_ORG_CODE = \"SET_EDIT_ORG_CODE\";\r\nconst INIT_EDIT_ORG_LIST = \"INIT_EDIT_ORG_LIST\";\r\nconst SET_EDIT_PARENT_ACCOUNT = \"SET_EDIT_PARENT_ACCOUNT\";\r\nconst SET_EDIT_ACCESS_SCRECT = \"SET_EDIT_ACCESS_SCRECT\";\r\nconst SET_RE_CHARGE_TYPE = \"SET_RE_CHARGE_TYPE\";\r\nconst SET_RE_CHARGE_MONEY = \"SET_RE_CHARGE_MONEY\";\r\nconst QUERY_APP_LIST = \"QUERY_APP_LIST\";\r\nconst CHANGE_APP_SELECTED_KEYS = \"CHANGE_APP_SELECTED_KEYS\";\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_SAVE_LOADING,\r\n  SET_EDIT_ACCOUNT_NAME,\r\n  SET_EDIT_ACCOUNT_TYPE,\r\n  SET_EDIT_ORG_CODE,\r\n  INIT_EDIT_ORG_LIST,\r\n  SET_EDIT_PARENT_ACCOUNT,\r\n  SET_EDIT_ACCESS_SCRECT,\r\n  SET_RE_CHARGE_TYPE,\r\n  SET_RE_CHARGE_MONEY,\r\n  QUERY_APP_LIST,\r\n  CHANGE_APP_SELECTED_KEYS\r\n};\r\n","const CHANGE_LOGIN_LOADING = 'CHANGE_LOGIN_LOADING';\n\nexport { CHANGE_LOGIN_LOADING }","const QUERY_LIST = \"QUERY_LIST\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\";\r\nconst INIT_DETAIL = \"INIT_DETAIL\";\r\nconst INIT_ALL_APP_TYPES = \"INIT_ALL_APP_TYPES\";\r\nconst INIT_ALL_LANDING_MODES = \"INIT_ALL_LANDING_MODES\";\r\nconst INIT_ALL_SUPPORT_CAS = \"INIT_ALL_SUPPORT_CAS\";\r\nconst INIT_GET_FILE_LIST = \"INIT_GET_FILE_LIST\";\r\nconst CHANGE_CONFIRM_VISIBLE = \"CHANGE_CONFIRM_VISIBLE\";\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\";\r\nconst INIT_CATALOG = \"INIT_CATALOG\";\r\nconst INIT_PRODUCT_LIST = \"INIT_PRODUCT_LIST\";\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_SAVE_LOADING,\r\n  INIT_DETAIL,\r\n  INIT_ALL_LANDING_MODES,\r\n  INIT_ALL_APP_TYPES,\r\n  INIT_ALL_SUPPORT_CAS,\r\n  INIT_GET_FILE_LIST,\r\n  CHANGE_CONFIRM_VISIBLE,\r\n  CHANGE_CONFIRM_LOADING,\r\n  INIT_CATALOG,\r\n  INIT_PRODUCT_LIST\r\n};\r\n","const QUERY_LIST = \"QUERY_LIST\";\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\";\r\nconst SET_API_NAME = \"SET_API_NAME\";\r\nconst INIT_TYPE_LIST = \"INIT_TYPE_LIST\";\r\nconst SET_TYPE_ID = \"SET_TYPE_ID\";\r\nconst SET_API_REQ_TYPE = \"SET_API_REQ_TYPE\";\r\nconst SET_API_URL = \"SET_API_URL\";\r\nconst SET_API_PARAM_TYPE = \"SET_API_PARAM_TYPE\";\r\nconst SET_API_REMARKS = \"SET_API_REMARKS\";\r\nconst SET_API_PARAMS_DETAIL = \"SET_API_PARAMS_DETAIL\";\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  SET_API_NAME,\r\n  INIT_TYPE_LIST,\r\n  SET_TYPE_ID,\r\n  SET_API_REQ_TYPE,\r\n  SET_API_URL,\r\n  SET_API_PARAM_TYPE,\r\n  SET_API_REMARKS,\r\n  SET_API_PARAMS_DETAIL\r\n};\r\n","const QUERY_LIST = \"QUERY_LIST\"\nconst QUERY_DOCCATALOG_LIST = \"QUERY_DOCCATALOG_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst INIT_PRODUCT_ALL_LIST = \"INIT_PRODUCT_ALL_LIST\"\nconst SET_EDIT_CATALOGO_CODE = \"SET_EDIT_CATALOGO_CODE\"\n\n\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\n\nexport {\n  QUERY_LIST,\n  QUERY_DOCCATALOG_LIST,\n  CHANGE_SEARCH_PARAMS,\n  INIT_PRODUCT_ALL_LIST,\n  SET_EDIT_CATALOGO_CODE,\n\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n  CHANGE_EDIT_STATE,\n}","const QUERY_USER_LIST = \"QUERY_USER_LIST\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\nconst INIT_SELECTED_ROLES = \"INIT_SELECTED_ROLES\"\nconst CHANGE_ROLE_MODAL_VISIBLE = \"CHANGE_ROLE_MODAL_VISIBLE\"\nconst INIT_ROLE_ALL_LIST = \"INIT_ROLE_ALL_LIST\"\nconst INIT_ROLE_ADMINID = \"INIT_ROLE_ADMINID\"\nconst CHANGE_CONFIRMLOADING_ROLE = \"CHANGE_CONFIRMLOADING_ROLE\"\n\nexport {\n  QUERY_USER_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_CONFIRM_LOADING,\n  INIT_SELECTED_ROLES,\n  CHANGE_ROLE_MODAL_VISIBLE,\n  INIT_ROLE_ALL_LIST,\n  INIT_ROLE_ADMINID,\n  CHANGE_CONFIRMLOADING_ROLE,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_URL = \"CHANGE_EDIT_URL\"\nconst CHANGE_EDIT_REMARKS = \"CHANGE_EDIT_REMARKS\"\nconst CHANGE_SELECTED_ROW_KEYS = \"CHANGE_SELECTED_ROW_KEYS\"\nconst INIT_ROLE_ID = \"INIT_ROLE_ID\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_URL,\n  CHANGE_EDIT_REMARKS,\n  CHANGE_SELECTED_ROW_KEYS,\n  INIT_ROLE_ID,\n  CHANGE_SAVE_LOADING,\n}","const INIT_ORG_LIST = \"INIT_ORG_LIST\"\nconst SET_ORG_NAME = \"SET_ORG_NAME\"\nconst SET_ORG_CODE = \"SET_ORG_CODE\"\nconst SET_ORG_DESC = \"SET_ORG_DESC\"\nconst INIT_FORM_VALUES = \"INIT_FORM_VALUES\"\nconst INIT_ORG_TREE_DATA = \"INIT_ORG_TREE_DATA\"\nconst SET_EDIT_TREE_VALUE = \"SET_EDIT_TREE_VALUE\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\n\nexport {\n  INIT_ORG_LIST,\n  SET_ORG_NAME,\n  SET_ORG_CODE,\n  SET_ORG_DESC,\n  INIT_FORM_VALUES,\n  INIT_ORG_TREE_DATA,\n  SET_EDIT_TREE_VALUE,\n  CHANGE_SAVE_LOADING,\n}","const QUERY_APP_LIST = \"QUERY_APP_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_ROW_APP_ID = \"CHANGE_ROW_APP_ID\"\n\nconst CHANGE_FORM_APP_NAME = \"CHANGE_FORM_APP_NAME\"\nconst CHANGE_FORM_URL = \"CHANGE_FORM_URL\"\nconst CHANGE_FORM_DESCRIBES = \"CHANGE_FORM_DESCRIBES\"\nconst CHANGE_FORM_REDIRECTURL = \"CHANGE_FORM_REDIRECTURL\"\nconst CHANGE_FORM_ICON = \"CHANGE_FORM_ICON\"\nconst CHANGE_FORM_APPTYPE = \"CHANGE_FORM_APPTYPE\"\nconst CHANGE_FORM_AUDITMODE = \"CHANGE_FORM_AUDITMODE\"\nconst CHANGE_FORM_LANDINGMODES = \"CHANGE_FORM_LANDINGMODES\"\nconst CHANGE_FORM_SUPPORTCAS = \"CHANGE_FORM_SUPPORTCAS\"\nconst CHANGE_FORM_TAG = \"CHANGE_FORM_TAG\"\nconst INIT_ALL_LANDING_MODES = \"INIT_ALL_LANDING_MODES\"\nconst INIT_ALL_APP_TYPES = \"INIT_ALL_APP_TYPES\"\nconst INIT_ALL_SUPPORT_CAS = \"INIT_ALL_SUPPORT_CAS\"\nconst SET_ICON_BASE64 = \"SET_ICON_BASE64\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\nconst CHANGE_FORM_EDIT_APP_ID = \"CHANGE_FORM_EDIT_APP_ID\"\nconst CHANGE_ROW_AUDIT_STATUS = \"CHANGE_ROW_AUDIT_STATUS\"\nconst EMPTY_ADD_VALUE = \"EMPTY_ADD_VALUE\"\nconst INIT_ORG_TREES = \"INIT_ORG_TREES\"\nconst CHANGE_TREE_ORG_CODE = \"CHANGE_TREE_ORG_CODE\"\nconst INIT_ALL_AUTH_LEVEL = \"INIT_ALL_AUTH_LEVEL\"\nconst INIT_ALL_PRODUCT_TYPE = \"INIT_ALL_PRODUCT_TYPE\"\nconst CHANGE_PRODUCT = \"CHANGE_PRODUCT\"\nconst INIT_PRODUCT_LIST = \"INIT_PRODUCT_LIST\"\nconst INIT_BILLING_LIST = \"INIT_BILLING_LIST\"\nconst CHANGE_BILLING = \"CHANGE_BILLING\"\nconst CHANGE_BILLING_FETCHING = \"CHANGE_BILLING_FETCHING\"\nconst CHANGE_PREFERENTIAL_FETCHING = \"CHANGE_PREFERENTIAL_FETCHING\"\nconst INIT_PREFERENTIAL_LIST = \"INIT_PREFERENTIAL_LIST\"\nconst CHANGE_PREFERENTIAL = \"CHANGE_PREFERENTIAL\"\n\nexport {\n  QUERY_APP_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_ROW_APP_ID,\n  CHANGE_FORM_APP_NAME,\n  CHANGE_FORM_URL,\n  CHANGE_FORM_DESCRIBES,\n  CHANGE_FORM_REDIRECTURL,\n  CHANGE_FORM_ICON,\n  CHANGE_FORM_APPTYPE,\n  CHANGE_FORM_AUDITMODE,\n  CHANGE_FORM_LANDINGMODES,\n  CHANGE_FORM_SUPPORTCAS,\n  CHANGE_FORM_TAG,\n  INIT_ALL_LANDING_MODES,\n  INIT_ALL_APP_TYPES,\n  INIT_ALL_SUPPORT_CAS,\n  SET_ICON_BASE64,\n  CHANGE_SAVE_LOADING,\n  CHANGE_FORM_EDIT_APP_ID,\n  CHANGE_ROW_AUDIT_STATUS,\n  EMPTY_ADD_VALUE,\n  INIT_ORG_TREES,\n  CHANGE_TREE_ORG_CODE,\n  INIT_ALL_AUTH_LEVEL,\n  INIT_ALL_PRODUCT_TYPE,\n  CHANGE_PRODUCT,\n  INIT_PRODUCT_LIST,\n  INIT_BILLING_LIST,\n  CHANGE_BILLING,\n  CHANGE_BILLING_FETCHING,\n  CHANGE_PREFERENTIAL_FETCHING,\n  INIT_PREFERENTIAL_LIST,\n  CHANGE_PREFERENTIAL\n}","const INIT_LIST = \"INIT_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_AUTH_NAME = \"CHANGE_EDIT_AUTH_NAME\"\nconst CHANGE_EDIT_URL = \"CHANGE_EDIT_URL\"\nconst CHANGE_AUTH_LEVE = \"CHANGE_AUTH_LEVE\"\nconst CHANGE_AUTH_STYLE = \"CHANGE_AUTH_STYLE\"\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\nconst CLEAN_FORM = \"CLEAN_FORM\"\n\n\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\n\n\n\nexport {\n  INIT_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_AUTH_NAME,\n  CHANGE_EDIT_URL,\n  CHANGE_AUTH_LEVE,\n  CHANGE_AUTH_STYLE,\n  CHANGE_EDIT_STATUS,\n  CLEAN_FORM,\n\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_URL = \"CHANGE_EDIT_URL\"\nconst CHANGE_EDIT_IMAGE_URL = \"CHANGE_EDIT_IMAGE_URL\"\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\n\nconst CHANGE_SHOW_IMAGE = \"CHANGE_SHOW_IMAGE\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\n\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\n\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_URL,\n  CHANGE_EDIT_IMAGE_URL,\n  CHANGE_EDIT_STATUS,\n  CHANGE_SAVE_LOADING,\n  CHANGE_SHOW_IMAGE,\n\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n  CHANGE_EDIT_STATE,\n}","import * as types from './actionTypes';\n\nconst defaultState = {\n  menus: [],\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.INIT_MENUS:\n      newState.menus = action.menus\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes'\nconst defaultState = {\n  collapsed: false,\n  adminInfo: null\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.CHANGE_MENU_COLLAPSED:\n      newState.collapsed = !newState.collapsed\n      break;\n    case types.INIT_ADMIN_INFO:\n      newState.adminInfo = action.adminInfo\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  roleAllList: [],\n  pagination: {},\n  operationType: \"\",\n  addModalvisible: false,\n  roleModalVisible: false,\n  record: {},\n  spinning: false,\n  params: {},\n  ConfirmLoading: false,\n  ConfirmLoadingRole: false,\n  selectedRoles: [],\n  roleAdminId: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_USER_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.operationType = action.operationType\n      newState.addModalvisible = action.addModalvisible\n      newState.record = action.record\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_CONFIRM_LOADING:\n      newState.ConfirmLoading = action.ConfirmLoading\n      break;\n    case types.INIT_SELECTED_ROLES:\n      newState.selectedRoles = action.selectedRoles\n      break;\n    case types.CHANGE_ROLE_MODAL_VISIBLE:\n      newState.roleModalVisible = action.roleModalVisible\n      break;\n    case types.INIT_ROLE_ALL_LIST:\n      newState.roleAllList = action.roleAllList\n      break;\n    case types.INIT_ROLE_ADMINID:\n      newState.roleAdminId = action.roleAdminId\n      break;\n    case types.CHANGE_CONFIRMLOADING_ROLE:\n      newState.ConfirmLoadingRole = action.ConfirmLoadingRole\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes'\nconst defaultState = {\n  loginLoading: false\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.CHANGE_LOGIN_LOADING:\n      newState.loginLoading = action.loginLoading\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  operationType: \"\",\n  addModalvisible: false,\n  record: {},\n  spinning: false,\n  menuModalvisible: false,\n  menuList: [],\n  checkedKeys: [],\n  selectedRoleId: \"\",\n  ConfirmLoading: false,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_ROLE_LIST:\n      newState.list = action.list\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.operationType = action.operationType\n      newState.addModalvisible = action.addModalvisible\n      newState.record = action.record\n      break;\n    case types.CHANGE_MENU_MODAL_VISIBLE:\n      newState.menuModalvisible = action.menuModalvisible\n      newState.selectedRoleId = action.selectedRoleId\n      newState.checkedKeys = action.checkedKeys\n      break;\n    case types.INIT_MENU_LIST:\n      newState.menuList = action.menuList\n      break;\n    case types.CHANGE_CHECKED_KEYS_ACTION:\n      newState.checkedKeys = action.checkedKeys\n      break;\n    case types.CHANGE_CONFIRM_LOADING:\n      newState.ConfirmLoading = action.ConfirmLoading\n      break;\n    default:\n      break;\n  }\n  return newState\n}\n","import * as types from './actionTypes';\nconst defaultState = {\n  list: [],\n  sliderMenuList: [],\n  operationType: \"\",\n  addModalvisible: false,\n  editModalvisible: false,\n  editRecord: null,\n  spinning: false,\n  addConfirmLoading: false,\n  editConfirmLoading: false,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.CHANGE_ADD_CONFIRM_LOADING:\n      newState.addConfirmLoading = action.addConfirmLoading\n      break;\n    case types.CHANGE_EDIT_CONFIRM_LOADING:\n      newState.editConfirmLoading = action.editConfirmLoading\n      break;\n    case types.INIT_MENU_LIST:\n      newState.list = action.list\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.addModalvisible = action.addModalvisible\n      break;\n    case types.CHANGE_EDIT_MODAL_VISIBLE:\n      newState.editModalvisible = action.editModalvisible\n      break;\n    case types.CHANGE_EDIT_RECORD:\n      newState.editRecord = action.editRecord\n      break;\n    case types.INIT_SLIDER_MENU_LIST:\n      newState.sliderMenuList = action.sliderMenuList\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  spinning: false,\n  params: {},\n\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case 'NAV_TO':\n      newState.NAV_TO = action.NAV_TO\n      break;\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_USER_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  rowAppId: null,\n  form: {\n    appName: \"\",\n    url: \"\",\n    describes: \"\",\n    redirectUrl: \"\",\n    appType: \"\",\n    auditMode: \"\",\n    landingModes: [],\n    supportCAs: [],\n    allAuthLevel: [],\n    allLandingModes: [],\n    allSupportCAs: [],\n    allAppTypes: [],\n    tag: \"\",\n  },\n  iconBase64: \"\",\n  editLoading: false,\n  orgList: [],\n  editOrgCode: \"\",\n  allProductType: [],\n  product: \"\",\n  productList: [],\n  billingList: [],\n  billing: \"\",\n  billingFetching: false,\n  preferentialFetching: false,\n  preferentialList: [],\n  preferential: \"\",\n  chargeDetail: {\n    productTypeCode: \"\",\n    productCode: \"\",\n    preferentialCode: \"\",\n    ruleCode: \"\"\n  }\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_APP_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_ROW_APP_ID:\n      newState.rowAppId = action.rowAppId\n      break;\n    case types.INIT_ORG_TREES:\n      newState.orgList = action.orgList\n      break;\n    case types.CHANGE_TREE_ORG_CODE:\n      newState.form.orgCode = action.orgCode\n      break;\n\n    //修改表单值\n    case types.CHANGE_FORM_APP_NAME:\n      newState.form.appName = action.appName\n      break;\n    case types.CHANGE_FORM_URL:\n      newState.form.url = action.url\n      break;\n    case types.CHANGE_FORM_DESCRIBES:\n      newState.form.describes = action.describes\n      break;\n    case types.CHANGE_FORM_REDIRECTURL:\n      newState.form.redirectUrl = action.redirectUrl\n      break;\n    case types.CHANGE_FORM_ICON:\n      newState.form.icon = action.icon\n      break;\n    case types.CHANGE_FORM_APPTYPE:\n      newState.form.appType = action.appType\n      break;\n    case types.CHANGE_FORM_AUDITMODE:\n      newState.form.auditMode = action.auditMode\n      break;\n    case types.CHANGE_FORM_LANDINGMODES:\n      newState.form.landingModes = action.landingModes\n      break;\n    case types.CHANGE_FORM_SUPPORTCAS:\n      newState.form.supportCAs = action.supportCAs\n      break;\n    case types.CHANGE_FORM_TAG:\n      newState.form.tag = action.tag\n      break;\n    case types.INIT_ALL_AUTH_LEVEL:\n      newState.form.allAuthLevel = action.allAuthLevel\n      break;\n    case types.INIT_ALL_LANDING_MODES:\n      newState.form.allLandingModes = action.allLandingModes\n      break;\n    case types.INIT_ALL_APP_TYPES:\n      newState.form.allAppTypes = action.allAppTypes\n      break;\n    case types.INIT_ALL_SUPPORT_CAS:\n      newState.form.allSupportCAs = action.allSupportCAs\n      break;\n    case types.SET_ICON_BASE64:\n      newState.iconBase64 = action.iconBase64\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    case types.CHANGE_FORM_EDIT_APP_ID:\n      newState.form.editAppId = action.editAppId\n      break;\n    case types.CHANGE_ROW_AUDIT_STATUS:\n      newState.rowauditStatus = action.rowauditStatus\n      break;\n    case types.EMPTY_ADD_VALUE:\n      newState.form.appName = \"\"\n      newState.form.url = \"\"\n      newState.form.describes = \"\"\n      newState.form.redirectUrl = \"\"\n      newState.form.appType = \"\"\n      newState.form.auditMode = \"\"\n      newState.form.tag = \"\"\n      newState.form.orgCode = \"\"\n      newState.form.landingModes = []\n      newState.form.supportCAs = []\n      newState.iconBase64 = \"\"\n      break;\n    case types.INIT_ALL_PRODUCT_TYPE:\n      newState.allProductType = action.allProductType\n      break;\n    case types.INIT_PRODUCT_LIST:\n      newState.productList = action.productList\n      break;\n    case types.INIT_BILLING_LIST:\n      newState.billingList = action.billingList\n      break;\n    case types.CHANGE_BILLING:\n      newState.billing = action.billing\n      break;\n    case types.CHANGE_BILLING_FETCHING:\n      newState.billingFetching = action.billingFetching\n      break;\n    case types.CHANGE_PREFERENTIAL_FETCHING:\n      newState.preferentialFetching = action.preferentialFetching\n      break;\n    case types.INIT_PREFERENTIAL_LIST:\n      newState.preferentialList = action.preferentialList\n      break;\n    case types.CHANGE_PREFERENTIAL:\n      newState.preferential = action.preferential\n      break;\n    case types.CHANGE_PRODUCT:\n      newState.product = action.product\n      break;\n\n    default:\n      break;\n  }\n  return newState\n}\n","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  ConfirmLoading: false,\n  operationType: \"\",\n  addModalvisible: false,\n  record: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_DICT_TYPE_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_CONFIRM_LOADING:\n      newState.ConfirmLoading = action.ConfirmLoading\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.operationType = action.operationType\n      newState.addModalvisible = action.addModalvisible\n      newState.record = action.record\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  typeList: [],\n  dataList: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  ConfirmLoading: false,\n  operationType: \"\",\n  addModalvisible: false,\n  record: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_DICT_TYPE_LIST:\n      newState.typeList = action.typeList\n      break;\n    case types.QUERY_DICT_DATA_LIST:\n      newState.dataList = action.dataList\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_CONFIRM_LOADING:\n      newState.ConfirmLoading = action.ConfirmLoading\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.operationType = action.operationType\n      newState.addModalvisible = action.addModalvisible\n      newState.record = action.record\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  editTitle: \"\",\n  editContent: \"\",\n  editState: \"\",\n  detailInfo: null,\n  editNoticeType: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_NOTICE_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_TITLE:\n      newState.editTitle = action.editTitle\n      break;\n    case types.CHANGE_EDIT_CONTENT:\n      newState.editContent = action.editContent\n      break;\n    case types.INIT_NOTICE_DETAIL:\n      newState.detailInfo = action.detailInfo\n      break;\n    case types.CHANGE_EDIT_STATE:\n      newState.editState = action.editState\n      break;\n    case types.CHANGE_EDIT_NOTICE_TYPE:\n      newState.editNoticeType = action.editNoticeType\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nconst defaultState = {\n  list: [],\n  spinning: false,\n  editParentOrgName: \"\",\n  editPid: 100000000,\n  editPorgCode: \"\",\n  editOrgName: \"\",\n  editOrgCode: \"\",\n  editOrgDesc: \"\",\n  editId: \"\",\n  treeList: [],\n  saveLoading: false,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.INIT_ORG_LIST:\n      newState.list = action.list\n      break;\n    case types.SET_ORG_NAME:\n      newState.editOrgName = action.editOrgName\n      break;\n    case types.SET_ORG_CODE:\n      newState.editOrgCode = action.editOrgCode\n      break;\n    case types.SET_ORG_DESC:\n      newState.editOrgDesc = action.editOrgDesc\n      break;\n    case types.INIT_FORM_VALUES:\n      if (action.record) {\n        newState.editOrgName = action.record.orgName\n        newState.editOrgCode = action.record.orgCode\n        newState.editOrgDesc = action.record.orgDesc\n        newState.editId = action.record.id\n        newState.editPid = action.record.pid\n        newState.editPorgCode = action.record.porgCode\n      } else {\n        newState.editOrgName = \"\"\n        newState.editOrgCode = \"\"\n        newState.editOrgDesc = \"\"\n        newState.editId = \"\"\n        newState.editPid = \"\"\n        newState.editPorgCode = \"\"\n      }\n      break;\n    case types.INIT_ORG_TREE_DATA:\n      newState.treeList = action.treeList\n      break;\n    case types.SET_EDIT_TREE_VALUE:\n      newState.editPorgCode = action.tree.orgCode\n      newState.editPid = action.tree.id\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_CERT_LIST:\n      newState.list = action.list\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  allProductType: [],\r\n  verifyApiList: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  productName: \"\",\r\n  productPrice: 0,\r\n  productPaying: \"\",\r\n  productTypeCode: \"\",\r\n  productRemark: \"\",\r\n  tag: \"\",\r\n  APIName: \"\",\r\n  orderWord: \"\",\r\n  record: {},\r\n  saveLoading: false\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_DICT_TYPE_LIST:\r\n      newState.typeList = action.typeList;\r\n      break;\r\n    case types.QUERY_DICT_DATA_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.INIT_ALL_PRODUCT_TYPE:\r\n      newState.allProductType = action.allProductType;\r\n      break;\r\n    case types.SET_PRODUCT_NAME:\r\n      newState.productName = action.productName;\r\n      break;\r\n    case types.SET_PRODUCT_PRICE:\r\n      newState.productPrice = action.productPrice;\r\n      break;\r\n    case types.SET_PRODUCT_PAYING:\r\n      newState.productPaying = action.productPaying;\r\n      break;\r\n    case types.SET_PRODUCT_TYPE_CODE:\r\n      newState.productTypeCode = action.productTypeCode;\r\n      break;\r\n    case types.SET_PRODUCT_REMARK:\r\n      newState.productRemark = action.productRemark;\r\n      break;\r\n    case types.SET_PRODUCT_TAG:\r\n      newState.tag = action.tag;\r\n      break;\r\n    case types.INIT_VERIFY_API_LIST:\r\n      newState.verifyApiList = action.verifyApiList;\r\n      break;\r\n    case types.SET_API_NAME:\r\n      newState.APIName = action.APIName;\r\n      break;\r\n    case types.SET_ORDER_WORD:\r\n      newState.orderWord = action.orderWord;\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  editAuthName: \"\",\n  editURL: \"\",\n  editAuthLevel: \"\",\n  editAuthStyle: \"\",\n  editStatus: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.INIT_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_AUTH_NAME:\n      newState.editAuthName = action.editAuthName\n      break;\n    case types.CHANGE_EDIT_URL:\n      newState.editURL = action.editURL\n      break;\n    case types.CHANGE_AUTH_LEVE:\n      newState.editAuthLevel = action.editAuthLevel\n      break;\n    case types.CHANGE_AUTH_STYLE:\n      newState.editAuthStyle = action.editAuthStyle\n      break;\n    case types.CHANGE_EDIT_STATUS:\n      newState.editStatus = action.editStatus\n      break;\n    case types.CLEAN_FORM:\n      newState.editAuthName = \"\"\n      newState.editURL = \"\"\n      newState.editAuthLevel = \"\"\n      newState.editAuthStyle = \"\"\n      newState.editStatus = \"\"\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  productList: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  editProductCode: \"\",\n  editName: \"\",\n  editOrders: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.INIT_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.INIT_PRODUCT_LIST:\n      newState.productList = action.productList\n      break;\n    case types.CHANGE_EDIT_PRODUCT_CODE:\n      newState.editProductCode = action.editProductCode\n      break;\n    case types.CHANGE_EDIT_NAME:\n      newState.editName = action.editName\n      break;\n    case types.CHANGE_EDIT_ORDERS:\n      newState.editOrders = action.editOrders\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  productAllList: [],\n  docCatalogList: [],\n  editCatalogCode: \"\",\n  pagination: {},\n  spinning: false,\n  params: {},\n  editTitle: \"\",\n  editContent: \"<p>请输入文档内容!</b></p>\",\n  editState: \"\",\n  detailInfo: null,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.QUERY_DOCCATALOG_LIST:\n      newState.docCatalogList = action.docCatalogList\n      newState.editCatalogCode = action.editCatalogCode\n      break;\n    case types.SET_EDIT_CATALOGO_CODE:\n      newState.editCatalogCode = action.editCatalogCode\n      break;\n\n    case types.INIT_PRODUCT_ALL_LIST:\n      newState.productAllList = action.productAllList;\n      break;\n    case types.CHANGE_EDIT_TITLE:\n      newState.editTitle = action.editTitle\n      break;\n    case types.CHANGE_EDIT_CONTENT:\n      newState.editContent = action.editContent\n      break;\n    case types.INIT_NOTICE_DETAIL:\n      newState.detailInfo = action.detailInfo\n      break;\n    case types.CHANGE_EDIT_STATE:\n      newState.editState = action.editState\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  editSettingExp: \"\",\n  editSettingKey: \"\",\n  editSettingValue: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.INIT_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      newState.needPaging = action.true\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_SETTING_EXP:\n      newState.editSettingExp = action.editSettingExp\n      break;\n    case types.CHANGE_EDIT_SETTING_KEY:\n      newState.editSettingKey = action.editSettingKey\n      break;\n    case types.CHANGE_EDIT_SETTING_VALUE:\n      newState.editSettingValue = action.editSettingValue\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  saveLoading: false,\n  params: {},\n  editTitle: \"\",\n  editAmount: \"\",\n  editType: \"\",\n  editMaxLimit: 0\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_TITLE:\n      newState.editTitle = action.editTitle\n      break;\n    case types.CHANGE_EDIT_Amount:\n      newState.editAmount = action.editAmount\n      break;\n    case types.CHANGE_EDIT_TYPE:\n      newState.editType = action.editType\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    case types.CHANGE_EDIT_MAX_LIMIT:\n      newState.editMaxLimit = action.editMaxLimit\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nconst defaultState = {\n  list: [],\n  sliderMenuList: [],\n  operationType: \"\",\n  addModalvisible: false,\n  editModalvisible: false,\n  editRecord: null,\n  spinning: false,\n  addConfirmLoading: false,\n  editConfirmLoading: false,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case types.CHANGE_ADD_CONFIRM_LOADING:\n      newState.addConfirmLoading = action.addConfirmLoading\n      break;\n    case types.CHANGE_EDIT_CONFIRM_LOADING:\n      newState.editConfirmLoading = action.editConfirmLoading\n      break;\n    case types.INIT_MENU_LIST:\n      newState.list = action.list\n      break;\n    case types.CHANGE_ADD_MODAL_VISIBLE:\n      newState.addModalvisible = action.addModalvisible\n      break;\n    case types.CHANGE_EDIT_MODAL_VISIBLE:\n      newState.editModalvisible = action.editModalvisible\n      break;\n    case types.CHANGE_EDIT_RECORD:\n      newState.editRecord = action.editRecord\n      break;\n    case types.INIT_SLIDER_MENU_LIST:\n      newState.sliderMenuList = action.sliderMenuList\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  appList: [],\r\n  appListPagination: {},\r\n  spinning: false,\r\n  saveLoading: false,\r\n  params: {},\r\n  editAccountName: \"\",\r\n  editAccountType: \"\",\r\n  editOrgCode: \"\",\r\n  editParentAccount: \"\",\r\n  editAccessScrect: \"\",\r\n  editOrgList: [],\r\n  rechargeType: \"\",\r\n  rechargeMoney: 0,\r\n  appSelectedKeys: []\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.QUERY_APP_LIST:\r\n      newState.appList = action.appList;\r\n      newState.appListPagination = action.appListPagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    case types.SET_EDIT_ACCOUNT_NAME:\r\n      newState.editAccountName = action.editAccountName;\r\n      break;\r\n    case types.SET_EDIT_ACCOUNT_TYPE:\r\n      newState.editAccountType = action.editAccountType;\r\n      break;\r\n    case types.SET_EDIT_ORG_CODE:\r\n      newState.editOrgCode = action.editOrgCode;\r\n      break;\r\n    case types.INIT_EDIT_ORG_LIST:\r\n      newState.editOrgList = action.editOrgList;\r\n      break;\r\n    case types.SET_EDIT_PARENT_ACCOUNT:\r\n      newState.editParentAccount = action.editParentAccount;\r\n      break;\r\n    case types.SET_EDIT_ACCESS_SCRECT:\r\n      newState.editAccessScrect = action.editAccessScrect;\r\n      break;\r\n    case types.SET_RE_CHARGE_TYPE:\r\n      newState.rechargeType = action.rechargeType;\r\n      break;\r\n    case types.SET_RE_CHARGE_MONEY:\r\n      newState.rechargeMoney = action.rechargeMoney;\r\n      break;\r\n    case types.CHANGE_APP_SELECTED_KEYS:\r\n      newState.appSelectedKeys = action.appSelectedKeys;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  saveLoading: false,\n  params: {},\n  editStrategyName: \"\",\n  editStrategyDesc: \"\",\n  editType: \"\",\n  editStrategyRule: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_STRATEGY_NAME:\n      newState.editStrategyName = action.editStrategyName\n      break;\n    case types.CHANGE_EDIT_STRATEGY_DESC:\n      newState.editStrategyDesc = action.editStrategyDesc\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    case types.CHANGE_EDIT_TYPE:\n      newState.editType = action.editType\n      break;\n    case types.CHANGE_EDIT_STRATEGY_RULE:\n      newState.editStrategyRule = action.editStrategyRule\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  detail: null,\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {}\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.INIT_DETAIL:\r\n      newState.detail = action.detail;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  detail: null,\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {}\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.INIT_DETAIL:\r\n      newState.detail = action.detail;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nfunction mapArr(catalog, product) {\r\n  for (let i = 0; i < catalog.length; i++) {\r\n    if (catalog[i].productTypeCode === product[0].productTypeCode) {\r\n      catalog[i].productList = product\r\n    }\r\n  }\r\n}\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  saveLoading: false,\r\n  params: {},\r\n  detail: null,\r\n  allLandingModes: [],\r\n  allAppTypes: [],\r\n  allSupportCAs: [],\r\n  applyGetFileList: [],\r\n  confirmVisible: false,\r\n  confirmLoading: false,\r\n  catalog: []\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    case types.INIT_DETAIL:\r\n      newState.detail = action.detail;\r\n      break;\r\n    case types.INIT_ALL_LANDING_MODES:\r\n      newState.allLandingModes = action.allLandingModes;\r\n      break;\r\n    case types.INIT_ALL_APP_TYPES:\r\n      newState.allAppTypes = action.allAppTypes;\r\n      break;\r\n    case types.INIT_ALL_SUPPORT_CAS:\r\n      newState.allSupportCAs = action.allSupportCAs;\r\n      break;\r\n    case types.INIT_GET_FILE_LIST:\r\n      newState.applyGetFileList = action.applyGetFileList;\r\n      break;\r\n    case types.CHANGE_CONFIRM_VISIBLE:\r\n      newState.confirmVisible = action.confirmVisible;\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.confirmLoading = action.confirmLoading;\r\n      break;\r\n    case types.INIT_CATALOG:\r\n      newState.catalog = action.catalog;\r\n      break;\r\n    case types.INIT_PRODUCT_LIST:\r\n      mapArr(newState.catalog, action.productList)\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  saveLoading: false,\r\n  params: {},\r\n  editTitle: \"\",\r\n  editURL: \"\",\r\n  showImage: false,\r\n  editImageURL: \"\",\r\n  editStatus: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.CHANGE_EDIT_TITLE:\r\n      newState.editTitle = action.editTitle;\r\n      break;\r\n    case types.CHANGE_SHOW_IMAGE:\r\n      newState.showImage = action.showImage;\r\n      break;\r\n    case types.CHANGE_EDIT_URL:\r\n      newState.editURL = action.editURL;\r\n      break;\r\n    case types.CHANGE_EDIT_IMAGE_URL:\r\n      newState.editImageURL = action.editImageURL;\r\n      break;\r\n    case types.CHANGE_EDIT_STATUS:\r\n      newState.editStatus = action.editStatus;\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  editTitle: \"\",\n  editType:\"\",\n  editContent: \"\",\n  editState: \"\",\n  detailInfo: null,\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_NOTICE_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_TITLE:\n      newState.editTitle = action.editTitle\n      break;\n    case types.CHANGE_EDIT_TYPE:\n      newState.editType = action.editType\n      break;\n    case types.CHANGE_EDIT_CONTENT:\n      newState.editContent = action.editContent\n      break;\n    case types.INIT_NOTICE_DETAIL:\n      newState.detailInfo = action.detailInfo\n      break;\n    case types.CHANGE_EDIT_STATE:\n      newState.editState = action.editState\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n  modalVisible:false, \n  editStatus: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_MODAL_VISIBLE:\n      newState.modalVisible = action.modalVisible\n      newState.editStatus = action.editStatus\n      break;\n    case types.CHANGE_EDIT_STATUS:\n      newState.editStatus = action.editStatus\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  saveLoading: false,\n  params: {},\n  editTitle: \"\",\n  editURL: \"\",\n  editRemarks: \"\",\n  selectedRowKeys: [],\n  roleId: \"\"\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_TITLE:\n      newState.editTitle = action.editTitle\n      break;\n    case types.CHANGE_EDIT_URL:\n      newState.editURL = action.editURL\n      break;\n    case types.CHANGE_EDIT_REMARKS:\n      newState.editRemarks = action.editRemarks\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    case types.CHANGE_SELECTED_ROW_KEYS:\n      newState.selectedRowKeys = action.selectedRowKeys\n      break;\n    case types.INIT_ROLE_ID:\n      newState.roleId = action.roleId\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  saveLoading: false,\n  params: {},\n  editName: \"\",\n  editRemarks: \"\",\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_EDIT_NAME:\n      newState.editName = action.editName\n      break;\n    case types.CHANGE_EDIT_REMARKS:\n      newState.editRemarks = action.editRemarks\n      break;\n    case types.CHANGE_SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  preferentialList: [],\n  billingList: [],\n  productList: [],\n  pagination: {},\n  preferentialListPagination: {},\n  billingListPagination: {},\n  productPagination: {},\n  spinning: false,\n  params: {},\n  modalVisible: false,\n  editStatus: \"\",\n  strategyName: \"\",\n  strategyCode: \"\",\n  billingName: \"\",\n  billingCode: \"\",\n  productName: \"\",\n  productCode: \"\",\n  record: null,\n  productSelectedKeys: [],\n  billingSelectedKeys: [],\n  preferentialSelectedKeys: []\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.QUERY_PREFERENTTIAL_LIST:\n      newState.preferentialList = action.preferentialList\n      newState.preferentialListPagination = action.preferentialListPagination\n      break;\n    case types.QUERY_BILLING_LIST:\n      newState.billingList = action.billingList\n      newState.billingListPagination = action.billingListPagination\n      break;\n    case types.QUERY_PRODUCT_LIST:\n      newState.productList = action.productList\n      newState.productPagination = action.productPagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    case types.CHANGE_MODAL_VISIBLE:\n      newState.modalVisible = action.modalVisible\n      newState.editStatus = action.editStatus\n      break;\n    case types.CHANGE_EDIT_STATUS:\n      newState.editStatus = action.editStatus\n      break;\n    case types.CHANGE_CONFIG_STRATEGY_NAME:\n      newState.strategyName = action.strategyName\n      break;\n    case types.CHANGE_CONFIG_STRATEGY_CODE:\n      newState.strategyCode = action.strategyCode\n      break;\n    case types.CHANGE_CONFIG_BILLING_NAME:\n      newState.billingName = action.billingName\n      break;\n    case types.CHANGE_CONFIG_BILLING_CODE:\n      newState.billingCode = action.billingCode\n      break;\n    case types.CHANGE_CONFIG_PRODUCT_NAME:\n      newState.productName = action.productName\n      break;\n    case types.CHANGE_CONFIG_PRODUCT_CODE:\n      newState.productCode = action.productCode\n      break;\n    case types.CHANGE_PRODUCT_SELECTED_KEYS:\n      newState.productSelectedKeys = action.productSelectedKeys\n      break;\n    case types.CHANGE_BILLING_SELECTED_KEYS:\n      newState.billingSelectedKeys = action.billingSelectedKeys\n      break;\n    case types.CHANGE_PREFERENTIAL_SELECTED_KEYS:\n      newState.preferentialSelectedKeys = action.preferentialSelectedKeys\n      break;\n    case types.CHANGE_RECORD:\n      newState.record = action.record\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  spinning: false,\n  saveLoading: false,\n  modalVisible: false,\n  edit: false,\n  record: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      break;\n    case types.SAVE_LOADING:\n      newState.saveLoading = action.saveLoading\n      break;\n    case types.CHANGE_MODAL_VISIBLE:\n      newState.modalVisible = action.modalVisible\n      newState.edit = action.edit\n      newState.record = action.record\n      break;\n    case types.CHANGE_STRATEGY_NAME:\n      newState.record.strategyName = action.strategyName\n      break;\n    case types.CHANGE_STRATEGY_CODE:\n      newState.record.strategyCode = action.strategyCode\n      break;\n    case types.CHANGE_STRATEGY_STATUS:\n      newState.record.strategyStatus = action.strategyStatus\n      break;\n    case types.CHANGE_CONFIRM_LOADING:\n      newState.confirmLoading = action.confirmLoading\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from './actionTypes';\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\n\nconst defaultState = {\n  list: [],\n  pagination: {},\n  spinning: false,\n  params: {},\n};\n\nexport default (state = defaultState, action) => {\n  let newState = JSON.parse(JSON.stringify(state))\n  switch (action.type) {\n    case spinningTypes:\n      newState.spinning = action.spinning\n      break;\n    case types.QUERY_LIST:\n      newState.list = action.list\n      newState.pagination = action.pagination\n      break;\n    case types.CHANGE_SEARCH_PARAMS:\n      newState.params = action.params\n      break;\n    default:\n      break;\n  }\n  return newState\n}","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  spinning: false,\r\n  saveLoading: false,\r\n  modalVisible: false,\r\n  edit: false,\r\n  record: {}\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      break;\r\n    case types.SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    case types.CHANGE_MODAL_VISIBLE:\r\n      newState.modalVisible = action.modalVisible;\r\n      newState.edit = action.edit;\r\n      newState.record = action.record;\r\n      break;\r\n    case types.CHANGE_TYPE_NAME:\r\n      newState.record.typeName = action.typeName;\r\n      break;\r\n    case types.CHANGE_TYPE_REMARKS:\r\n      newState.record.typeRemarks = action.typeRemarks;\r\n      break;\r\n    case types.CHANGE_STRATEGY_STATUS:\r\n      newState.record.state = action.strategyStatus;\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.confirmLoading = action.confirmLoading;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  typeList: [],\r\n  paramsDetail: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  apiName: \"\",\r\n  typeId: \"\",\r\n  apiUrl: \"\",\r\n  apiReqType: \"\",\r\n  apiParamType: \"\",\r\n  apiRemarks: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      newState.pagination = action.pagination;\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params;\r\n      break;\r\n    case types.SET_API_NAME:\r\n      newState.apiName = action.apiName;\r\n      break;\r\n    case types.SET_TYPE_ID:\r\n      newState.typeId = action.typeId;\r\n      break;\r\n    case types.SET_API_REQ_TYPE:\r\n      newState.apiReqType = action.apiReqType;\r\n      break;\r\n    case types.INIT_TYPE_LIST:\r\n      newState.typeList = action.typeList;\r\n      break;\r\n    case types.SET_API_URL:\r\n      newState.apiUrl = action.apiUrl;\r\n      break;\r\n    case types.SET_API_PARAM_TYPE:\r\n      newState.apiParamType = action.apiParamType;\r\n      break;\r\n    case types.SET_API_REMARKS:\r\n      newState.apiRemarks = action.apiRemarks;\r\n      break;\r\n    case types.SET_API_PARAMS_DETAIL:\r\n      newState.paramsDetail = action.paramsDetail;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from \"./actionTypes\";\r\nimport spinningTypes from \"pages/common/layer/spinning/spinningTypes\";\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  spinning: false,\r\n  saveLoading: false,\r\n  paramName: \"\",\r\n  paramType: \"\",\r\n  isNess: \"\",\r\n  paramRemarks: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state));\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning;\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list;\r\n      break;\r\n    case types.SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading;\r\n      break;\r\n    case types.SET_PARAM_NAME:\r\n      newState.paramName = action.paramName;\r\n      break;\r\n    case types.SET_PARAM_TYPE:\r\n      newState.paramType = action.paramType;\r\n      break;\r\n    case types.SET_IS_NESS:\r\n      newState.isNess = action.isNess;\r\n      break;\r\n    case types.SET_PARAM_REMARKS:\r\n      newState.paramRemarks = action.paramRemarks;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState;\r\n};\r\n","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import sliderReducer from \"pages/common/menu/store/reducer\";\r\nimport headReducer from \"pages/common/header/store/reducer\";\r\nimport adminReducer from \"pages/admin/store/reducer\";\r\nimport loginReducer from \"pages/login/store/reducer\";\r\nimport roleReducer from \"pages/role/store/reducer\";\r\nimport menuReducer from \"pages/menu/store/reducer\";\r\nimport userReducer from \"pages/user/store/reducer\";\r\nimport appReducer from \"pages/app/store/reducer\";\r\nimport dictTypeReducer from \"pages/dictType/store/reducer\";\r\nimport dictDataReducer from \"pages/dictData/store/reducer\";\r\nimport noticeReducer from \"pages/notice/store/reducer\";\r\nimport orgReducer from \"pages/org/store/reducer\";\r\nimport certReducer from \"pages/cert/store/reducer\";\r\nimport productReducer from \"pages/product/store/reducer\";\r\nimport certificationReducer from \"pages/certification/store/reducer\";\r\nimport docCatalogReducer from \"pages/docCatalog/store/reducer\";\r\nimport docReducer from \"pages/doc/store/reducer\";\r\nimport platSettingReducer from \"pages/platSetting/store/reducer\";\r\nimport billingReducer from \"pages/billing/store/reducer\";\r\nimport productTypeReducer from \"pages/productType/store/reducer\";\r\nimport accountReducer from \"pages/account/store/reducer\";\r\nimport preferentialReducer from \"pages/preferential/store/reducer\";\r\nimport chargeConsumeReducer from \"pages/chargeConsume/store/reducer\";\r\nimport chargeRechargeReducer from \"pages/chargeRecharge/store/reducer\";\r\nimport applyOrderReducer from \"pages/applyOrder/store/reducer\";\r\nimport linkReducer from \"pages/link/store/reducer\";\r\nimport questionReducer from \"pages/question/store/reducer\";\r\nimport clientUserReducer from \"pages/clientUser/store/reducer\";\r\nimport tokenPowerReducer from \"pages/tokenPower/store/reducer\";\r\nimport tokenRoleReducer from \"pages/tokenRole/store/reducer\";\r\nimport chargeConfigReducer from \"pages/chargeConfig/store/reducer\";\r\nimport adminLogsReducer from \"pages/adminLogs/store/reducer\";\r\nimport safeStrategyReducer from \"pages/safeStrategy/store/reducer\";\r\nimport verifyServerReducer from \"pages/verifyServer/store/reducer\";\r\nimport oApiTypesReducer from \"pages/oApiTypes/store/reducer\";\r\nimport oApiReducer from \"pages/oApi/store/reducer\";\r\nimport oApiParamsReducer from \"pages/oApiParams/store/reducer\";\r\nimport userLogsReducer from \"pages/userLogs/store/reducer\";\r\nimport appLogsReducer from \"pages/appLogs/store/reducer\";\r\n\r\nexport default {\r\n  appLogs: appLogsReducer,\r\n  userLogs: userLogsReducer,\r\n  login: loginReducer,\r\n  slider: sliderReducer,\r\n  header: headReducer,\r\n  admin: adminReducer,\r\n  role: roleReducer,\r\n  menu: menuReducer,\r\n  user: userReducer,\r\n  app: appReducer,\r\n  dictType: dictTypeReducer,\r\n  dictData: dictDataReducer,\r\n  notice: noticeReducer,\r\n  org: orgReducer,\r\n  cert: certReducer,\r\n  product: productReducer,\r\n  certification: certificationReducer,\r\n  docCatalog: docCatalogReducer,\r\n  doc: docReducer,\r\n  platSetting: platSettingReducer,\r\n  billing: billingReducer,\r\n  productType: productTypeReducer,\r\n  account: accountReducer,\r\n  preferential: preferentialReducer,\r\n  chargeConsume: chargeConsumeReducer,\r\n  chargeRecharge: chargeRechargeReducer,\r\n  applyOrder: applyOrderReducer,\r\n  link: linkReducer,\r\n  question: questionReducer,\r\n  clientUser: clientUserReducer,\r\n  tokenPower: tokenPowerReducer,\r\n  tokenRole: tokenRoleReducer,\r\n  chargeConfig: chargeConfigReducer,\r\n  adminLogs: adminLogsReducer,\r\n  verifyServer: verifyServerReducer,\r\n  safeStrategy: safeStrategyReducer,\r\n  oApiTypes: oApiTypesReducer,\r\n  oApi: oApiReducer,\r\n  oApiParams: oApiParamsReducer\r\n};\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst reducer = combineReducers(reducers);\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store;\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { Spin } from 'antd';\n\n\nconst Login = lazy(() => import('pages/login/Login'));\nconst Home = lazy(() => import('pages/index/IndexHome'));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div>\n        <Router>\n          <Suspense fallback={<Spin />}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    </Provider>\n  )\n\n}\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport './reset.css';\nimport './static/plugins/gzca/css/gzca.css';\nimport App from './App';\nimport {ConfigProvider } from 'antd';\n\nconst app = () => (\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>\n)\n\nReactDOM.render(app(), document.getElementById('root'));\n","const QUERY_NOTICE_LIST = \"QUERY_NOTICE_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\nconst CHANGE_EDIT_NOTICE_TYPE = \"CHANGE_EDIT_NOTICE_TYPE\"\n\nexport {\n  QUERY_NOTICE_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n  CHANGE_EDIT_STATE,\n  CHANGE_EDIT_NOTICE_TYPE,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_Amount = \"CHANGE_EDIT_Amount\"\nconst CHANGE_EDIT_TYPE = \"CHANGE_EDIT_TYPE\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\nconst CHANGE_EDIT_MAX_LIMIT = \"CHANGE_EDIT_MAX_LIMIT\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_Amount,\n  CHANGE_EDIT_TYPE,\n  CHANGE_SAVE_LOADING,\n  CHANGE_EDIT_MAX_LIMIT,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_STRATEGY_NAME = \"CHANGE_EDIT_STRATEGY_NAME\"\nconst CHANGE_EDIT_STRATEGY_DESC = \"CHANGE_EDIT_STRATEGY_DESC\"\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\nconst CHANGE_EDIT_TYPE = \"CHANGE_EDIT_TYPE\"\nconst CHANGE_EDIT_STRATEGY_RULE = \"CHANGE_EDIT_STRATEGY_RULE\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_STRATEGY_NAME,\n  CHANGE_EDIT_STRATEGY_DESC,\n  CHANGE_SAVE_LOADING,\n  CHANGE_EDIT_TYPE,\n  CHANGE_EDIT_STRATEGY_RULE,\n}","const QUERY_NOTICE_LIST = \"QUERY_NOTICE_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\nconst CHANGE_EDIT_TYPE = \"CHANGE_EDIT_TYPE\"\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\n\nexport {\n  QUERY_NOTICE_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_TITLE,\n  CHANGE_EDIT_TYPE,\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n  CHANGE_EDIT_STATE,\n}","const INIT_MENU_LIST = \"QUERY_MENU_LIST\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\nconst CHANGE_ADD_CONFIRM_LOADING = \"CHANGE_ADD_CONFIRM_LOADING\"\nconst CHANGE_EDIT_CONFIRM_LOADING = \"CHANGE_EDIT_CONFIRM_LOADING\"\nconst CHANGE_EDIT_MODAL_VISIBLE = \"CHANGE_EDIT_MODAL_VISIBLE\"\nconst CHANGE_EDIT_RECORD = \"CHANGE_EDIT_RECORD\"\nconst INIT_SLIDER_MENU_LIST = \"INIT_SLIDER_MENU_LIST\"\n\n\nexport {\n  INIT_MENU_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n  CHANGE_ADD_CONFIRM_LOADING,\n  CHANGE_EDIT_CONFIRM_LOADING,\n  CHANGE_EDIT_MODAL_VISIBLE,\n  CHANGE_EDIT_RECORD,\n  INIT_SLIDER_MENU_LIST,\n}","const INIT_MENU_LIST = \"QUERY_MENU_LIST\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\nconst CHANGE_ADD_CONFIRM_LOADING = \"CHANGE_ADD_CONFIRM_LOADING\"\nconst CHANGE_EDIT_CONFIRM_LOADING = \"CHANGE_EDIT_CONFIRM_LOADING\"\nconst CHANGE_EDIT_MODAL_VISIBLE = \"CHANGE_EDIT_MODAL_VISIBLE\"\nconst CHANGE_EDIT_RECORD = \"CHANGE_EDIT_RECORD\"\nconst INIT_SLIDER_MENU_LIST = \"INIT_SLIDER_MENU_LIST\"\n\n\nexport {\n  INIT_MENU_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n  CHANGE_ADD_CONFIRM_LOADING,\n  CHANGE_EDIT_CONFIRM_LOADING,\n  CHANGE_EDIT_MODAL_VISIBLE,\n  CHANGE_EDIT_RECORD,\n  INIT_SLIDER_MENU_LIST,\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_MODAL_VISIBLE = \"CHANGE_MODAL_VISIBLE\"\nconst SAVE_LOADING = \"SAVE_LOADING\"\nconst CHANGE_STRATEGY_NAME = \"CHANGE_STRATEGY_NAME\"\nconst CHANGE_STRATEGY_CODE = \"CHANGE_STRATEGY_CODE\"\nconst CHANGE_STRATEGY_STATUS = \"CHANGE_STRATEGY_STATUS\"\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_MODAL_VISIBLE,\n  SAVE_LOADING,\n  CHANGE_STRATEGY_NAME,\n  CHANGE_STRATEGY_CODE,\n  CHANGE_STRATEGY_STATUS,\n  CHANGE_CONFIRM_LOADING\n}","const QUERY_LIST = \"QUERY_LIST\";\r\nconst CHANGE_MODAL_VISIBLE = \"CHANGE_MODAL_VISIBLE\";\r\nconst SAVE_LOADING = \"SAVE_LOADING\";\r\nconst CHANGE_TYPE_NAME = \"CHANGE_TYPE_NAME\";\r\nconst CHANGE_TYPE_REMARKS = \"CHANGE_TYPE_REMARKS\";\r\nconst CHANGE_STRATEGY_STATUS = \"CHANGE_STRATEGY_STATUS\";\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\";\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  CHANGE_MODAL_VISIBLE,\r\n  SAVE_LOADING,\r\n  CHANGE_TYPE_NAME,\r\n  CHANGE_TYPE_REMARKS,\r\n  CHANGE_STRATEGY_STATUS,\r\n  CHANGE_CONFIRM_LOADING\r\n};\r\n","const INIT_LIST = \"INIT_LIST\"\nconst INIT_PRODUCT_LIST = \"INIT_PRODUCT_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_PRODUCT_CODE = \"CHANGE_EDIT_PRODUCT_CODE\"\nconst CHANGE_EDIT_NAME = \"CHANGE_EDIT_NAME\"\nconst CHANGE_EDIT_ORDERS = \"CHANGE_EDIT_ORDERS\"\n\n\nexport {\n  INIT_LIST,\n  INIT_PRODUCT_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_PRODUCT_CODE,\n  CHANGE_EDIT_NAME,\n  CHANGE_EDIT_ORDERS,\n}","const QUERY_LIST = \"QUERY_LIST\";\r\nconst SAVE_LOADING = \"SAVE_LOADING\";\r\nconst SET_PARAM_NAME = \"SET_PARAM_NAME\";\r\nconst SET_PARAM_TYPE = \"SET_PARAM_TYPE\";\r\nconst SET_IS_NESS = \"SET_IS_NESS\";\r\nconst SET_PARAM_REMARKS = \"SET_PARAM_REMARKS\";\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  SAVE_LOADING,\r\n  SET_PARAM_NAME,\r\n  SET_PARAM_TYPE,\r\n  SET_IS_NESS,\r\n  SET_PARAM_REMARKS\r\n};\r\n","const QUERY_ROLE_LIST = \"QUERY_ROLE_LIST\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\nconst CHANGE_MENU_MODAL_VISIBLE = \"CHANGE_MENU_MODAL_VISIBLE\"\nconst INIT_MENU_LIST = \"INIT_MENU_LIST\"\nconst CHANGE_CHECKED_KEYS_ACTION = \"CHANGE_CHECKED_KEYS_ACTION\"\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\n\nexport {\n  QUERY_ROLE_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n  CHANGE_MENU_MODAL_VISIBLE,\n  INIT_MENU_LIST,\n  CHANGE_CHECKED_KEYS_ACTION,\n  CHANGE_CONFIRM_LOADING,\n}","const INIT_LIST = \"INIT_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_SETTING_EXP = \"CHANGE_EDIT_SETTING_EXP\"\nconst CHANGE_EDIT_SETTING_KEY = \"CHANGE_EDIT_SETTING_KEY\"\nconst CHANGE_EDIT_SETTING_VALUE = \"CHANGE_EDIT_SETTING_VALUE\"\n\nexport {\n  INIT_LIST,\n  CHANGE_EDIT_SETTING_EXP,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_SETTING_KEY,\n  CHANGE_EDIT_SETTING_VALUE\n}","const QUERY_LIST = \"QUERY_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_EDIT_NAME = \"CHANGE_EDIT_NAME\"\nconst CHANGE_EDIT_URL = \"CHANGE_EDIT_URL\"\nconst CHANGE_EDIT_REMARKS = \"CHANGE_EDIT_REMARKS\"\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\n\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\n\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\n\nexport {\n  QUERY_LIST,\n  CHANGE_SEARCH_PARAMS,\n  CHANGE_EDIT_NAME,\n  CHANGE_EDIT_URL,\n  CHANGE_EDIT_REMARKS,\n  CHANGE_EDIT_STATUS,\n  CHANGE_SAVE_LOADING,\n\n  CHANGE_EDIT_CONTENT,\n  CHANGE_EDIT_REFTITLE,\n  INIT_NOTICE_DETAIL,\n  CHANGE_EDIT_STATE,\n}","const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\"\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\nconst QUERY_DICT_DATA_LIST = \"QUERY_DICT_DATA_LIST\"\nexport {\n  CHANGE_CONFIRM_LOADING,\n  QUERY_DICT_TYPE_LIST,\n  CHANGE_ADD_MODAL_VISIBLE,\n  QUERY_DICT_DATA_LIST,\n\n  CHANGE_SEARCH_PARAMS\n}"],"sourceRoot":""}