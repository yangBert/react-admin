{"version":3,"sources":["pages/notice/css/add.module.css","pages/notice/components/NoticeAdd.js","pages/common/layer/spinning/index.js","static/js/pagination.js","pages/notice/store/creators.js","pages/notice/config.js"],"names":["module","exports","Option","NoticeAdd","state","editorState","handleEditorChange","setState","this","props","location","editId","queryNoticeDetail","_this","data","id","BraftEditor","createEditorState","editTitle","editState","editNoticeType","$$","trim","creater","localStorage","get","createrName","req","title","noticeType","content","toHTML","saveNotice","error","className","styles","pageContet","tip","spinning","form","formLine","inline","placeholder","allowClear","onChange","e","changeEditTitle","target","value","style","width","changeEditNoticeType","config","map","item","key","name","type","button","onClick","save","to","editContent","Component","connect","notice","dispatch","action","creators","CHANGE_SPINNING","createPagination","current","pageNo","pageSize","total","totalSize","defaultPageSize","showSizeChanger","showQuickJumper","createChangeParamsAction","params","types","changeEditTitleAction","changeEditNoticeTypeAction","createSaveNoticeAction","spinningAction","url","requestURL","request","res","success","message","okText","onOk","history","goBack","notification","push","queryNoticelistAction","list","results","pagination","queryNoticeDetailAction","publishNoticeAction","getState","arr","s"],"mappings":"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","file":"static/js/97.c0b951e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"add_formLine__DYefc\",\"inline\":\"add_inline__1PQPD\",\"form\":\"add_form__1ieqg\",\"pageContet\":\"add_pageContet__MOr1f\",\"editContent\":\"add_editContent__Qfw2w\",\"button\":\"add_button__3ltk7\"};","import React, { Component } from 'react';\nimport { Spin, Input, Button, message, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport * as creators from '../store/creators';\nimport styles from '../css/add.module.css';\nimport BraftEditor from 'braft-editor';\nimport 'braft-editor/dist/index.css';\nimport { Link } from 'react-router-dom';\nimport $$ from 'static/js/base';\nimport config from '../config';\n\nconst { Option } = Select;\n\nclass NoticeAdd extends Component {\n  state = {\n    editorState: null\n  }\n  componentDidMount() {\n\n    if (this.props.location.state && this.props.location.state.editId) {\n      this.props.queryNoticeDetail({ _this: this, data: { id: this.props.location.state.editId } })\n    } else {\n      //初始化富文本编辑器\n      this.setState({\n        editorState: BraftEditor.createEditorState(\"<p>请输入内容...</b></p>\")\n      })\n    }\n  }\n\n  save() {\n    const { editTitle, editState, editNoticeType } = this.props;\n    const { editorState } = this.state;\n    if ($$.trim(editTitle) === \"\") {\n      message.error('请填写公告标题');\n      return\n    } else if (editNoticeType === \"\") {\n      message.error('请选择公告类型');\n      return\n    } else if (editorState === null) {\n      message.error('请填公告内容');\n      return\n    }\n    const creater = $$.localStorage.get(\"adminId\")\n    const createrName = $$.localStorage.get(\"adminName\")\n    const req = {\n      props: this.props,\n      data: {\n        title: editTitle,\n        noticeType: editNoticeType,\n        content: editorState.toHTML(),\n        creater,\n        createrName,\n        state: editState,\n      }\n    }\n\n    const editId = this.props.location.state && this.props.location.state.editId\n    if (editId) {\n      req.data.id = editId\n    }\n\n    this.props.saveNotice(req)\n  }\n\n  handleEditorChange = (editorState) => {\n    this.setState({\n      editorState: editorState,\n    })\n  }\n\n  render() {\n    const { editorState } = this.state\n    return (\n      <div className={`${styles.pageContet} pageContentColor`}>\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\n          <div className=\"clearfix\">\n            <div className={`${styles.form} pullLeft`}>\n              <div className={`${styles.formLine} pullLeft`}>\n                <label className=\"pullLeft\">公告标题:</label>\n                <div className={`${styles.inline} pullLeft`}>\n                  <Input\n                    placeholder=\"请输入标题\"\n                    allowClear\n                    onChange={e => this.props.changeEditTitle(e.target.value)}\n                    value={this.props.editTitle}\n                  />\n                </div>\n              </div>\n              <div className={`${styles.formLine} pullLeft`}>\n                <label className=\"pullLeft\">公告类型:</label>\n                <div className={`${styles.inline} pullLeft`}>\n                  <Select\n                    style={{ width: \"100%\" }}\n                    onChange={value => this.props.changeEditNoticeType(value)}\n                    value={this.props.editNoticeType}\n                  >\n                    <Option value=\"\">请选择</Option>\n                    {\n                      config.noticeType.map(item => (\n                        <Option value={item.value} key={item.value}>{item.name}</Option>\n                      ))\n                    }\n                  </Select>\n                </div>\n              </div>\n            </div>\n            <div className=\"pullRight\">\n              <Button type=\"primary\" className={`${styles.button}`}\n                onClick={() => this.save()}\n              >保存公告</Button>\n              <Link to=\"/notice/NoticeList\">\n                <Button className={`${styles.button}`}>返回列表</Button>\n              </Link>\n            </div>\n\n          </div>\n          <div className={`${styles.editContent} my-component`}>\n            <BraftEditor\n              value={editorState}\n              onChange={this.handleEditorChange}\n            />\n          </div>\n        </Spin>\n      </div >\n    )\n  }\n}\n\nconst mapState = state => ({\n  spinning: state.notice.spinning,\n  editTitle: state.notice.editTitle,\n  editState: state.notice.editState,\n  editNoticeType: state.notice.editNoticeType,\n})\n\nconst mapDispatch = dispatch => ({\n  saveNotice: req => {\n    const action = creators.createSaveNoticeAction(req);\n    dispatch(action);\n  },\n  changeEditTitle: req => {\n    const action = creators.changeEditTitleAction(req);\n    dispatch(action);\n  },\n  changeEditNoticeType: req => {\n    const action = creators.changeEditNoticeTypeAction(req);\n    dispatch(action);\n  },\n  queryNoticeDetail: req => {\n    const action = creators.queryNoticeDetailAction(req);\n    dispatch(action);\n  },\n\n})\n\nexport default connect(mapState, mapDispatch)(NoticeAdd);","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n","export default function createPagination(data) {\n  return {\n    current: data.pageNo,\n    pageSize: data.pageSize,\n    total: data.totalSize,\n    defaultPageSize: 10,\n    showSizeChanger: true,\n    showQuickJumper: true\n  }\n} ","import * as types from './actionTypes';\nimport * as requestURL from 'static/js/requestURL';\nimport * as request from 'static/js/request';\nimport spinningAction from 'pages/common/layer/spinning';\nimport notification from 'pages/common/layer/notification';\nimport createPagination from 'static/js/pagination';\nimport { Modal } from 'antd'\nimport BraftEditor from 'braft-editor';\nconst initNoticeListAction = (list, pagination) => ({\n  type: types.QUERY_NOTICE_LIST,\n  list,\n  pagination\n})\n\n//查询携带参数\nconst createChangeParamsAction = params => ({\n  type: types.CHANGE_SEARCH_PARAMS,\n  params\n})\n\n//编辑改变标题\nconst changeEditTitleAction = editTitle => ({\n  type: types.CHANGE_EDIT_TITLE,\n  editTitle\n})\n\nconst changeEditNoticeTypeAction = editNoticeType => ({\n  type: types.CHANGE_EDIT_NOTICE_TYPE,\n  editNoticeType\n})\n\n//保存公告\nconst createSaveNoticeAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    const url = req.data.id ? requestURL.noticeUpdateNotice : requestURL.noticeAddNotice\n    request.json(url, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message } = res.data && res.data\n        if (success) {\n          Modal.success({\n            title: '系统提示',\n            content: message,\n            okText: '确认',\n            onOk: () => {\n              req.props.history.goBack()\n            }\n          });\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//查询公告列表\nconst queryNoticelistAction = req => {\n  return dispatch => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.noticeQueryByPage, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          const action = initNoticeListAction(data.results, createPagination(data))\n          dispatch(action)\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//公告详情\nconst queryNoticeDetailAction = req => {\n  return (dispatch) => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.noticeGetNoticeDetail, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message, data } = res.data && res.data\n        if (success) {\n          dispatch(changeEditTitleAction(data.title))\n          dispatch(changeEditNoticeTypeAction(data.noticeType))\n          req._this.setState({\n            editorState: BraftEditor.createEditorState(data.content)\n          })\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req._this.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n//发布公告\nconst publishNoticeAction = req => {\n  return (dispatch, getState) => {\n    dispatch(spinningAction(true))\n    request.json(requestURL.noticeUpdateNotice, req.data, res => {\n      dispatch(spinningAction(false))\n      if (res.data) {\n        const { success, message } = res.data && res.data\n        if (success) {\n          notification('success', message)\n          const pagination = getState().notice.pagination\n          const params = {\n            ...getState().notice.params,\n            pageNo: pagination.current,\n            pageSize: pagination.pageSize,\n          }\n          dispatch(queryNoticelistAction({ props: req.props, data: params }));\n        } else {\n          notification('error', message)\n        }\n      } else {\n        req.props.history.push(\"/500\")\n      }\n    })\n  }\n}\n\n\n\nexport {\n  queryNoticelistAction,\n  createSaveNoticeAction,\n  createChangeParamsAction,\n  changeEditTitleAction,\n  queryNoticeDetailAction,\n  publishNoticeAction,\n  changeEditNoticeTypeAction\n}","export default {\n  state: {\n    arr: [{ value: 0, name: \"已作废\" }, { value: 1, name: \"未发布\" }, { value: 2, name: \"审核未通过\" }, { value: 3, name: \"审核通过\" }, { value: 4, name: \"已发布\" }],\n    get(s) {\n      return s === 0 ? \"已作废\" : s === 1 ? \"未发布\" : s === 2 ? \"审核未通过\" : s === 3 ? \"审核通过\" : s === 4 ? \"已发布\" : \"--\";\n    }\n  },\n  noticeType: [{ value: \"SYS\", name: \"系统公告\" }, { value: \"OP\", name: \"运营公告\" }]\n}\n\n"],"sourceRoot":""}