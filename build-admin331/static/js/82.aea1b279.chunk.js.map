{"version":3,"sources":["pages/oApi/css/add.module.css","pages/oApi/components/Add.js","pages/common/layer/spinning/index.js","static/js/pagination.js","../node_modules/antd/es/message/style/css.js","../node_modules/antd/es/message/index.js","pages/oApi/store/creators.js","pages/oApi/config.js"],"names":["module","exports","Option","TextArea","Add","this","props","queryTypeList","data","location","state","record","apiName","typeId","apiReqType","apiUrl","apiParamType","apiRemarks","setApiName","setTypeId","setApiReqType","setApiParamType","setApiRemarks","setApiUrl","$$","trim","req","apiId","save","error","arr","Object","keys","config","forEach","k","push","v","className","styles","pageContet","tip","spinning","title","bordered","form","formLine","inline","value","style","width","onChange","typeList","map","item","key","typeName","placeholder","allowClear","e","target","rows","bottom","type","button","onClick","size","history","goBack","Component","connect","oApi","dispatch","action","creators","CHANGE_SPINNING","createPagination","current","pageNo","pageSize","total","totalSize","defaultPageSize","showSizeChanger","showQuickJumper","defaultTop","messageInstance","getContainer","maxCount","defaultDuration","prefixCls","transitionName","api","open","args","duration","undefined","iconType","info","success","warning","loading","closePromise","Promise","resolve","callback","onClose","newInstance","top","instance","getMessageInstance","iconNode","theme","switchIconNode","notice","content","concat","icon","result","removeNotice","then","filled","rejected","promise","options","destroy","warn","setApiNameAction","types","setTypeIdAction","setApiReqTypeAction","setApiUrlAction","setApiParamTypeAction","setApiRemarksAction","createSaveAction","spinningAction","url","requestURL","request","res","message","okText","onOk","notification","queryListAction","list","results","pagination","qeruyParamsDetailAction","paramsDetail","queryTypeListAction","createChangeParamsAction","params","NORMAL","INVILD"],"mappings":"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","file":"static/js/82.aea1b279.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"add_formLine__2H2mj\",\"inline\":\"add_inline__nKbUU\",\"form\":\"add_form__3YjUC\",\"editContent\":\"add_editContent__3fhG7\",\"button\":\"add_button__18hfp\",\"bottom\":\"add_bottom__2a3b6\"};","import React, { Component } from \"react\";\r\nimport { Spin, Input, Button, message, Select, Card } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as creators from \"../store/creators\";\r\nimport styles from \"../css/add.module.css\";\r\nimport $$ from \"static/js/base\";\r\nimport * as config from \"../config\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass Add extends Component {\r\n  componentDidMount() {\r\n    this.props.queryTypeList({ props: this.props, data: {} });\r\n    if (this.props.location.state) {\r\n      const {\r\n        apiName,\r\n        typeId,\r\n        apiReqType,\r\n        apiUrl,\r\n        apiParamType,\r\n        apiRemarks\r\n      } = this.props.location.state.record;\r\n      this.props.setApiName(apiName);\r\n      this.props.setTypeId(typeId);\r\n      this.props.setApiReqType(apiReqType);\r\n      this.props.setApiParamType(apiParamType);\r\n      this.props.setApiRemarks(apiRemarks);\r\n      this.props.setApiUrl(apiUrl);\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const {\r\n      apiName,\r\n      typeId,\r\n      apiReqType,\r\n      apiUrl,\r\n      apiParamType,\r\n      apiRemarks\r\n    } = this.props;\r\n    if ($$.trim(apiName) === \"\") {\r\n      message.error(\"请输入接口名称\");\r\n      return;\r\n    } else if (typeId === \"\") {\r\n      message.error(\"请选择接口类型\");\r\n      return;\r\n    } else if (apiReqType === \"\") {\r\n      message.error(\"请选择请求类型\");\r\n      return;\r\n    } else if (apiParamType === \"\") {\r\n      message.error(\"请选择参数类型\");\r\n      return;\r\n    } else if ($$.trim(apiUrl) === \"\") {\r\n      message.error(\"请输入接口URL\");\r\n      return;\r\n    } else if ($$.trim(apiRemarks) === \"\") {\r\n      message.error(\"请输入接口备注信息\");\r\n      return;\r\n    }\r\n\r\n    const req = {\r\n      props: this.props,\r\n      data: {\r\n        apiName: $$.trim(apiName),\r\n        typeId,\r\n        apiReqType,\r\n        apiUrl: $$.trim(apiUrl),\r\n        apiParamType,\r\n        apiRemarks: $$.trim(apiRemarks),\r\n        state: \"NORMAL\"\r\n      }\r\n    };\r\n    if (this.props.location.state) {\r\n      req.data.apiId = this.props.location.state.record.apiId;\r\n    }\r\n    this.props.save(req);\r\n  }\r\n\r\n  mapArr() {\r\n    let arr = [];\r\n    Object.keys(config.apiReqType).forEach(k => {\r\n      arr.push({ k, v: config.apiReqType[k] });\r\n    });\r\n    return arr;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.pageContet} pageContentColor`}>\r\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n          <Card title=\"新增\" bordered={false}>\r\n            <div className=\"clearfix\">\r\n              <div className={`${styles.form} pullLeft`}>\r\n                <div className={`${styles.formLine} pullLeft`}>\r\n                  <label className=\"pullLeft\">接口类型:</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n                    <Select\r\n                      value={this.props.typeId}\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={value => this.props.setTypeId(value)}\r\n                    >\r\n                      <Option value=\"\">请选择</Option>\r\n                      {this.props.typeList.map(item => (\r\n                        <Option value={item.typeId} key={item.typeId}>\r\n                          {item.typeName}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.formLine} pullLeft`}>\r\n                <label className=\"pullLeft\">接口名称:</label>\r\n                <div className={`${styles.inline} pullLeft`}>\r\n                  <Input\r\n                    placeholder=\"请输入接口名称\"\r\n                    allowClear\r\n                    onChange={e => this.props.setApiName(e.target.value)}\r\n                    value={this.props.apiName}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"clearfix\">\r\n              <div className={`${styles.form} pullLeft`}>\r\n                <div className={`${styles.formLine} pullLeft`}>\r\n                  <label className=\"pullLeft\">请求类型:</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n                    <Select\r\n                      value={this.props.apiReqType}\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={value => this.props.setApiReqType(value)}\r\n                    >\r\n                      <Option value=\"\">请选择</Option>\r\n                      {config.apiReqType.map(item => (\r\n                        <Option value={item} key={item}>\r\n                          {item}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.formLine} pullLeft`}>\r\n                <label className=\"pullLeft\">接口URL:</label>\r\n                <div className={`${styles.inline} pullLeft`}>\r\n                  <Input\r\n                    placeholder=\"请输入接口URL\"\r\n                    allowClear\r\n                    onChange={e => this.props.setApiUrl(e.target.value)}\r\n                    value={this.props.apiUrl}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"clearfix\">\r\n              <div className={`${styles.form} pullLeft`}>\r\n                <div className={`${styles.formLine} pullLeft`}>\r\n                  <label className=\"pullLeft\">Content-Type:</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n                    <Select\r\n                      value={this.props.apiParamType}\r\n                      style={{ width: \"100%\" }}\r\n                      onChange={value => this.props.setApiParamType(value)}\r\n                    >\r\n                      <Option value=\"\">请选择</Option>\r\n                      {config.apiParamType.map(item => (\r\n                        <Option value={item} key={item}>\r\n                          {item}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${styles.formLine} pullLeft`}>\r\n                <label className=\"pullLeft\">接口备注:</label>\r\n                <div className={`${styles.inline} pullLeft`}>\r\n                  <TextArea\r\n                    rows={4}\r\n                    value={this.props.apiRemarks}\r\n                    onChange={e => this.props.setApiRemarks(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.bottom}>\r\n              <Button\r\n                type=\"primary\"\r\n                className={`${styles.button}`}\r\n                onClick={() => this.save()}\r\n                size=\"large\"\r\n              >\r\n                保存\r\n              </Button>\r\n              <Button\r\n                className={`${styles.button}`}\r\n                onClick={() => this.props.history.goBack()}\r\n                size=\"large\"\r\n              >\r\n                返回\r\n              </Button>\r\n            </div>\r\n          </Card>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  spinning: state.oApi.spinning,\r\n  typeList: state.oApi.typeList,\r\n  apiName: state.oApi.apiName,\r\n  typeId: state.oApi.typeId,\r\n  apiReqType: state.oApi.apiReqType,\r\n  apiUrl: state.oApi.apiUrl,\r\n  apiParamType: state.oApi.apiParamType,\r\n  apiRemarks: state.oApi.apiRemarks\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setApiName: req => {\r\n    const action = creators.setApiNameAction(req);\r\n    dispatch(action);\r\n  },\r\n  setTypeId: req => {\r\n    const action = creators.setTypeIdAction(req);\r\n    dispatch(action);\r\n  },\r\n  queryTypeList: req => {\r\n    const action = creators.queryTypeListAction(req);\r\n    dispatch(action);\r\n  },\r\n  setApiReqType: req => {\r\n    const action = creators.setApiReqTypeAction(req);\r\n    dispatch(action);\r\n  },\r\n  setApiUrl: req => {\r\n    const action = creators.setApiUrlAction(req);\r\n    dispatch(action);\r\n  },\r\n  setApiParamType: req => {\r\n    const action = creators.setApiParamTypeAction(req);\r\n    dispatch(action);\r\n  },\r\n  setApiRemarks: req => {\r\n    const action = creators.setApiRemarksAction(req);\r\n    dispatch(action);\r\n  },\r\n  save: req => {\r\n    const action = creators.createSaveAction(req);\r\n    dispatch(action);\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Add);\r\n","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n","export default function createPagination(data) {\n  return {\n    current: data.pageNo,\n    pageSize: data.pageSize,\n    total: data.totalSize,\n    defaultPageSize: 10,\n    showSizeChanger: true,\n    showQuickJumper: true\n  }\n} ","import '../../style/index.css';\nimport './index.css';","import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop;\nvar messageInstance;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar transitionName = 'move-up';\nvar getContainer;\nvar maxCount;\n\nfunction getMessageInstance(callback) {\n  if (messageInstance) {\n    callback(messageInstance);\n    return;\n  }\n\n  Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: transitionName,\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  }, function (instance) {\n    if (messageInstance) {\n      callback(messageInstance);\n      return;\n    }\n\n    messageInstance = instance;\n    callback(instance);\n  });\n}\n\nfunction notice(args) {\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'close-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[args.type];\n  var target = key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getMessageInstance(function (instance) {\n      var iconNode = React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      });\n      var switchIconNode = iconType ? iconNode : '';\n      instance.notice({\n        key: target,\n        duration: duration,\n        style: {},\n        content: React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-custom-content\").concat(args.type ? \" \".concat(prefixCls, \"-\").concat(args.type) : '')\n        }, args.icon ? args.icon : switchIconNode, React.createElement(\"span\", null, args.content)),\n        onClose: callback\n      });\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nvar api = {\n  open: notice,\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n\n    if (options.transitionName !== undefined) {\n      transitionName = options.transitionName;\n      messageInstance = null; // delete messageInstance for new transitionName\n    }\n\n    if (options.maxCount !== undefined) {\n      maxCount = options.maxCount;\n      messageInstance = null;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  api[type] = function (content, duration, onClose) {\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return api.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n});\napi.warn = api.warning;\nexport default api;","import * as types from \"./actionTypes\";\r\nimport * as requestURL from \"static/js/requestURL\";\r\nimport * as request from \"static/js/request\";\r\nimport spinningAction from \"pages/common/layer/spinning\";\r\nimport notification from \"pages/common/layer/notification\";\r\nimport createPagination from \"static/js/pagination\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst initListAction = (list, pagination) => ({\r\n  type: types.QUERY_LIST,\r\n  list,\r\n  pagination\r\n});\r\n\r\nconst setApiNameAction = apiName => ({\r\n  type: types.SET_API_NAME,\r\n  apiName\r\n});\r\n\r\nconst initTypeListAction = typeList => ({\r\n  type: types.INIT_TYPE_LIST,\r\n  typeList\r\n});\r\n\r\nconst setTypeIdAction = typeId => ({\r\n  type: types.SET_TYPE_ID,\r\n  typeId\r\n});\r\n\r\nconst setApiReqTypeAction = apiReqType => ({\r\n  type: types.SET_API_REQ_TYPE,\r\n  apiReqType\r\n});\r\n\r\nconst setApiUrlAction = apiUrl => ({\r\n  type: types.SET_API_URL,\r\n  apiUrl\r\n});\r\n\r\nconst setApiParamTypeAction = apiParamType => ({\r\n  type: types.SET_API_PARAM_TYPE,\r\n  apiParamType\r\n});\r\n\r\nconst setApiRemarksAction = apiRemarks => ({\r\n  type: types.SET_API_REMARKS,\r\n  apiRemarks\r\n});\r\n\r\nconst setParamsDetailAction = paramsDetail => ({\r\n  type: types.SET_API_PARAMS_DETAIL,\r\n  paramsDetail\r\n});\r\n\r\nconst createSaveAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    const url = req.props.location.state\r\n      ? requestURL.managerOApiUpdateOpenApi\r\n      : requestURL.managerOApiInsertOpenApi;\r\n    request.json(url, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data;\r\n        if (success) {\r\n          Modal.success({\r\n            title: \"系统提示\",\r\n            content: message,\r\n            okText: \"确认\",\r\n            onOk: () => {\r\n              req.props.history.goBack();\r\n            }\r\n          });\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst queryListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.json(requestURL.managerOApiSelectPageOApi, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data;\r\n        if (success) {\r\n          const action = initListAction(data.results, createPagination(data));\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst qeruyParamsDetailAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.get(requestURL.managerOApiSelectAllParamByApiId, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data;\r\n        if (success) {\r\n          const action = setParamsDetailAction(data);\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst queryTypeListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.get(requestURL.webSiteSelectAPITypes, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data;\r\n        if (success) {\r\n          const action = initTypeListAction(data);\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//查询携带参数\r\nconst createChangeParamsAction = params => ({\r\n  type: types.CHANGE_SEARCH_PARAMS,\r\n  params\r\n});\r\n\r\nexport {\r\n  queryListAction,\r\n  setApiNameAction,\r\n  setTypeIdAction,\r\n  queryTypeListAction,\r\n  createChangeParamsAction,\r\n  createSaveAction,\r\n  qeruyParamsDetailAction,\r\n  setApiReqTypeAction,\r\n  setApiUrlAction,\r\n  setApiParamTypeAction,\r\n  setApiRemarksAction,\r\n  setParamsDetailAction\r\n};\r\n","const state = {\r\n  NORMAL: \"正常\",\r\n  INVILD: \"无效\"\r\n};\r\nconst apiReqType = [\"POST\", \"GET\"];\r\nconst apiParamType = [\r\n  \"application/json\",\r\n  \"application/x-www-form-urlencoded\",\r\n  \"multipart/form-data\",\r\n];\r\n\r\nexport { state, apiReqType, apiParamType };\r\n"],"sourceRoot":""}