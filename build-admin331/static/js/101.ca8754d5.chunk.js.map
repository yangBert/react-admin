{"version":3,"sources":["pages/org/css/UserList.module.css","pages/org/components/Operation.js","pages/org/OrgList.js","pages/common/layer/spinning/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","pages/org/store/creators.js"],"names":["module","exports","withRouter","connect","state","list","org","dispatch","updateOrgUpdate","req","action","creators","props","to","pathname","record","style","fontSize","type","size","ghost","columns","title","dataIndex","key","align","render","text","OrgList","paginationChange","pageNo","pageSize","sendFn","paginationShowSizeChange","this","initValues","data","params","queryOrgList","className","styles","pageContet","tip","spinning","buttonForm","addButton","bordered","expandIconAsCell","dataSource","rowKey","id","pagination","Component","CHANGE_SPINNING","_defineProperty","obj","value","Object","defineProperty","enumerable","configurable","writable","changeSaveLoadingAction","saveLoading","types","initOrgTreeAction","treeList","createAddOrgAction","url","requestURL","request","res","success","message","notification","history","push","implementTreeData","i","length","orgName","orgCode","children","queryOrgListAction","spinningAction","implementMenusData","treeAction","updateOrgUpdateAction","initTreeAction","initValuesAction","setOrgNameAction","editOrgName","setOrgCodeAction","editOrgCode","setOrgDescAction","editOrgDesc","setTreeValueAction","tree"],"mappings":"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","file":"static/js/101.ca8754d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"UserList_buttonForm__3JDoW\",\"addButton\":\"UserList_addButton__2h1DS\",\"pageContet\":\"UserList_pageContet__2Cp3J\"};","import React from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as creators from \"../store/creators\";\r\n\r\nfunction Oper(props) {\r\n  const fontSmall = { fontSize: \"12px\" };\r\n  return (\r\n    <div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/org/orgAdd\",\r\n          state: { record: props.record, list: props.list }\r\n        }}\r\n      >\r\n        <Button style={fontSmall} type=\"primary\" size=\"small\" ghost>\r\n          修改\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = state => ({\r\n  list: state.org.list\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  updateOrgUpdate: req => {\r\n    const action = creators.updateOrgUpdateAction(req);\r\n    dispatch(action);\r\n  }\r\n});\r\n\r\nexport default withRouter(connect(mapState, mapDispatch)(Oper));\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Spin, Icon } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as creators from \"./store/creators\";\r\nimport Oper from \"./components/Operation\";\r\nimport styles from \"./css/UserList.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"机构名称\",\r\n    dataIndex: \"orgName\",\r\n    key: \"orgName\"\r\n  },\r\n  {\r\n    title: \"机构编码\",\r\n    dataIndex: \"orgCode\",\r\n    key: \"orgCode\"\r\n  },\r\n  {\r\n    title: \"机构描述\",\r\n    dataIndex: \"orgDesc\",\r\n    key: \"orgDesc\",\r\n    align: \"center\"\r\n  },\r\n\r\n  {\r\n    title: \"操作\",\r\n    dataIndex: \"operation\",\r\n    key: \"operation\",\r\n    render: (text, record) => <Oper text={text} record={record} />\r\n  }\r\n];\r\n\r\nclass OrgList extends Component {\r\n  componentDidMount() {\r\n    this.sendFn(1, 10);\r\n    this.props.initValues(null);\r\n  }\r\n\r\n  paginationChange = (pageNo, pageSize) => {\r\n    this.sendFn(pageNo, pageSize);\r\n  };\r\n\r\n  paginationShowSizeChange = (pageNo, pageSize) => {\r\n    this.sendFn(pageNo, pageSize);\r\n  };\r\n\r\n  sendFn(pageNo, pageSize) {\r\n    const params = this.props.params;\r\n    const data = { ...params, pageNo, pageSize };\r\n    this.props.queryOrgList({ props: this.props, data });\r\n  }\r\n\r\n  render() {\r\n    const list = this.props.list;\r\n    return (\r\n      <div className={`${styles.pageContet} pageContentColor`}>\r\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n          <div className={styles.buttonForm}>\r\n            <Link\r\n              to={{ pathname: \"/org/orgAdd\", state: { list: this.props.list } }}\r\n            >\r\n              <Button type=\"primary\" className={styles.addButton}>\r\n                <Icon type=\"plus\" />\r\n                新增\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <Table\r\n            bordered\r\n            expandIconAsCell={true}\r\n            columns={columns}\r\n            dataSource={list}\r\n            rowKey={record => record.id}\r\n            size=\"small\"\r\n            pagination={false}\r\n          />\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  list: state.org.list,\r\n  spinning: state.org.spinning\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  queryOrgList: req => {\r\n    const action = creators.queryOrgListAction(req);\r\n    dispatch(action);\r\n  },\r\n  initValues: req => {\r\n    const action = creators.initValuesAction(req);\r\n    dispatch(action);\r\n  },\r\n});\r\nexport default connect(mapState, mapDispatch)(OrgList);\r\n","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import * as types from \"./actionTypes\";\r\nimport * as requestURL from \"static/js/requestURL\";\r\nimport * as request from \"static/js/request\";\r\nimport spinningAction from \"pages/common/layer/spinning\";\r\nimport notification from \"pages/common/layer/notification\";\r\n\r\n//保存按钮Loading\r\nconst changeSaveLoadingAction = saveLoading => ({\r\n  type: types.CHANGE_SAVE_LOADING,\r\n  saveLoading\r\n});\r\n\r\n//初始化机构列表\r\nconst initOrgAction = list => ({\r\n  type: types.INIT_ORG_LIST,\r\n  list\r\n});\r\n\r\n//初始化机构树数据\r\nconst initOrgTreeAction = treeList => ({\r\n  type: types.INIT_ORG_TREE_DATA,\r\n  treeList\r\n});\r\n\r\n//新增机构\r\nconst createAddOrgAction = req => {\r\n  return dispatch => {\r\n    let url;\r\n    if (req.data.id) {\r\n      url = requestURL.orgUpdateOrg;\r\n    } else {\r\n      url = requestURL.orgAddOrg;\r\n    }\r\n    dispatch(changeSaveLoadingAction(true));\r\n    request.json(url, req.data, res => {\r\n      dispatch(changeSaveLoadingAction(false));\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data;\r\n        if (success) {\r\n          notification(\"success\", message);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//递归处理菜单查询返回数据---删除空children\r\nfunction implementMenusData(data) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].children && data[i].children.length > 0) {\r\n      implementMenusData(data[i].children);\r\n    } else if (data[i].children && data[i].children.length === 0) {\r\n      delete data[i].children;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n//递归机构树数据处理\r\nfunction implementTreeData(data) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    data[i].title = data[i].orgName;\r\n    data[i].value = data[i].orgCode;\r\n    data[i].key = data[i].id;\r\n    if (data[i].children && data[i].children.length > 0) {\r\n      implementTreeData(data[i].children);\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\n//查询机构\r\nconst queryOrgListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.json(requestURL.orgQueryAllOrgTree, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data;\r\n        if (success) {\r\n          const action = initOrgAction(implementMenusData(data));\r\n          const treeAction = initOrgTreeAction(\r\n            implementTreeData(implementTreeData(data))\r\n          );\r\n          dispatch(action);\r\n          dispatch(treeAction);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//修改机构状态\r\nconst updateOrgUpdateAction = req => {\r\n  return dispatch => {\r\n    request.json(requestURL.orgUpdateOrgState, req.data, res => {\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data;\r\n        if (success) {\r\n          const action = queryOrgListAction({\r\n            props: req.props,\r\n            data: { pageNo: 1, pageSize: 10 }\r\n          });\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//机构树数据处理\r\nconst initTreeAction = req => {\r\n  return dispatch => {\r\n    const treeAction = initOrgTreeAction(\r\n      implementTreeData(implementTreeData(req))\r\n    );\r\n    dispatch(treeAction);\r\n  };\r\n};\r\n\r\n//初始化表单\r\nconst initValuesAction = record => ({\r\n  type: types.INIT_FORM_VALUES,\r\n  record\r\n});\r\n\r\n//改变表单机构名称\r\nconst setOrgNameAction = editOrgName => ({\r\n  type: types.SET_ORG_NAME,\r\n  editOrgName\r\n});\r\n\r\n//改变表单机构编码\r\nconst setOrgCodeAction = editOrgCode => ({\r\n  type: types.SET_ORG_CODE,\r\n  editOrgCode\r\n});\r\n\r\n//改变表单机构描述\r\nconst setOrgDescAction = editOrgDesc => ({\r\n  type: types.SET_ORG_DESC,\r\n  editOrgDesc\r\n});\r\n\r\n//改变表单机构树\r\nconst setTreeValueAction = tree => ({\r\n  type: types.SET_EDIT_TREE_VALUE,\r\n  tree\r\n});\r\n\r\nexport {\r\n  queryOrgListAction,\r\n  createAddOrgAction,\r\n  setOrgNameAction,\r\n  setOrgCodeAction,\r\n  setOrgDescAction,\r\n  initValuesAction,\r\n  setTreeValueAction,\r\n  initTreeAction,\r\n  changeSaveLoadingAction,\r\n  updateOrgUpdateAction\r\n};\r\n"],"sourceRoot":""}