{"version":3,"sources":["pages/oApi/css/detail.module.css","pages/oApi/components/Detail.js","pages/common/layer/spinning/index.js","static/js/pagination.js","pages/oApi/store/creators.js","pages/oApi/config.js"],"names":["module","exports","Panel","Detail","state","activeKey","callback","setState","apiId","this","props","location","record","qeruyParamsDetail","data","apiName","apiUrl","apiReqType","apiParamType","typeId","apiRemarks","className","styles","pageContet","tip","spinning","title","bordered","Item","label","config","accordion","onChange","paramsDetail","map","item","index","header","key","paramName","paramType","isNess","paramRemarks","bottom","type","back","onClick","history","goBack","size","React","Component","connect","oApi","dispatch","req","action","creators","CHANGE_SPINNING","createPagination","current","pageNo","pageSize","total","totalSize","defaultPageSize","showSizeChanger","showQuickJumper","setApiNameAction","types","setTypeIdAction","setApiReqTypeAction","setApiUrlAction","setApiParamTypeAction","setApiRemarksAction","createSaveAction","spinningAction","url","requestURL","request","res","success","message","content","okText","onOk","notification","push","queryListAction","list","results","pagination","qeruyParamsDetailAction","queryTypeListAction","typeList","createChangeParamsAction","params","NORMAL","INVILD"],"mappings":"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","file":"static/js/98.1341e797.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContet\":\"detail_pageContet__149LQ\",\"info\":\"detail_info__rdLVj\",\"signcert\":\"detail_signcert__33Pew\",\"textarea\":\"detail_textarea__rdfao\",\"back\":\"detail_back__1tfER\",\"bottom\":\"detail_bottom__2oAVL\"};","import React from \"react\";\r\nimport { Card, Descriptions, Button, Divider, Collapse, Spin } from \"antd\";\r\nimport styles from \"../css/detail.module.css\";\r\nimport * as creators from \"../store/creators\";\r\nimport { connect } from \"react-redux\";\r\nimport * as config from \"../config\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass Detail extends React.Component {\r\n  state = {\r\n    activeKey: 0\r\n  };\r\n  componentDidMount() {\r\n    const { apiId } = this.props.location.state.record;\r\n    this.props.qeruyParamsDetail({\r\n      props: this.props,\r\n      data: { apiId }\r\n    });\r\n  }\r\n\r\n  callback = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.location.state.record) {\r\n      var {\r\n        apiName,\r\n        apiUrl,\r\n        apiReqType,\r\n        apiParamType,\r\n        state,\r\n        typeId,\r\n        apiRemarks\r\n      } = this.props.location.state.record;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className={styles.pageContet}>\r\n          <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n            <div className=\"pageContentColor\">\r\n              <Card title=\"API基本信息\" bordered={false}>\r\n                <Descriptions>\r\n                  <Descriptions.Item label=\"接口名称\">\r\n                    {apiName}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"接口类型\">\r\n                    {typeId}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"请求URL\">\r\n                    {apiUrl}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"请求方法\">\r\n                    {apiReqType}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Content-Type\">\r\n                    {apiParamType}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"接口状态\">\r\n                    {state && config.state[state]}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n                <Descriptions>\r\n                  <Descriptions.Item label=\"描述\">\r\n                    {apiRemarks}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </Card>\r\n              <Card title=\"参数信息\" bordered={false}>\r\n                <Collapse\r\n                  accordion\r\n                  activeKey={[this.state.activeKey]}\r\n                  onChange={this.callback}\r\n                >\r\n                  {this.props.paramsDetail.map((item, index) => (\r\n                    <Panel header={\"参数\" + (index + 1)} key={index}>\r\n                      <Descriptions>\r\n                        <Descriptions.Item label=\"参数名称\">\r\n                          {item.paramName}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"参数类型\">\r\n                          {item.paramType}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"是否必传\">\r\n                          {item.isNess}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"状态\">\r\n                          {state && config.state[state]}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                      <Descriptions>\r\n                        <Descriptions.Item label=\"描述\">\r\n                          {item.paramRemarks}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                      <Descriptions>\r\n                        <Divider />\r\n                      </Descriptions>\r\n                    </Panel>\r\n                  ))}\r\n                </Collapse>\r\n              </Card>\r\n            </div>\r\n            <div className={styles.bottom}>\r\n              <Button\r\n                type=\"primary\"\r\n                className={styles.back}\r\n                onClick={() => this.props.history.goBack()}\r\n                size=\"large\"\r\n              >\r\n                返回\r\n              </Button>\r\n            </div>\r\n          </Spin>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  spinning: state.oApi.spinning,\r\n  paramsDetail: state.oApi.paramsDetail\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  qeruyParamsDetail: req => {\r\n    const action = creators.qeruyParamsDetailAction(req);\r\n    dispatch(action);\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(Detail);\r\n","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n","export default function createPagination(data) {\n  return {\n    current: data.pageNo,\n    pageSize: data.pageSize,\n    total: data.totalSize,\n    defaultPageSize: 10,\n    showSizeChanger: true,\n    showQuickJumper: true\n  }\n} ","import * as types from \"./actionTypes\";\r\nimport * as requestURL from \"static/js/requestURL\";\r\nimport * as request from \"static/js/request\";\r\nimport spinningAction from \"pages/common/layer/spinning\";\r\nimport notification from \"pages/common/layer/notification\";\r\nimport createPagination from \"static/js/pagination\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst initListAction = (list, pagination) => ({\r\n  type: types.QUERY_LIST,\r\n  list,\r\n  pagination\r\n});\r\n\r\nconst setApiNameAction = apiName => ({\r\n  type: types.SET_API_NAME,\r\n  apiName\r\n});\r\n\r\nconst initTypeListAction = typeList => ({\r\n  type: types.INIT_TYPE_LIST,\r\n  typeList\r\n});\r\n\r\nconst setTypeIdAction = typeId => ({\r\n  type: types.SET_TYPE_ID,\r\n  typeId\r\n});\r\n\r\nconst setApiReqTypeAction = apiReqType => ({\r\n  type: types.SET_API_REQ_TYPE,\r\n  apiReqType\r\n});\r\n\r\nconst setApiUrlAction = apiUrl => ({\r\n  type: types.SET_API_URL,\r\n  apiUrl\r\n});\r\n\r\nconst setApiParamTypeAction = apiParamType => ({\r\n  type: types.SET_API_PARAM_TYPE,\r\n  apiParamType\r\n});\r\n\r\nconst setApiRemarksAction = apiRemarks => ({\r\n  type: types.SET_API_REMARKS,\r\n  apiRemarks\r\n});\r\n\r\nconst setParamsDetailAction = paramsDetail => ({\r\n  type: types.SET_API_PARAMS_DETAIL,\r\n  paramsDetail\r\n});\r\n\r\nconst createSaveAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    const url = req.props.location.state\r\n      ? requestURL.managerOApiUpdateOpenApi\r\n      : requestURL.managerOApiInsertOpenApi;\r\n    request.json(url, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data;\r\n        if (success) {\r\n          Modal.success({\r\n            title: \"系统提示\",\r\n            content: message,\r\n            okText: \"确认\",\r\n            onOk: () => {\r\n              req.props.history.goBack();\r\n            }\r\n          });\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst queryListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.json(requestURL.managerOApiSelectPageOApi, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data;\r\n        if (success) {\r\n          const action = initListAction(data.results, createPagination(data));\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst qeruyParamsDetailAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.get(requestURL.managerOApiSelectAllParamByApiId, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data;\r\n        if (success) {\r\n          const action = setParamsDetailAction(data);\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst queryTypeListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.get(requestURL.webSiteSelectAPITypes, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data;\r\n        if (success) {\r\n          const action = initTypeListAction(data);\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//查询携带参数\r\nconst createChangeParamsAction = params => ({\r\n  type: types.CHANGE_SEARCH_PARAMS,\r\n  params\r\n});\r\n\r\nexport {\r\n  queryListAction,\r\n  setApiNameAction,\r\n  setTypeIdAction,\r\n  queryTypeListAction,\r\n  createChangeParamsAction,\r\n  createSaveAction,\r\n  qeruyParamsDetailAction,\r\n  setApiReqTypeAction,\r\n  setApiUrlAction,\r\n  setApiParamTypeAction,\r\n  setApiRemarksAction,\r\n  setParamsDetailAction\r\n};\r\n","const state = {\r\n  NORMAL: \"正常\",\r\n  INVILD: \"无效\"\r\n};\r\nconst apiReqType = [\"POST\", \"GET\"];\r\nconst apiParamType = [\r\n  \"application/json\",\r\n  \"application/x-www-form-urlencoded\",\r\n  \"multipart/form-data\",\r\n];\r\n\r\nexport { state, apiReqType, apiParamType };\r\n"],"sourceRoot":""}