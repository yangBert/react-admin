{"version":3,"sources":["pages/oApiParams/store/creators.js","pages/oApiParams/css/UserList.module.css","pages/oApiParams/components/Operation.js","pages/oApiParams/index.js","pages/common/layer/spinning/index.js"],"names":["setParamNameAction","paramName","type","types","setParamTypeAction","paramType","setIsNessAction","isNess","setParamRemarksAction","paramRemarks","saveAction","req","dispatch","url","data","paramId","requestURL","request","res","success","message","notification","props","history","goBack","push","queryListAction","spinningAction","action","list","module","exports","withRouter","fontSmall","fontSize","marginRight","to","pathname","state","apiId","location","record","style","size","ghost","columns","title","dataIndex","key","align","render","text","List","this","querylist","className","styles","pageContet","tip","spinning","buttonForm","addButton","bordered","dataSource","rowKey","index","rowClassName","table","pagination","Component","connect","oApiParams","params","creators","CHANGE_SPINNING"],"mappings":"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","file":"static/js/102.51771ed0.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\r\nimport * as requestURL from \"static/js/requestURL\";\r\nimport * as request from \"static/js/request\";\r\nimport spinningAction from \"pages/common/layer/spinning\";\r\nimport notification from \"pages/common/layer/notification\";\r\n\r\nconst initListAction = list => ({\r\n  type: types.QUERY_LIST,\r\n  list\r\n});\r\n\r\nconst saveLoadingAction = saveLoading => ({\r\n  type: types.SAVE_LOADING,\r\n  saveLoading\r\n});\r\n\r\nconst setParamNameAction = paramName => ({\r\n  type: types.SET_PARAM_NAME,\r\n  paramName\r\n});\r\n\r\nconst setParamTypeAction = paramType => ({\r\n  type: types.SET_PARAM_TYPE,\r\n  paramType\r\n});\r\n\r\nconst setIsNessAction = isNess => ({\r\n  type: types.SET_IS_NESS,\r\n  isNess\r\n});\r\n\r\nconst setParamRemarksAction = paramRemarks => ({\r\n  type: types.SET_PARAM_REMARKS,\r\n  paramRemarks\r\n});\r\n\r\nconst saveAction = req => {\r\n  return dispatch => {\r\n    const url = req.data.paramId\r\n      ? requestURL.managerOApiUpdateParam\r\n      : requestURL.managerOApiInsertParam;\r\n    request.json(url, req.data, res => {\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data;\r\n        if (success) {\r\n          notification(\"success\", message);\r\n          req.props.history.goBack();\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nconst queryListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true));\r\n    request.get(requestURL.managerOApiSelectAllParamByApiId, req.data, res => {\r\n      dispatch(spinningAction(false));\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data;\r\n        if (success) {\r\n          const action = initListAction(data);\r\n          dispatch(action);\r\n        } else {\r\n          notification(\"error\", message);\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\");\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport {\r\n  queryListAction,\r\n  saveAction,\r\n  saveLoadingAction,\r\n  setParamNameAction,\r\n  setParamTypeAction,\r\n  setIsNessAction,\r\n  setParamRemarksAction\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"UserList_buttonForm__qSDXc\",\"addButton\":\"UserList_addButton__gzHog\",\"pageContet\":\"UserList_pageContet__185Gb\",\"table\":\"UserList_table__1a3R7\"};","import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nfunction Oper(props) {\r\n  const fontSmall = { fontSize: \"12px\", marginRight: \"5px\" };\r\n  return (\r\n    <div>\r\n      <Link\r\n        to={{\r\n          pathname: \"/oApiParams/add\",\r\n          state: {\r\n            apiId: props.location.state.record.apiId,\r\n            record: props.record\r\n          }\r\n        }}\r\n      >\r\n        <Button style={fontSmall} type=\"primary\" size=\"small\" ghost>\r\n          修改\r\n        </Button>\r\n      </Link>\r\n      <Link\r\n        to={{\r\n          pathname: \"/oApiParams/detail\",\r\n          state: {\r\n            apiId: props.location.state.record.apiId,\r\n            record: props.record\r\n          }\r\n        }}\r\n      >\r\n        <Button style={fontSmall} type=\"primary\" size=\"small\" ghost>\r\n          详情\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Oper);\r\n","import React, { Component } from \"react\";\r\nimport { Table, Spin, Button, Icon } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport * as creators from \"./store/creators\";\r\nimport styles from \"./css/UserList.module.css\";\r\nimport Oper from \"./components/Operation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst columns = [\r\n  { title: \"参数编码\", dataIndex: \"paramId\", key: \"paramId\", align: \"center\" },\r\n  {\r\n    title: \"参数名称\",\r\n    dataIndex: \"paramName\",\r\n    key: \"paramName\",\r\n    align: \"center\"\r\n  },\r\n  {\r\n    title: \"参数类型\",\r\n    dataIndex: \"paramType\",\r\n    key: \"paramType\",\r\n    align: \"center\"\r\n  },\r\n\r\n  {\r\n    title: \"是否必传\",\r\n    dataIndex: \"isNess\",\r\n    key: \"isNess\",\r\n    align: \"center\",\r\n    render: isNess => <span>{isNess === \"true\" ? \"是\" : \"否\"}</span>\r\n  },\r\n  {\r\n    title: \"操作\",\r\n    dataIndex: \"operation\",\r\n    key: \"operation\",\r\n    render: (text, record) => <Oper text={text} record={record} />\r\n  }\r\n];\r\n\r\nclass List extends Component {\r\n  componentDidMount() {\r\n    const { apiId } = this.props.location.state.record;\r\n    this.props.querylist({ props: this.props, data: { apiId } });\r\n  }\r\n\r\n  render() {\r\n    const list = this.props.list;\r\n    return (\r\n      <div className={`${styles.pageContet} pageContentColor`}>\r\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n          <div className={styles.buttonForm}>\r\n            <Link\r\n              to={{\r\n                pathname: \"/oApiParams/add\",\r\n                state: { apiId: this.props.location.state.record.apiId }\r\n              }}\r\n            >\r\n              <Button type=\"primary\" className={styles.addButton}>\r\n                <Icon type=\"plus\" />\r\n                新增\r\n              </Button>\r\n            </Link>\r\n            <Link\r\n              to={{\r\n                pathname: \"/oApi/list\"\r\n              }}\r\n            >\r\n              <Button type=\"primary\" className={styles.addButton}>\r\n                <Icon type=\"rollback\" />\r\n                返回\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <Table\r\n            bordered\r\n            columns={columns}\r\n            dataSource={list}\r\n            rowKey={(record, index) => index}\r\n            rowClassName={styles.table}\r\n            pagination={false}\r\n          />\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  list: state.oApiParams.list,\r\n  pagination: state.oApiParams.pagination,\r\n  spinning: state.oApiParams.spinning,\r\n  params: state.oApiParams.params\r\n});\r\n\r\nconst mapDispatch = dispatch => ({\r\n  querylist: req => {\r\n    const action = creators.queryListAction(req);\r\n    dispatch(action);\r\n  }\r\n});\r\n\r\nexport default connect(mapState, mapDispatch)(List);\r\n","import CHANGE_SPINNING from './spinningTypes'\n\nexport default spinning => ({\n  type: CHANGE_SPINNING,\n  spinning\n})\n"],"sourceRoot":""}