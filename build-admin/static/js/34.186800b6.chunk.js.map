{"version":3,"sources":["pages/doc/css/add.module.css","pages/doc/components/Add.js","pages/common/layer/spinning/index.js","static/js/pagination.js","pages/doc/store/creators.js"],"names":["module","exports","Option","Add","handleEditorChange","editorState","setState","this","props","location","state","record","title","content","catalogCode","setCatalogCode","changeEditTitle","BraftEditor","createEditorState","editTitle","editCatalogCode","editContent","$$","trim","userNo","localStorage","get","req","data","editId","id","save","error","list","map","item","key","productCode","value","productName","code","name","changeProduct","pageSize","pageNo","className","styles","pageContet","tip","spinning","form","formLine","inline","style","width","onChange","initAllProductList","productAllList","initDocCatalogList","docCatalogList","placeholder","allowClear","e","target","buttonRow","type","button","onClick","to","Component","connect","doc","editState","dispatch","action","creators","toHTML","queryNoticeDetail","CHANGE_SPINNING","createPagination","current","total","totalSize","defaultPageSize","showSizeChanger","showQuickJumper","setCatalogCodeAction","types","createSaveAction","spinningAction","url","requestURL","request","res","success","message","okText","onOk","changeEditTitleAction","changeEditorContentAction","history","goBack","notification","push","queryDocCatalogListAction","results","querylistAction","console","log","pagination","queryProductlistAction","queryNoticeDetailAction","changeEditorStateAction","publishNoticeAction","getState","notice","params","createChangeParamsAction"],"mappings":"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","file":"static/js/34.186800b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLine\":\"add_formLine__3wfct\",\"inline\":\"add_inline__1aufw\",\"form\":\"add_form__2NO-L\",\"pageContet\":\"add_pageContet__fEIPL\",\"editContent\":\"add_editContent__9lspN\",\"button\":\"add_button__PzzCK\",\"buttonRow\":\"add_buttonRow__3rBKJ\"};","import React, { Component } from 'react';\r\nimport { Spin, Input, Button, message, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as creators from '../store/creators';\r\nimport styles from '../css/add.module.css';\r\nimport BraftEditor from 'braft-editor';\r\nimport 'braft-editor/dist/index.css';\r\nimport { Link } from 'react-router-dom';\r\nimport $$ from 'static/js/base';\r\n// import DocCatalogModal from './DocCatalogModal';\r\nconst { Option } = Select;\r\n\r\nclass Add extends Component {\r\n  componentDidMount() {\r\n\r\n    if (this.props.location.state && this.props.location.state.record) {\r\n      const { title, content, catalogCode } = this.props.location.state.record\r\n      this.props.setCatalogCode(catalogCode)\r\n      this.props.changeEditTitle(title)\r\n      this.props.handleEditorChange(BraftEditor.createEditorState(content))\r\n    } else {\r\n      this.props.handleEditorChange(BraftEditor.createEditorState('<p>请输入文档内容!</b></p>'))//初始化富文本编辑器\r\n    }\r\n  }\r\n\r\n  save() {\r\n    const { editTitle, editCatalogCode, editContent } = this.props;\r\n    if (editCatalogCode === \"\") {\r\n      message.error('请选择文档分类');\r\n      return\r\n    } else if ($$.trim(editTitle) === \"\") {\r\n      message.error('请填写公告标题');\r\n      return\r\n    } else if (editContent === \"\") {\r\n      message.error('请填公告内容');\r\n      return\r\n    }\r\n    const userNo = $$.localStorage.get(\"adminId\")\r\n    const req = {\r\n      props: this.props,\r\n      data: {\r\n        title: editTitle,\r\n        content: editContent,\r\n        catalogCode: editCatalogCode,\r\n        userNo,\r\n      }\r\n    }\r\n\r\n    const editId = this.props.location.state && this.props.location.state.editId\r\n    if (editId) {\r\n      req.data.id = editId\r\n    }\r\n    this.props.save(req)\r\n  }\r\n\r\n  handleEditorChange = (editorState) => {\r\n    this.setState({\r\n      editorState: editorState,\r\n    })\r\n  }\r\n\r\n  initAllProductList(list) {\r\n    return list.map(item => (\r\n      <Option key={item.productCode} value={item.productCode}>{item.productName}</Option>\r\n    ))\r\n  }\r\n\r\n  initDocCatalogList(list) {\r\n    return list.map(item => (\r\n      <Option key={item.id} value={item.code}>{item.name}</Option>\r\n    ))\r\n  }\r\n\r\n  changeProduct(productCode) {\r\n    const userNo = $$.localStorage.get(\"adminId\")\r\n    this.props.changeProduct({\r\n      props: this.props,\r\n      data: {\r\n        productCode,\r\n        userNo,\r\n        pageSize: 1000,\r\n        pageNo: 1,\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const editContent = this.props.editContent\r\n    return (\r\n      <div className={`${styles.pageContet} pageContentColor`}>\r\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n          <div className={`${styles.form} clearfix`}>\r\n            <div className={`${styles.formLine} pullLeft`}>\r\n              <label className=\"pullLeft\">选择产品:</label>\r\n              <div className={`${styles.inline} pullLeft`}>\r\n                <Select\r\n                  //value={productCode}\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={value => this.changeProduct(value)}\r\n                >\r\n                  <Option value=\"\">请选择</Option>\r\n                  {this.initAllProductList(this.props.location.state.productAllList)}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.formLine} pullLeft`}>\r\n              <label className=\"pullLeft\">选择文档分类:</label>\r\n              <div className={`${styles.inline} pullLeft`}>\r\n                <Select\r\n                  value={this.props.editCatalogCode}\r\n                  style={{ width: \"100%\" }}\r\n                  onChange={value => this.props.setCatalogCode(value)}\r\n                >\r\n                  <Option value=\"\">请选择</Option>\r\n                  {this.initDocCatalogList(this.props.docCatalogList)}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className={`${styles.formLine} pullLeft`}>\r\n              <label className=\"pullLeft\">文档标题:</label>\r\n              <div className={`${styles.inline} pullLeft`}>\r\n                <Input\r\n                  placeholder=\"请输入文档标题\"\r\n                  allowClear\r\n                  onChange={e => this.props.changeEditTitle(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.buttonRow}>\r\n            <Button type=\"primary\" className={`${styles.button}`}\r\n              onClick={() => this.save()}\r\n            >保存文档</Button>\r\n            <Link to=\"/doc/list\">\r\n              <Button className={`${styles.button}`}>返回列表</Button>\r\n            </Link>\r\n          </div>\r\n          <div className={`${styles.editContent} my-component`}>\r\n            <BraftEditor\r\n              placeholder=\"请输入正文内容\"\r\n              value={editContent}\r\n              onChange={this.props.handleEditorChange}\r\n            />\r\n          </div>\r\n        </Spin>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  spinning: state.doc.spinning,\r\n  docCatalogList: state.doc.docCatalogList,\r\n  editCatalogCode: state.doc.editCatalogCode,\r\n\r\n  editTitle: state.doc.editTitle,\r\n  editContent: state.doc.editContent,\r\n  editState: state.doc.editState,\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  changeProduct: req => {\r\n    const action = creators.queryDocCatalogListAction(req);\r\n    dispatch(action);\r\n  },\r\n  setCatalogCode: req => {\r\n    const action = creators.setCatalogCodeAction(req);\r\n    dispatch(action);\r\n  },\r\n\r\n  save: req => {\r\n    const action = creators.createSaveAction(req);\r\n    dispatch(action);\r\n  },\r\n  changeEditTitle: req => {\r\n    const action = creators.changeEditTitleAction(req);\r\n    dispatch(action);\r\n  },\r\n  handleEditorChange: editorState => {\r\n    const action = creators.changeEditorContentAction(editorState.toHTML());\r\n    dispatch(action);\r\n  },\r\n  queryNoticeDetail: req => {\r\n    const action = creators.queryNoticeDetailAction(req);\r\n    dispatch(action);\r\n  },\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Add);","import CHANGE_SPINNING from './spinningTypes'\r\n\r\nexport default spinning => ({\r\n  type: CHANGE_SPINNING,\r\n  spinning\r\n})\r\n","export default function createPagination(data) {\r\n  return {\r\n    current: data.pageNo,\r\n    pageSize: data.pageSize,\r\n    total: data.totalSize,\r\n    defaultPageSize: 10,\r\n    showSizeChanger: true,\r\n    showQuickJumper: true\r\n  }\r\n} ","import * as types from './actionTypes';\r\nimport * as requestURL from 'static/js/requestURL';\r\nimport * as request from 'static/js/request';\r\nimport spinningAction from 'pages/common/layer/spinning';\r\nimport notification from 'pages/common/layer/notification';\r\nimport createPagination from 'static/js/pagination';\r\nimport { Modal } from 'antd'\r\nimport BraftEditor from 'braft-editor';\r\n\r\nconst initlistAction = (list, pagination) => ({\r\n  type: types.QUERY_LIST,\r\n  list,\r\n  pagination\r\n})\r\n\r\nconst initProductListAction = productAllList => ({\r\n  type: types.INIT_PRODUCT_ALL_LIST,\r\n  productAllList,\r\n})\r\n\r\n//初始化文档分类\r\nconst initDocCatalogListAction = (docCatalogList) => ({\r\n  type: types.QUERY_DOCCATALOG_LIST,\r\n  docCatalogList,\r\n})\r\n\r\n//change文档分类\r\nconst setCatalogCodeAction = editCatalogCode => ({\r\n  type: types.SET_EDIT_CATALOGO_CODE,\r\n  editCatalogCode,\r\n})\r\n\r\n\r\n//保存文档\r\nconst createSaveAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true))\r\n    const url = req.data.id ? requestURL.docUpdateDocContent : requestURL.docAddDocContent\r\n    request.json(url, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data\r\n        if (success) {\r\n          Modal.success({\r\n            title: '系统提示',\r\n            content: message,\r\n            okText: '确认',\r\n            onOk: () => {\r\n              dispatch(setCatalogCodeAction(\"\"))\r\n              dispatch(changeEditTitleAction(\"\"))\r\n              dispatch(changeEditorContentAction(BraftEditor.createEditorState('<p>请输入文档内容!</b></p>')))\r\n              req.props.history.goBack()\r\n            }\r\n          });\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//查询目录列表\r\nconst queryDocCatalogListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true))\r\n    request.json(requestURL.docQueryCatalogPages, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data\r\n        if (success) {\r\n          dispatch(initDocCatalogListAction(data.results))\r\n          dispatch(setCatalogCodeAction(\"\"))\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//查询文档列表\r\nconst querylistAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true))\r\n    console.log(\"res\", req.data)\r\n    request.json(requestURL.docQueryContentPages, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      console.log(\"res\", res)\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data\r\n        if (success) {\r\n          const action = initlistAction(data.results, createPagination(data))\r\n          dispatch(action)\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//查询所产品\r\nconst queryProductlistAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true))\r\n    request.json(requestURL.productSelectByPage, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data\r\n        if (success) {\r\n          const action = initProductListAction(data.results)\r\n          dispatch(action)\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//公告详情\r\nconst queryNoticeDetailAction = req => {\r\n  return (dispatch) => {\r\n    dispatch(spinningAction(true))\r\n    request.json(requestURL.noticeGetNoticeDetail, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data\r\n        if (success) {\r\n          dispatch(changeEditTitleAction(data.title))\r\n          dispatch(changeEditorContentAction(data.content))\r\n          dispatch(changeEditorStateAction(data.state))\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//发布公告\r\nconst publishNoticeAction = req => {\r\n  return (dispatch, getState) => {\r\n    dispatch(spinningAction(true))\r\n    request.json(requestURL.noticePublishNotice, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data\r\n        if (success) {\r\n          Modal.success({\r\n            title: '系统提示',\r\n            content: message,\r\n            okText: '确认',\r\n            onOk: () => {\r\n              const pagination = getState().notice.pagination\r\n              const params = {\r\n                ...getState().notice.params,\r\n                pageNo: pagination.current,\r\n                pageSize: pagination.pageSize,\r\n              }\r\n              dispatch(querylistAction({ props: req.props, data: params }));\r\n            }\r\n          });\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//查询携带参数\r\nconst createChangeParamsAction = params => ({\r\n  type: types.CHANGE_SEARCH_PARAMS,\r\n  params\r\n})\r\n\r\n//编辑改变标题\r\nconst changeEditTitleAction = editTitle => ({\r\n  type: types.CHANGE_EDIT_TITLE,\r\n  editTitle\r\n})\r\n\r\n//编辑改变富文本内容\r\nconst changeEditorContentAction = editContent => ({\r\n  type: types.CHANGE_EDIT_CONTENT,\r\n  editContent\r\n})\r\n\r\n//编辑改变富文本内容\r\nconst changeEditorStateAction = editState => ({\r\n  type: types.CHANGE_EDIT_STATE,\r\n  editState\r\n})\r\n\r\n\r\nexport {\r\n  querylistAction,\r\n  queryDocCatalogListAction,\r\n  createChangeParamsAction,\r\n  queryProductlistAction,\r\n  setCatalogCodeAction,\r\n  createSaveAction,\r\n  changeEditTitleAction,\r\n  changeEditorContentAction,\r\n\r\n  queryNoticeDetailAction,\r\n  publishNoticeAction,\r\n}"],"sourceRoot":""}