{"version":3,"sources":["pages/common/layer/spinning/spinningTypes.js","pages/common/header/store/actionTypes.js","pages/user/store/actionTypes.js","pages/cert/store/actionTypes.js","pages/app/store/actionTypes.js","pages/common/menu/store/actionTypes.js","pages/login/store/actionTypes.js","pages/doc/store/actionTypes.js","pages/admin/store/actionTypes.js","pages/org/store/actionTypes.js","pages/certification/store/actionTypes.js","pages/common/menu/store/reducer.js","pages/common/header/store/reducer.js","pages/admin/store/reducer.js","pages/login/store/reducer.js","pages/role/store/reducer.js","pages/menu/store/reducer.js","pages/user/store/reducer.js","pages/app/store/reducer.js","pages/dictType/store/reducer.js","pages/dictData/store/reducer.js","pages/notice/store/reducer.js","pages/org/store/reducer.js","pages/cert/store/reducer.js","pages/product/store/reducer.js","pages/certification/store/reducer.js","pages/docCatalog/store/reducer.js","pages/doc/store/reducer.js","store/reducers.js","store/index.js","App.js","index.js","pages/menu/store/actionTypes.js","pages/notice/store/actionTypes.js","pages/docCatalog/store/actionTypes.js","pages/role/store/actionTypes.js","pages/dictData/store/actionTypes.js","pages/product/store/actionTypes.js","pages/dictType/store/actionTypes.js"],"names":["CHANGE_MENU_COLLAPSED","USER_LOGOUT","INIT_ADMIN_INFO","QUERY_USER_LIST","CHANGE_SEARCH_PARAMS","QUERY_CERT_LIST","QUERY_APP_LIST","CHANGE_ROW_APP_ID","CHANGE_FORM_APP_NAME","CHANGE_FORM_URL","CHANGE_FORM_DESCRIBES","CHANGE_FORM_REDIRECTURL","CHANGE_FORM_ICON","CHANGE_FORM_APPTYPE","CHANGE_FORM_AUDITMODE","CHANGE_FORM_LANDINGMODES","CHANGE_FORM_SUPPORTCAS","INIT_ALL_LANDING_MODES","INIT_ALL_APP_TYPES","INIT_ALL_SUPPORT_CAS","SET_ICON_BASE64","CHANGE_SAVE_LOADING","CHANGE_FORM_EDIT_APP_ID","CHANGE_ROW_AUDIT_STATUS","EMPTY_ADD_VALUE","INIT_MENUS","CHANGE_LOGIN_LOADING","QUERY_LIST","QUERY_DOCCATALOG_LIST","INIT_PRODUCT_ALL_LIST","SET_EDIT_CATALOGO_CODE","CHANGE_EDIT_TITLE","CHANGE_EDIT_CONTENT","INIT_NOTICE_DETAIL","CHANGE_EDIT_STATE","CHANGE_ADD_MODAL_VISIBLE","CHANGE_CONFIRM_LOADING","INIT_SELECTED_ROLES","CHANGE_ROLE_MODAL_VISIBLE","INIT_ROLE_ALL_LIST","INIT_ROLE_ADMINID","CHANGE_CONFIRMLOADING_ROLE","INIT_ORG_LIST","SET_ORG_NAME","SET_ORG_CODE","SET_ORG_DESC","INIT_FORM_VALUES","INIT_ORG_TREE_DATA","SET_EDIT_TREE_VALUE","INIT_LIST","CHANGE_EDIT_AUTH_NAME","CHANGE_EDIT_URL","CHANGE_AUTH_LEVE","CHANGE_AUTH_STYLE","CHANGE_EDIT_STATUS","CLEAN_FORM","defaultState","menus","collapsed","adminInfo","list","roleAllList","pagination","operationType","addModalvisible","roleModalVisible","record","spinning","params","ConfirmLoading","ConfirmLoadingRole","selectedRoles","roleAdminId","loginLoading","menuModalvisible","menuList","checkedKeys","selectedRoleId","sliderMenuList","editModalvisible","editRecord","addConfirmLoading","editConfirmLoading","rowAppId","form","appName","url","describes","redirectUrl","appType","auditMode","landingModes","supportCAs","iconBase64","editLoading","typeList","dataList","editTitle","editContent","editState","detailInfo","editParentOrgName","editPid","editPorgCode","editOrgName","editOrgCode","editOrgDesc","editId","treeList","saveLoading","editAuthName","editURL","editAuthLevel","editAuthStyle","editStatus","productList","editProductCode","editName","editOrders","productAllList","docCatalogList","editCatalogCode","login","state","action","newState","JSON","parse","stringify","type","types","slider","header","admin","spinningTypes","role","menu","user","NAV_TO","app","icon","allLandingModes","allAppTypes","allSupportCAs","editAppId","rowauditStatus","dictType","dictData","notice","org","orgName","orgCode","orgDesc","id","pid","porgCode","tree","cert","product","certification","docCatalog","doc","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","Login","lazy","Home","App","fallback","exact","path","component","ReactDOM","render","locale","zhCN","document","getElementById","INIT_MENU_LIST","CHANGE_ADD_CONFIRM_LOADING","CHANGE_EDIT_CONFIRM_LOADING","CHANGE_EDIT_MODAL_VISIBLE","CHANGE_EDIT_RECORD","INIT_SLIDER_MENU_LIST","QUERY_NOTICE_LIST","INIT_PRODUCT_LIST","CHANGE_EDIT_PRODUCT_CODE","CHANGE_EDIT_NAME","CHANGE_EDIT_ORDERS","QUERY_ROLE_LIST","CHANGE_MENU_MODAL_VISIBLE","CHANGE_CHECKED_KEYS_ACTION","QUERY_DICT_TYPE_LIST","QUERY_DICT_DATA_LIST"],"mappings":"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","file":"static/js/main.2b51287f.chunk.js","sourcesContent":["export default \"CHANGE_SPINNING\"","const CHANGE_MENU_COLLAPSED = \"CHANGE_MENU_COLLAPSED\"\r\nconst USER_LOGOUT = 'USER_LOGOUT';\r\nconst INIT_ADMIN_INFO = 'INIT_ADMIN_INFO';\r\n\r\nexport {\r\n  CHANGE_MENU_COLLAPSED,\r\n  USER_LOGOUT,\r\n  INIT_ADMIN_INFO\r\n}","const QUERY_USER_LIST = \"QUERY_USER_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\n\r\n\r\nexport {\r\n  QUERY_USER_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n\r\n}","const QUERY_CERT_LIST = \"QUERY_CERT_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\n\r\nexport {\r\n  QUERY_CERT_LIST,\r\n  CHANGE_SEARCH_PARAMS\r\n}","const QUERY_APP_LIST = \"QUERY_APP_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_ROW_APP_ID = \"CHANGE_ROW_APP_ID\"\r\n\r\nconst CHANGE_FORM_APP_NAME = \"CHANGE_FORM_APP_NAME\"\r\nconst CHANGE_FORM_URL = \"CHANGE_FORM_URL\"\r\nconst CHANGE_FORM_DESCRIBES = \"CHANGE_FORM_DESCRIBES\"\r\nconst CHANGE_FORM_REDIRECTURL = \"CHANGE_FORM_REDIRECTURL\"\r\nconst CHANGE_FORM_ICON = \"CHANGE_FORM_ICON\"\r\nconst CHANGE_FORM_APPTYPE = \"CHANGE_FORM_APPTYPE\"\r\nconst CHANGE_FORM_AUDITMODE = \"CHANGE_FORM_AUDITMODE\"\r\nconst CHANGE_FORM_LANDINGMODES = \"CHANGE_FORM_LANDINGMODES\"\r\nconst CHANGE_FORM_SUPPORTCAS = \"CHANGE_FORM_SUPPORTCAS\"\r\nconst INIT_ALL_LANDING_MODES = \"INIT_ALL_LANDING_MODES\"\r\nconst INIT_ALL_APP_TYPES = \"INIT_ALL_APP_TYPES\"\r\nconst INIT_ALL_SUPPORT_CAS = \"INIT_ALL_SUPPORT_CAS\"\r\nconst SET_ICON_BASE64 = \"SET_ICON_BASE64\"\r\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\r\nconst CHANGE_FORM_EDIT_APP_ID = \"CHANGE_FORM_EDIT_APP_ID\"\r\nconst CHANGE_ROW_AUDIT_STATUS = \"CHANGE_ROW_AUDIT_STATUS\"\r\nconst EMPTY_ADD_VALUE = \"EMPTY_ADD_VALUE\"\r\n\r\nexport {\r\n  QUERY_APP_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_ROW_APP_ID,\r\n  CHANGE_FORM_APP_NAME,\r\n  CHANGE_FORM_URL,\r\n  CHANGE_FORM_DESCRIBES,\r\n  CHANGE_FORM_REDIRECTURL,\r\n  CHANGE_FORM_ICON,\r\n  CHANGE_FORM_APPTYPE,\r\n  CHANGE_FORM_AUDITMODE,\r\n  CHANGE_FORM_LANDINGMODES,\r\n  CHANGE_FORM_SUPPORTCAS,\r\n  INIT_ALL_LANDING_MODES,\r\n  INIT_ALL_APP_TYPES,\r\n  INIT_ALL_SUPPORT_CAS,\r\n  SET_ICON_BASE64,\r\n  CHANGE_SAVE_LOADING,\r\n  CHANGE_FORM_EDIT_APP_ID,\r\n  CHANGE_ROW_AUDIT_STATUS,\r\n  EMPTY_ADD_VALUE,\r\n}","const INIT_MENUS = \"INIT_MENUS\";\r\n\r\nexport { INIT_MENUS };","const CHANGE_LOGIN_LOADING = 'CHANGE_LOGIN_LOADING';\r\n\r\nexport { CHANGE_LOGIN_LOADING }","const QUERY_LIST = \"QUERY_LIST\"\r\nconst QUERY_DOCCATALOG_LIST = \"QUERY_DOCCATALOG_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst INIT_PRODUCT_ALL_LIST = \"INIT_PRODUCT_ALL_LIST\"\r\nconst SET_EDIT_CATALOGO_CODE = \"SET_EDIT_CATALOGO_CODE\"\r\n\r\n\r\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\r\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\r\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\r\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\r\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\r\n\r\nexport {\r\n  QUERY_LIST,\r\n  QUERY_DOCCATALOG_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  INIT_PRODUCT_ALL_LIST,\r\n  SET_EDIT_CATALOGO_CODE,\r\n\r\n  CHANGE_EDIT_TITLE,\r\n  CHANGE_EDIT_CONTENT,\r\n  CHANGE_EDIT_REFTITLE,\r\n  INIT_NOTICE_DETAIL,\r\n  CHANGE_EDIT_STATE,\r\n}","const QUERY_USER_LIST = \"QUERY_USER_LIST\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\r\nconst INIT_SELECTED_ROLES = \"INIT_SELECTED_ROLES\"\r\nconst CHANGE_ROLE_MODAL_VISIBLE = \"CHANGE_ROLE_MODAL_VISIBLE\"\r\nconst INIT_ROLE_ALL_LIST = \"INIT_ROLE_ALL_LIST\"\r\nconst INIT_ROLE_ADMINID = \"INIT_ROLE_ADMINID\"\r\nconst CHANGE_CONFIRMLOADING_ROLE = \"CHANGE_CONFIRMLOADING_ROLE\"\r\n\r\nexport {\r\n  QUERY_USER_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_CONFIRM_LOADING,\r\n  INIT_SELECTED_ROLES,\r\n  CHANGE_ROLE_MODAL_VISIBLE,\r\n  INIT_ROLE_ALL_LIST,\r\n  INIT_ROLE_ADMINID,\r\n  CHANGE_CONFIRMLOADING_ROLE,\r\n}","const INIT_ORG_LIST = \"INIT_ORG_LIST\"\r\nconst SET_ORG_NAME = \"SET_ORG_NAME\"\r\nconst SET_ORG_CODE = \"SET_ORG_CODE\"\r\nconst SET_ORG_DESC = \"SET_ORG_DESC\"\r\nconst INIT_FORM_VALUES = \"INIT_FORM_VALUES\"\r\nconst INIT_ORG_TREE_DATA = \"INIT_ORG_TREE_DATA\"\r\nconst SET_EDIT_TREE_VALUE = \"SET_EDIT_TREE_VALUE\"\r\nconst CHANGE_SAVE_LOADING = \"CHANGE_SAVE_LOADING\"\r\n\r\nexport {\r\n  INIT_ORG_LIST,\r\n  SET_ORG_NAME,\r\n  SET_ORG_CODE,\r\n  SET_ORG_DESC,\r\n  INIT_FORM_VALUES,\r\n  INIT_ORG_TREE_DATA,\r\n  SET_EDIT_TREE_VALUE,\r\n  CHANGE_SAVE_LOADING,\r\n}","const INIT_LIST = \"INIT_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_EDIT_AUTH_NAME = \"CHANGE_EDIT_AUTH_NAME\"\r\nconst CHANGE_EDIT_URL = \"CHANGE_EDIT_URL\"\r\nconst CHANGE_AUTH_LEVE = \"CHANGE_AUTH_LEVE\"\r\nconst CHANGE_AUTH_STYLE = \"CHANGE_AUTH_STYLE\"\r\nconst CHANGE_EDIT_STATUS = \"CHANGE_EDIT_STATUS\"\r\nconst CLEAN_FORM = \"CLEAN_FORM\"\r\n\r\n\r\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\r\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\r\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\r\n\r\n\r\n\r\nexport {\r\n  INIT_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_EDIT_AUTH_NAME,\r\n  CHANGE_EDIT_URL,\r\n  CHANGE_AUTH_LEVE,\r\n  CHANGE_AUTH_STYLE,\r\n  CHANGE_EDIT_STATUS,\r\n  CLEAN_FORM,\r\n\r\n  CHANGE_EDIT_CONTENT,\r\n  CHANGE_EDIT_REFTITLE,\r\n  INIT_NOTICE_DETAIL,\r\n}","import * as types from './actionTypes';\r\n\r\nconst defaultState = {\r\n  menus: [],\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case types.INIT_MENUS:\r\n      newState.menus = action.menus\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes'\r\nconst defaultState = {\r\n  collapsed: false,\r\n  adminInfo: null\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case types.CHANGE_MENU_COLLAPSED:\r\n      newState.collapsed = !newState.collapsed\r\n      break;\r\n    case types.INIT_ADMIN_INFO:\r\n      newState.adminInfo = action.adminInfo\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  roleAllList: [],\r\n  pagination: {},\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  roleModalVisible: false,\r\n  record: {},\r\n  spinning: false,\r\n  params: {},\r\n  ConfirmLoading: false,\r\n  ConfirmLoadingRole: false,\r\n  selectedRoles: [],\r\n  roleAdminId: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_USER_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.operationType = action.operationType\r\n      newState.addModalvisible = action.addModalvisible\r\n      newState.record = action.record\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.ConfirmLoading = action.ConfirmLoading\r\n      break;\r\n    case types.INIT_SELECTED_ROLES:\r\n      newState.selectedRoles = action.selectedRoles\r\n      break;\r\n    case types.CHANGE_ROLE_MODAL_VISIBLE:\r\n      newState.roleModalVisible = action.roleModalVisible\r\n      break;\r\n    case types.INIT_ROLE_ALL_LIST:\r\n      newState.roleAllList = action.roleAllList\r\n      break;\r\n    case types.INIT_ROLE_ADMINID:\r\n      newState.roleAdminId = action.roleAdminId\r\n      break;\r\n    case types.CHANGE_CONFIRMLOADING_ROLE:\r\n      newState.ConfirmLoadingRole = action.ConfirmLoadingRole\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes'\r\nconst defaultState = {\r\n  loginLoading: false\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case types.CHANGE_LOGIN_LOADING:\r\n      newState.loginLoading = action.loginLoading\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  record: {},\r\n  spinning: false,\r\n  menuModalvisible: false,\r\n  menuList: [],\r\n  checkedKeys: [],\r\n  selectedRoleId: \"\",\r\n  ConfirmLoading: false,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_ROLE_LIST:\r\n      newState.list = action.list\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.operationType = action.operationType\r\n      newState.addModalvisible = action.addModalvisible\r\n      newState.record = action.record\r\n      break;\r\n    case types.CHANGE_MENU_MODAL_VISIBLE:\r\n      newState.menuModalvisible = action.menuModalvisible\r\n      newState.selectedRoleId = action.selectedRoleId\r\n      newState.checkedKeys = action.checkedKeys\r\n      break;\r\n    case types.INIT_MENU_LIST:\r\n      newState.menuList = action.menuList\r\n      break;\r\n    case types.CHANGE_CHECKED_KEYS_ACTION:\r\n      newState.checkedKeys = action.checkedKeys\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.ConfirmLoading = action.ConfirmLoading\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}\r\n","import * as types from './actionTypes';\r\nconst defaultState = {\r\n  list: [],\r\n  sliderMenuList: [],\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  editModalvisible: false,\r\n  editRecord: null,\r\n  spinning: false,\r\n  addConfirmLoading: false,\r\n  editConfirmLoading: false,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case types.CHANGE_ADD_CONFIRM_LOADING:\r\n      newState.addConfirmLoading = action.addConfirmLoading\r\n      break;\r\n    case types.CHANGE_EDIT_CONFIRM_LOADING:\r\n      newState.editConfirmLoading = action.editConfirmLoading\r\n      break;\r\n    case types.INIT_MENU_LIST:\r\n      newState.list = action.list\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.addModalvisible = action.addModalvisible\r\n      break;\r\n    case types.CHANGE_EDIT_MODAL_VISIBLE:\r\n      newState.editModalvisible = action.editModalvisible\r\n      break;\r\n    case types.CHANGE_EDIT_RECORD:\r\n      newState.editRecord = action.editRecord\r\n      break;\r\n    case types.INIT_SLIDER_MENU_LIST:\r\n      newState.sliderMenuList = action.sliderMenuList\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  spinning: false,\r\n  params: {},\r\n\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case 'NAV_TO':\r\n      newState.NAV_TO = action.NAV_TO\r\n      break;\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_USER_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  rowAppId: null,\r\n  form: {\r\n    appName: \"\",\r\n    url: \"\",\r\n    describes: \"\",\r\n    redirectUrl: \"\",\r\n    appType: \"\",\r\n    auditMode: \"\",\r\n    landingModes: [],\r\n    supportCAs: [],\r\n  },\r\n  iconBase64: \"\",\r\n  editLoading: false,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_APP_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_ROW_APP_ID:\r\n      newState.rowAppId = action.rowAppId\r\n      break;\r\n    //修改表单值\r\n    case types.CHANGE_FORM_APP_NAME:\r\n      newState.form.appName = action.appName\r\n      break;\r\n    case types.CHANGE_FORM_URL:\r\n      newState.form.url = action.url\r\n      break;\r\n    case types.CHANGE_FORM_DESCRIBES:\r\n      newState.form.describes = action.describes\r\n      break;\r\n    case types.CHANGE_FORM_REDIRECTURL:\r\n      newState.form.redirectUrl = action.redirectUrl\r\n      break;\r\n    case types.CHANGE_FORM_ICON:\r\n      newState.form.icon = action.icon\r\n      break;\r\n    case types.CHANGE_FORM_APPTYPE:\r\n      newState.form.appType = action.appType\r\n      break;\r\n    case types.CHANGE_FORM_AUDITMODE:\r\n      newState.form.auditMode = action.auditMode\r\n      break;\r\n    case types.CHANGE_FORM_LANDINGMODES:\r\n      newState.form.landingModes = action.landingModes\r\n      break;\r\n    case types.CHANGE_FORM_SUPPORTCAS:\r\n      newState.form.supportCAs = action.supportCAs\r\n      break;\r\n    case types.INIT_ALL_LANDING_MODES:\r\n      newState.form.allLandingModes = action.allLandingModes\r\n      break;\r\n    case types.INIT_ALL_APP_TYPES:\r\n      newState.form.allAppTypes = action.allAppTypes\r\n      break;\r\n    case types.INIT_ALL_SUPPORT_CAS:\r\n      newState.form.allSupportCAs = action.allSupportCAs\r\n      break;\r\n    case types.SET_ICON_BASE64:\r\n      newState.iconBase64 = action.iconBase64\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading\r\n      break;\r\n    case types.CHANGE_FORM_EDIT_APP_ID:\r\n      newState.form.editAppId = action.editAppId\r\n      break;\r\n    case types.CHANGE_ROW_AUDIT_STATUS:\r\n      newState.rowauditStatus = action.rowauditStatus\r\n      break;\r\n    case types.EMPTY_ADD_VALUE:\r\n      newState.form.appName = \"\"\r\n      newState.form.url = \"\"\r\n      newState.form.describes = \"\"\r\n      newState.form.redirectUrl = \"\"\r\n      newState.form.appType = \"\"\r\n      newState.form.auditMode = \"\"\r\n      newState.form.landingModes = []\r\n      newState.form.supportCAs = []\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}\r\n","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  ConfirmLoading: false,\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  record: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_DICT_TYPE_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.ConfirmLoading = action.ConfirmLoading\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.operationType = action.operationType\r\n      newState.addModalvisible = action.addModalvisible\r\n      newState.record = action.record\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  typeList: [],\r\n  dataList: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  ConfirmLoading: false,\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  record: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_DICT_TYPE_LIST:\r\n      newState.typeList = action.typeList\r\n      break;\r\n    case types.QUERY_DICT_DATA_LIST:\r\n      newState.dataList = action.dataList\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.ConfirmLoading = action.ConfirmLoading\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.operationType = action.operationType\r\n      newState.addModalvisible = action.addModalvisible\r\n      newState.record = action.record\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  editTitle: \"\",\r\n  editContent: \"\",\r\n  editState: \"\",\r\n  detailInfo: null,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_NOTICE_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_EDIT_TITLE:\r\n      newState.editTitle = action.editTitle\r\n      break;\r\n    case types.CHANGE_EDIT_CONTENT:\r\n      newState.editContent = action.editContent\r\n      break;\r\n    case types.INIT_NOTICE_DETAIL:\r\n      newState.detailInfo = action.detailInfo\r\n      break;\r\n    case types.CHANGE_EDIT_STATE:\r\n      newState.editState = action.editState\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nconst defaultState = {\r\n  list: [],\r\n  spinning: false,\r\n  editParentOrgName: \"\",\r\n  editPid: 100000000,\r\n  editPorgCode: \"\",\r\n  editOrgName: \"\",\r\n  editOrgCode: \"\",\r\n  editOrgDesc: \"\",\r\n  editId: \"\",\r\n  treeList: [],\r\n  saveLoading: false,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case types.INIT_ORG_LIST:\r\n      newState.list = action.list\r\n      break;\r\n    case types.SET_ORG_NAME:\r\n      newState.editOrgName = action.editOrgName\r\n      break;\r\n    case types.SET_ORG_CODE:\r\n      newState.editOrgCode = action.editOrgCode\r\n      break;\r\n    case types.SET_ORG_DESC:\r\n      newState.editOrgDesc = action.editOrgDesc\r\n      break;\r\n    case types.INIT_FORM_VALUES:\r\n      newState.editOrgName = action.record.orgName\r\n      newState.editOrgCode = action.record.orgCode\r\n      newState.editOrgDesc = action.record.orgDesc\r\n      newState.editId = action.record.id\r\n      newState.editPid = action.record.pid\r\n      newState.editPorgCode = action.record.porgCode\r\n      break;\r\n    case types.INIT_ORG_TREE_DATA:\r\n      newState.treeList = action.treeList\r\n      break;\r\n    case types.SET_EDIT_TREE_VALUE:\r\n      newState.editPorgCode = action.tree.orgCode\r\n      newState.editPid = action.tree.id\r\n      break;\r\n    case types.CHANGE_SAVE_LOADING:\r\n      newState.saveLoading = action.saveLoading\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_CERT_LIST:\r\n      newState.list = action.list\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  ConfirmLoading: false,\r\n  operationType: \"\",\r\n  addModalvisible: false,\r\n  record: {},\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_DICT_TYPE_LIST:\r\n      newState.typeList = action.typeList\r\n      break;\r\n    case types.QUERY_DICT_DATA_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_CONFIRM_LOADING:\r\n      newState.ConfirmLoading = action.ConfirmLoading\r\n      break;\r\n    case types.CHANGE_ADD_MODAL_VISIBLE:\r\n      newState.operationType = action.operationType\r\n      newState.addModalvisible = action.addModalvisible\r\n      newState.record = action.record\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  editAuthName: \"\",\r\n  editURL: \"\",\r\n  editAuthLevel: \"\",\r\n  editAuthStyle: \"\",\r\n  editStatus: \"\"\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.INIT_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.CHANGE_EDIT_AUTH_NAME:\r\n      newState.editAuthName = action.editAuthName\r\n      break;\r\n    case types.CHANGE_EDIT_URL:\r\n      newState.editURL = action.editURL\r\n      break;\r\n    case types.CHANGE_AUTH_LEVE:\r\n      newState.editAuthLevel = action.editAuthLevel\r\n      break;\r\n    case types.CHANGE_AUTH_STYLE:\r\n      newState.editAuthStyle = action.editAuthStyle\r\n      break;\r\n    case types.CHANGE_EDIT_STATUS:\r\n      newState.editStatus = action.editStatus\r\n      break;\r\n    case types.CLEAN_FORM:\r\n      newState.editAuthName = \"\"\r\n      newState.editURL = \"\"\r\n      newState.editAuthLevel = \"\"\r\n      newState.editAuthStyle = \"\"\r\n      newState.editStatus = \"\"\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  productList: [],\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  editProductCode: \"\",\r\n  editName: \"\",\r\n  editOrders: \"\",\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.INIT_LIST:\r\n      newState.list = action.list\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.INIT_PRODUCT_LIST:\r\n      newState.productList = action.productList\r\n      break;\r\n    case types.CHANGE_EDIT_PRODUCT_CODE:\r\n      newState.editProductCode = action.editProductCode\r\n      break;\r\n    case types.CHANGE_EDIT_NAME:\r\n      newState.editName = action.editName\r\n      break;\r\n    case types.CHANGE_EDIT_ORDERS:\r\n      newState.editOrders = action.editOrders\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import * as types from './actionTypes';\r\nimport spinningTypes from 'pages/common/layer/spinning/spinningTypes';\r\n\r\nconst defaultState = {\r\n  list: [],\r\n  productAllList: [],\r\n  docCatalogList: [],\r\n  editCatalogCode: \"\",\r\n  pagination: {},\r\n  spinning: false,\r\n  params: {},\r\n  editTitle: \"\",\r\n  editContent: \"<p>请输入文档内容!</b></p>\",\r\n  editState: \"\",\r\n  detailInfo: null,\r\n};\r\n\r\nexport default (state = defaultState, action) => {\r\n  let newState = JSON.parse(JSON.stringify(state))\r\n  switch (action.type) {\r\n    case spinningTypes:\r\n      newState.spinning = action.spinning\r\n      break;\r\n    case types.QUERY_LIST:\r\n      newState.list = action.list\r\n      newState.pagination = action.pagination\r\n      break;\r\n    case types.CHANGE_SEARCH_PARAMS:\r\n      newState.params = action.params\r\n      break;\r\n    case types.QUERY_DOCCATALOG_LIST:\r\n      newState.docCatalogList = action.docCatalogList\r\n      break;\r\n    case types.SET_EDIT_CATALOGO_CODE:\r\n      newState.editCatalogCode = action.editCatalogCode\r\n      break;\r\n\r\n    case types.INIT_PRODUCT_ALL_LIST:\r\n      newState.productAllList = action.productAllList;\r\n      break;\r\n    case types.CHANGE_EDIT_TITLE:\r\n      newState.editTitle = action.editTitle\r\n      break;\r\n    case types.CHANGE_EDIT_CONTENT:\r\n      newState.editContent = action.editContent\r\n      break;\r\n    case types.INIT_NOTICE_DETAIL:\r\n      newState.detailInfo = action.detailInfo\r\n      break;\r\n    case types.CHANGE_EDIT_STATE:\r\n      newState.editState = action.editState\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return newState\r\n}","import sliderReducer from 'pages/common/menu/store/reducer';\r\nimport headReducer from 'pages/common/header/store/reducer';\r\nimport adminReducer from 'pages/admin/store/reducer';\r\nimport loginReducer from 'pages/login/store/reducer';\r\nimport roleReducer from 'pages/role/store/reducer';\r\nimport menuReducer from 'pages/menu/store/reducer';\r\nimport userReducer from 'pages/user/store/reducer';\r\nimport appReducer from 'pages/app/store/reducer';\r\nimport dictTypeReducer from 'pages/dictType/store/reducer';\r\nimport dictDataReducer from 'pages/dictData/store/reducer';\r\nimport noticeReducer from 'pages/notice/store/reducer';\r\nimport orgReducer from 'pages/org/store/reducer';\r\nimport certReducer from 'pages/cert/store/reducer';\r\nimport productReducer from 'pages/product/store/reducer';\r\nimport certificationReducer from 'pages/certification/store/reducer';\r\nimport docCatalogReducer from 'pages/docCatalog/store/reducer';\r\nimport docReducer from 'pages/doc/store/reducer';\r\n\r\nexport default {\r\n  login: loginReducer,\r\n  slider: sliderReducer,\r\n  header: headReducer,\r\n  admin: adminReducer,\r\n  role: roleReducer,\r\n  menu: menuReducer,\r\n  user: userReducer,\r\n  app: appReducer,\r\n  dictType: dictTypeReducer,\r\n  dictData: dictDataReducer,\r\n  notice: noticeReducer,\r\n  org: orgReducer,\r\n  cert: certReducer,\r\n  product: productReducer,\r\n  certification: certificationReducer,\r\n  docCatalog: docCatalogReducer,\r\n  doc: docReducer,\r\n};","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers'\r\n//import { routerMiddleware } from 'react-router-redux';\r\n\r\n// let createHistory = require('history').createHashHistory;\r\n// let history = createHistory();   // 初始化history\r\n// let routerWare = routerMiddleware(history);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst reducer = combineReducers(reducers);\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store;\r\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { Spin } from 'antd';\n\n\nconst Login = lazy(() => import('pages/login/Login'));\nconst Home = lazy(() => import('pages/index/IndexHome'));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div>\n        <Router>\n          <Suspense fallback={<Spin />}>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Suspense>\n        </Router>\n      </div>\n    </Provider>\n  )\n\n}\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport './reset.css';\nimport './static/plugins/gzca/css/gzca.css';\nimport App from './App';\nimport {ConfigProvider } from 'antd';\n\nconst app = () => (\n  <ConfigProvider locale={zhCN}>\n    <App />\n  </ConfigProvider>\n)\n\nReactDOM.render(app(), document.getElementById('root'));\n","const INIT_MENU_LIST = \"QUERY_MENU_LIST\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\nconst CHANGE_ADD_CONFIRM_LOADING = \"CHANGE_ADD_CONFIRM_LOADING\"\r\nconst CHANGE_EDIT_CONFIRM_LOADING = \"CHANGE_EDIT_CONFIRM_LOADING\"\r\nconst CHANGE_EDIT_MODAL_VISIBLE = \"CHANGE_EDIT_MODAL_VISIBLE\"\r\nconst CHANGE_EDIT_RECORD = \"CHANGE_EDIT_RECORD\"\r\nconst INIT_SLIDER_MENU_LIST = \"INIT_SLIDER_MENU_LIST\"\r\n\r\n\r\nexport {\r\n  INIT_MENU_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n  CHANGE_ADD_CONFIRM_LOADING,\r\n  CHANGE_EDIT_CONFIRM_LOADING,\r\n  CHANGE_EDIT_MODAL_VISIBLE,\r\n  CHANGE_EDIT_RECORD,\r\n  INIT_SLIDER_MENU_LIST,\r\n}","const QUERY_NOTICE_LIST = \"QUERY_NOTICE_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_EDIT_TITLE = \"CHANGE_EDIT_TITLE\"\r\nconst CHANGE_EDIT_CONTENT = \"CHANGE_EDIT_CONTENT\"\r\nconst CHANGE_EDIT_REFTITLE = \"CHANGE_EDIT_REFTITLE\"\r\nconst INIT_NOTICE_DETAIL = \"INIT_NOTICE_DETAIL\"\r\nconst CHANGE_EDIT_STATE = \"CHANGE_EDIT_STATE\"\r\n\r\nexport {\r\n  QUERY_NOTICE_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_EDIT_TITLE,\r\n  CHANGE_EDIT_CONTENT,\r\n  CHANGE_EDIT_REFTITLE,\r\n  INIT_NOTICE_DETAIL,\r\n  CHANGE_EDIT_STATE,\r\n}","const INIT_LIST = \"INIT_LIST\"\r\nconst INIT_PRODUCT_LIST = \"INIT_PRODUCT_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_EDIT_PRODUCT_CODE = \"CHANGE_EDIT_PRODUCT_CODE\"\r\nconst CHANGE_EDIT_NAME = \"CHANGE_EDIT_NAME\"\r\nconst CHANGE_EDIT_ORDERS = \"CHANGE_EDIT_ORDERS\"\r\n\r\n\r\nexport {\r\n  INIT_LIST,\r\n  INIT_PRODUCT_LIST,\r\n  CHANGE_SEARCH_PARAMS,\r\n  CHANGE_EDIT_PRODUCT_CODE,\r\n  CHANGE_EDIT_NAME,\r\n  CHANGE_EDIT_ORDERS,\r\n}","const QUERY_ROLE_LIST = \"QUERY_ROLE_LIST\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\nconst CHANGE_MENU_MODAL_VISIBLE = \"CHANGE_MENU_MODAL_VISIBLE\"\r\nconst INIT_MENU_LIST = \"INIT_MENU_LIST\"\r\nconst CHANGE_CHECKED_KEYS_ACTION = \"CHANGE_CHECKED_KEYS_ACTION\"\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\r\n\r\nexport {\r\n  QUERY_ROLE_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n  CHANGE_MENU_MODAL_VISIBLE,\r\n  INIT_MENU_LIST,\r\n  CHANGE_CHECKED_KEYS_ACTION,\r\n  CHANGE_CONFIRM_LOADING,\r\n}","const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\nconst QUERY_DICT_DATA_LIST = \"QUERY_DICT_DATA_LIST\"\r\nexport {\r\n  CHANGE_CONFIRM_LOADING,\r\n  QUERY_DICT_TYPE_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n  QUERY_DICT_DATA_LIST,\r\n\r\n  CHANGE_SEARCH_PARAMS\r\n}","const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\nconst QUERY_DICT_DATA_LIST = \"QUERY_DICT_DATA_LIST\"\r\nexport {\r\n  CHANGE_CONFIRM_LOADING,\r\n  QUERY_DICT_TYPE_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n  QUERY_DICT_DATA_LIST,\r\n\r\n  CHANGE_SEARCH_PARAMS\r\n}","const QUERY_DICT_TYPE_LIST = \"QUERY_DICT_TYPE_LIST\"\r\nconst CHANGE_SEARCH_PARAMS = \"CHANGE_SEARCH_PARAMS\"\r\nconst CHANGE_CONFIRM_LOADING = \"CHANGE_CONFIRM_LOADING\"\r\nconst CHANGE_ADD_MODAL_VISIBLE = \"CHANGE_ADD_MODAL_VISIBLE\"\r\n\r\nexport {\r\n  CHANGE_CONFIRM_LOADING,\r\n  QUERY_DICT_TYPE_LIST,\r\n  CHANGE_ADD_MODAL_VISIBLE,\r\n\r\n  CHANGE_SEARCH_PARAMS\r\n}"],"sourceRoot":""}