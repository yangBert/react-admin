{"version":3,"sources":["pages/org/css/add.module.css","pages/org/components/OrgAdd.js","pages/common/layer/spinning/index.js","pages/org/store/creators.js"],"names":["module","exports","TextArea","OrgAdd","onChangeTreeSelect","value","label","extra","props","setTreeValue","triggerNode","list","this","location","state","initTree","record","initValues","history","goBack","editOrgName","editOrgCode","editOrgDesc","$$","trim","req","data","orgName","orgCode","orgDesc","userNo","porgCode","editPorgCode","pid","editPid","editId","id","save","error","className","styles","pageContet","tip","spinning","title","bordered","form","formLine","inline","style","width","dropdownStyle","maxHeight","overflow","treeData","treeList","placeholder","treeDefaultExpandAll","onChange","e","setOrgName","target","setOrgCode","setOrgDesc","rows","formButton","editAppId","type","size","formbtn","onClick","submit","loading","saveLoading","backButton","Component","connect","org","editParentOrgName","dispatch","action","creators","CHANGE_SPINNING","changeSaveLoadingAction","types","initOrgTreeAction","createAddOrgAction","url","requestURL","request","res","success","message","notification","push","implementTreeData","i","length","key","children","queryOrgListAction","spinningAction","implementMenusData","treeAction","updateOrgUpdateAction","pageNo","pageSize","initTreeAction","initValuesAction","setOrgNameAction","setOrgCodeAction","setOrgDescAction","setTreeValueAction","tree"],"mappings":"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","file":"static/js/36.07d7ff6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"childTitle\":\"add_childTitle__-Kym8\",\"tit\":\"add_tit__2QnEw\",\"pageContet\":\"add_pageContet__29M7E\",\"form\":\"add_form__2KByr\",\"formLine\":\"add_formLine__3nfXN\",\"inline\":\"add_inline__3_XkU\",\"formButton\":\"add_formButton__1wa0o\",\"formbtn\":\"add_formbtn__oBGkf\"};","import React, { Component } from 'react';\r\nimport { Spin, Input, Button, message, Form, Card, TreeSelect } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport * as creators from '../store/creators';\r\nimport styles from '../css/add.module.css';\r\nimport $$ from 'static/js/base';\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass OrgAdd extends Component {\r\n  componentDidMount() {\r\n\r\n    const list = this.props.location.state && this.props.location.state.list\r\n    if (list) {\r\n      this.props.initTree(list)\r\n    }\r\n    const record = this.props.location.state && this.props.location.state.record\r\n    if (record) {\r\n      this.props.initValues(record)\r\n    }\r\n  }\r\n  backButton() {\r\n    this.props.history.goBack()\r\n  }\r\n  submit() {\r\n    const { editOrgName, editOrgCode, editOrgDesc } = this.props;\r\n    if ($$.trim(editOrgName) === \"\") {\r\n      message.error('请填写机构名称');\r\n      return\r\n    } else if ($$.trim(editOrgCode) === \"\") {\r\n      message.error('请填机构编码');\r\n      return\r\n    } else if ($$.trim(editOrgDesc) === \"\") {\r\n      message.error('请填机构描述');\r\n      return\r\n    }\r\n\r\n    const req = {\r\n      props: this.props,\r\n      data: {\r\n        orgName: $$.trim(editOrgName),\r\n        orgCode: $$.trim(editOrgCode),\r\n        orgDesc: $$.trim(editOrgDesc),\r\n        userNo: \"070005201808011100000000334452\",\r\n        porgCode: this.props.editPorgCode || \"gzca0O0rg\",\r\n        pid: this.props.editPid,\r\n      }\r\n    }\r\n\r\n    const editId = this.props.editId\r\n    if (editId) {\r\n      req.data.id = editId\r\n    }\r\n    this.props.save(req)\r\n  }\r\n\r\n  onChangeTreeSelect = (value, label, extra) => {\r\n    this.props.setTreeValue(extra.triggerNode.props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.pageContet} pageContentColor`}>\r\n        <Spin tip=\"Loading...\" spinning={this.props.spinning}>\r\n          <div className=\"pageContentColor\">\r\n            <Card title=\"基本信息\" bordered={false}>\r\n              <Form className={`${styles.form} clearfix`}>\r\n                <div className={`${styles.formLine} pullLeft`}><label className=\"pullLeft\">请选上级择机构：</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n\r\n                    {/* <Input\r\n                      placeholder=\"请输入机构名称\"\r\n                      onChange={e => this.props.setOrgName(e.target.value)}\r\n                      value={this.props.editOrgName}\r\n                    /> */}\r\n                    <TreeSelect\r\n                      style={{ width: '100%' }}\r\n                      value={this.props.editPorgCode}\r\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                      treeData={this.props.treeList}\r\n                      placeholder=\"请选择机构\"\r\n                      treeDefaultExpandAll\r\n                      onChange={this.onChangeTreeSelect}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={`${styles.formLine} pullLeft`}><label className=\"pullLeft\">机构名称：</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n\r\n                    <Input\r\n                      placeholder=\"请输入机构名称\"\r\n                      onChange={e => this.props.setOrgName(e.target.value)}\r\n                      value={this.props.editOrgName}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={`${styles.formLine} pullLeft`}><label className=\"pullLeft\">机构编码：</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n                    <Input\r\n                      placeholder=\"请输入机构编码\"\r\n                      //ref={refurl => this.setState({ refurl })}\r\n                      onChange={e => this.props.setOrgCode(e.target.value)}\r\n                      value={this.props.editOrgCode}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className={`${styles.formLine} pullLeft`}><label className=\"pullLeft\">机构描述：</label>\r\n                  <div className={`${styles.inline} pullLeft`}>\r\n                    <TextArea\r\n                      placeholder=\"请输入机构描述\"\r\n                      value={this.props.editOrgDesc}\r\n                      onChange={e => this.props.setOrgDesc(e.target.value)}\r\n                      rows={2}></TextArea>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n          </div >\r\n\r\n          <div className={styles.formButton}>\r\n            {this.props.editAppId ? \"\" :\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"large\"\r\n                className={styles.formbtn}\r\n                onClick={() => this.submit()}\r\n                loading={this.props.saveLoading}\r\n              >保存</Button>\r\n            }\r\n            <Button\r\n              size=\"large\"\r\n              type=\"primary\"\r\n              className={styles.formbtn}\r\n              onClick={() => this.backButton()}\r\n            >返回列表</Button>\r\n          </div>\r\n        </Spin>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapState = state => ({\r\n  saveLoading: state.org.saveLoading,\r\n  spinning: state.org.spinning,\r\n  editPid: state.org.editPid,\r\n  editPorgCode: state.org.editPorgCode,\r\n  editParentOrgName: state.org.editParentOrgName,\r\n  editOrgName: state.org.editOrgName,\r\n  editOrgCode: state.org.editOrgCode,\r\n  editOrgDesc: state.org.editOrgDesc,\r\n  editId: state.org.editId,\r\n  treeList: state.org.treeList,\r\n})\r\n\r\nconst mapDispatch = dispatch => ({\r\n  setTreeValue: req => {\r\n    const action = creators.setTreeValueAction(req);\r\n    dispatch(action);\r\n  },\r\n  setOrgName: req => {\r\n    const action = creators.setOrgNameAction(req);\r\n    dispatch(action);\r\n  },\r\n  setOrgCode: req => {\r\n    const action = creators.setOrgCodeAction(req);\r\n    dispatch(action);\r\n  },\r\n  setOrgDesc: req => {\r\n    const action = creators.setOrgDescAction(req);\r\n    dispatch(action);\r\n  },\r\n  save: req => {\r\n    const action = creators.createAddOrgAction(req);\r\n    dispatch(action);\r\n  },\r\n  initValues: req => {\r\n    const action = creators.initValuesAction(req);\r\n    dispatch(action);\r\n  },\r\n  initTree: req => {\r\n    const action = creators.initTreeAction(req);\r\n    dispatch(action);\r\n  }\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(OrgAdd);","import CHANGE_SPINNING from './spinningTypes'\r\n\r\nexport default spinning => ({\r\n  type: CHANGE_SPINNING,\r\n  spinning\r\n})\r\n","import * as types from './actionTypes';\r\nimport * as requestURL from 'static/js/requestURL';\r\nimport * as request from 'static/js/request';\r\nimport spinningAction from 'pages/common/layer/spinning';\r\nimport notification from 'pages/common/layer/notification';\r\n\r\n//保存按钮Loading\r\nconst changeSaveLoadingAction = (saveLoading) => ({\r\n  type: types.CHANGE_SAVE_LOADING,\r\n  saveLoading,\r\n})\r\n\r\n//初始化机构列表\r\nconst initOrgAction = (list) => ({\r\n  type: types.INIT_ORG_LIST,\r\n  list,\r\n})\r\n\r\n//初始化机构树数据\r\nconst initOrgTreeAction = (treeList) => ({\r\n  type: types.INIT_ORG_TREE_DATA,\r\n  treeList,\r\n})\r\n\r\n//新增机构\r\nconst createAddOrgAction = req => {\r\n  return dispatch => {\r\n    let url;\r\n    if (req.data.id) {\r\n      url = requestURL.orgUpdateOrg\r\n    } else {\r\n      url = requestURL.orgAddOrg\r\n    }\r\n    dispatch(changeSaveLoadingAction(true))\r\n    request.json(url, req.data, res => {\r\n      dispatch(changeSaveLoadingAction(false))\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data\r\n        if (success) {\r\n          notification('success', message)\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n\r\n//处理菜单查询返回数据---删除空children\r\nfunction implementMenusData(data) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].children && data[i].children.length > 0) {\r\n      implementMenusData(data[i].children)\r\n    } else if (data[i].children && data[i].children.length === 0) {\r\n      delete data[i].children\r\n    }\r\n  }\r\n  return data\r\n}\r\n\r\n//机构树数据处理\r\nfunction implementTreeData(data) {\r\n  for (let i = 0; i < data.length; i++) {\r\n\r\n    data[i].title = data[i].orgName\r\n    data[i].value = data[i].orgCode\r\n    data[i].key = data[i].id\r\n    if (data[i].children && data[i].children.length > 0) {\r\n      implementTreeData(data[i].children)\r\n    }\r\n  }\r\n  return data\r\n}\r\n\r\n//查询机构\r\nconst queryOrgListAction = req => {\r\n  return dispatch => {\r\n    dispatch(spinningAction(true))\r\n    request.json(requestURL.orgQueryAllOrgTree, req.data, res => {\r\n      dispatch(spinningAction(false))\r\n      if (res.data) {\r\n        const { success, message, data } = res.data && res.data\r\n        if (success) {\r\n          const action = initOrgAction(implementMenusData(data))\r\n          const treeAction = initOrgTreeAction(implementTreeData(implementTreeData(data)))\r\n          dispatch(action)\r\n          dispatch(treeAction)\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//修改机构状态\r\nconst updateOrgUpdateAction = req => {\r\n  return dispatch => {\r\n    request.json(requestURL.orgUpdateOrgState, req.data, res => {\r\n      if (res.data) {\r\n        const { success, message } = res.data && res.data\r\n        if (success) {\r\n          const action = queryOrgListAction({ props: req.props, data: { pageNo: 1, pageSize: 10 } })\r\n          dispatch(action)\r\n        } else {\r\n          notification('error', message)\r\n        }\r\n      } else {\r\n        req.props.history.push(\"/500\")\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n//机构树数据处理\r\nconst initTreeAction = req => {\r\n  return dispatch => {\r\n    const treeAction = initOrgTreeAction(implementTreeData(implementTreeData(req)))\r\n    dispatch(treeAction)\r\n  }\r\n}\r\n\r\n\r\n//初始化表单\r\nconst initValuesAction = record => ({\r\n  type: types.INIT_FORM_VALUES,\r\n  record,\r\n})\r\n\r\n//改变表单机构名称\r\nconst setOrgNameAction = editOrgName => ({\r\n  type: types.SET_ORG_NAME,\r\n  editOrgName,\r\n})\r\n\r\n//改变表单机构编码\r\nconst setOrgCodeAction = editOrgCode => ({\r\n  type: types.SET_ORG_CODE,\r\n  editOrgCode,\r\n})\r\n\r\n//改变表单机构描述\r\nconst setOrgDescAction = editOrgDesc => ({\r\n  type: types.SET_ORG_DESC,\r\n  editOrgDesc,\r\n})\r\n\r\n//改变表单机构树\r\nconst setTreeValueAction = tree => ({\r\n  type: types.SET_EDIT_TREE_VALUE,\r\n  tree,\r\n})\r\n\r\n\r\nexport {\r\n  queryOrgListAction,\r\n  createAddOrgAction,\r\n  setOrgNameAction,\r\n  setOrgCodeAction,\r\n  setOrgDescAction,\r\n  initValuesAction,\r\n  setTreeValueAction,\r\n  initTreeAction,\r\n  changeSaveLoadingAction,\r\n  updateOrgUpdateAction,\r\n}"],"sourceRoot":""}